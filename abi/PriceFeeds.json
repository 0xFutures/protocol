{
  "contractName": "PriceFeeds",
  "abi": [
    {
      "inputs": [
        {
          "name": "_internal",
          "type": "address"
        },
        {
          "name": "_external",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "marketName",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "active",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"marketName\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_internal\",\"type\":\"address\"},{\"name\":\"_external\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Interface to market prices for the CFD contract.\\r Abstracts away the logic of reading from various market sources.\\r\"}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":\"PriceFeeds\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0x3fcf0d97ad97399402274b04b62f704f714bd84e0cf8d173337cdc983f1e8608\",\"urls\":[\"bzzr://30f2233a4e3d87dc3a395f921d8aed6139f911bbfb1677fa696a39639bcd005b\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0xf01dc763fb887a782d5423789b9ff56889cea67765352d06733bbf83a0da369f\",\"urls\":[\"bzzr://c58ef6b2675aad3950367786073213c0f124705ef567bbf3c058db3f384a1071\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsExternal.sol\":{\"keccak256\":\"0x153fd7aee60aceadae0f9184f5bd9c5da754717271422cb9fcd865e4ee0259e1\",\"urls\":[\"bzzr://5aae071063b61ff9c9b419415a1e62540225d9929f2284d6648044bb7d8d5724\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsInternal.sol\":{\"keccak256\":\"0x89902441c5dd11a546d38c0e8ccbf4e163dc10a609cd3c0ab4b021e9b2a90c0d\",\"urls\":[\"bzzr://5679d5873d793e9103648639e1fb62a7b6bba7f187ac0f7762ec178294353f00\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516040806108618339810180604052604081101561003057600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b031991821617909155600180549390921692169190911790556107ea806100776000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806361da14391461004657806377d7c52914610075578063f4463db514610107575b600080fd5b6100636004803603602081101561005c57600080fd5b5035610138565b60408051918252519081900360200190f35b6100926004803603602081101561008b57600080fd5b5035610456565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100cc5781810151838201526020016100b4565b50505050905090810190601f1680156100f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101246004803603602081101561011d57600080fd5b503561067f565b604080519115158252519081900360200190f35b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d60208110156101b257600080fd5b5051156102385760005460408051600160e01b6361da14390281526004810185905281516001600160a01b03909316926361da143992602480840193919291829003018186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d604081101561022f57600080fd5b505190506103d1565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561028757600080fd5b505afa15801561029b573d6000803e3d6000fd5b505050506040513d60208110156102b157600080fd5b5051156103315760015460408051600160e01b6361da14390281526004810185905290516001600160a01b03909216916361da143991602480820192602092909190829003018186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d602081101561022f57600080fd5b6040518060600160405280602e8152602001610791602e9139604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039657818101518382015260200161037e565b50505050905090810190601f1680156103c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b8061045157604080518082018252601481527f4d61726b6574207072696365206973207a65726f00000000000000000000000060208083019182529251600160e51b62461bcd028152600481019384528251602482015282519293928392604490920191908083836000831561039657818101518382015260200161037e565b919050565b60005460408051600160e01b63f4463db50281526004810184905290516060926001600160a01b03169163f4463db5916024808301926020929190829003018186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d60208110156104cf57600080fd5b5051156105b0576000805460408051600160e21b63106554850281526004810186905290516001600160a01b0390921692634195521492602480840193829003018186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561055d57600080fd5b81019080805164010000000081111561057557600080fd5b8201602081018481111561058857600080fd5b81516401000000008111828201871017156105a257600080fd5b509094506104519350505050565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d602081101561062957600080fd5b5051156103315760015460408051600160e21b63106554850281526004810185905290516001600160a01b0390921691634195521491602480820192600092909190829003018186803b15801561052057600080fd5b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d60208110156106f957600080fd5b50511561070857506001610451565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561075757600080fd5b505afa15801561076b573d6000803e3d6000fd5b505050506040513d602081101561078157600080fd5b5051156104515750600191905056fe50726963652072657175657374656420666f7220696e616374697665206f7220756e6b6e6f776e206d61726b6574a165627a7a7230582047d9c5af8627d5dcfdb9d14ff5f52ae4a0aa02bb1ad1deef515581d2d85416ce0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806361da14391461004657806377d7c52914610075578063f4463db514610107575b600080fd5b6100636004803603602081101561005c57600080fd5b5035610138565b60408051918252519081900360200190f35b6100926004803603602081101561008b57600080fd5b5035610456565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100cc5781810151838201526020016100b4565b50505050905090810190601f1680156100f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101246004803603602081101561011d57600080fd5b503561067f565b604080519115158252519081900360200190f35b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d60208110156101b257600080fd5b5051156102385760005460408051600160e01b6361da14390281526004810185905281516001600160a01b03909316926361da143992602480840193919291829003018186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d604081101561022f57600080fd5b505190506103d1565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561028757600080fd5b505afa15801561029b573d6000803e3d6000fd5b505050506040513d60208110156102b157600080fd5b5051156103315760015460408051600160e01b6361da14390281526004810185905290516001600160a01b03909216916361da143991602480820192602092909190829003018186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d602081101561022f57600080fd5b6040518060600160405280602e8152602001610791602e9139604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039657818101518382015260200161037e565b50505050905090810190601f1680156103c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b8061045157604080518082018252601481527f4d61726b6574207072696365206973207a65726f00000000000000000000000060208083019182529251600160e51b62461bcd028152600481019384528251602482015282519293928392604490920191908083836000831561039657818101518382015260200161037e565b919050565b60005460408051600160e01b63f4463db50281526004810184905290516060926001600160a01b03169163f4463db5916024808301926020929190829003018186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d60208110156104cf57600080fd5b5051156105b0576000805460408051600160e21b63106554850281526004810186905290516001600160a01b0390921692634195521492602480840193829003018186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561055d57600080fd5b81019080805164010000000081111561057557600080fd5b8201602081018481111561058857600080fd5b81516401000000008111828201871017156105a257600080fd5b509094506104519350505050565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d602081101561062957600080fd5b5051156103315760015460408051600160e21b63106554850281526004810185905290516001600160a01b0390921691634195521491602480820192600092909190829003018186803b15801561052057600080fd5b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d60208110156106f957600080fd5b50511561070857506001610451565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561075757600080fd5b505afa15801561076b573d6000803e3d6000fd5b505050506040513d602081101561078157600080fd5b5051156104515750600191905056fe50726963652072657175657374656420666f7220696e616374697665206f7220756e6b6e6f776e206d61726b6574a165627a7a7230582047d9c5af8627d5dcfdb9d14ff5f52ae4a0aa02bb1ad1deef515581d2d85416ce0029",
  "sourceMap": "233:1753:12:-;;;519:175;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:175:12;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;519:175:12;;;;;;;587:12;:44;;-1:-1:-1;;;;;587:44:12;;;-1:-1:-1;;;;;;587:44:12;;;;;;;;642;;;;;;;;;;;;;;233:1753;;;;;;",
  "deployedSourceMap": "233:1753:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:1753:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:501;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;702:501:12;;:::i;:::-;;;;;;;;;;;;;;;;1211:436;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1211:436:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1211:436:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:326;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:326:12;;:::i;:::-;;;;;;;;;;;;;;;;;;702:501;783:10;815:12;;:38;;;-1:-1:-1;;;;;815:38:12;;;;;;;;;;-1:-1:-1;;;;;815:12:12;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;815:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;815:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;815:38:12;811:298;;;882:12;;:28;;;-1:-1:-1;;;;;882:28:12;;;;;;;;;;-1:-1:-1;;;;;882:12:12;;;;:17;;:28;;;;;;;;;;;;;:12;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;882:28:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;882:28:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;882:28:12;;-1:-1:-1;811:298:12;;;932:12;;:38;;;-1:-1:-1;;;;;932:38:12;;;;;;;;;;-1:-1:-1;;;;;932:12:12;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;932:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;932:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;932:38:12;928:181;;;995:12;;:28;;;-1:-1:-1;;;;;995:28:12;;;;;;;;;;-1:-1:-1;;;;;995:12:12;;;;:17;;:28;;;;;;;;;;;;;;;:12;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;995:28:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;995:28:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;928:181:12;1063:33;;;;;;;;;;;;;;;;;1056:41;;-1:-1:-1;;;;;1056:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1056:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:181;1125:10;1121:75;;1159:24;;;;;;;;;;;;;;;;;;;1152:32;;-1:-1:-1;;;;;1152:32:12;;;;;;;;;;;;;;;;1159:24;;1152:32;;;;;;;;1159:24;1152:32;;1159:24;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1121:75:12;702:501;;;:::o;1211:436::-;1338:12;;:38;;;-1:-1:-1;;;;;1338:38:12;;;;;;;;;;1298:18;;-1:-1:-1;;;;;1338:12:12;;:27;;:38;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1338:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1338:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1338:38:12;1334:306;;;1400:12;;;:35;;;-1:-1:-1;;;;;1400:35:12;;;;;;;;;;-1:-1:-1;;;;;1400:12:12;;;;:24;;:35;;;;;;;;;;:12;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;1400:35:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1400:35:12;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1400:35:12;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1400:35:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;1400:35:12;;-1:-1:-1;1334:306:12;;-1:-1:-1;;;;1334:306:12;;1457:12;;:38;;;-1:-1:-1;;;;;1457:38:12;;;;;;;;;;-1:-1:-1;;;;;1457:12:12;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1457:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1457:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1457:38:12;1453:187;;;1519:12;;:35;;;-1:-1:-1;;;;;1519:35:12;;;;;;;;;;-1:-1:-1;;;;;1519:12:12;;;;:24;;:35;;;;;:12;;:35;;;;;;;;:12;:35;;;5:2:-1;;;;30:1;27;20:12;1655:326:12;1746:11;1804:12;;:38;;;-1:-1:-1;;;;;1804:38:12;;;;;;;;;;-1:-1:-1;;;;;1804:12:12;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1804:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1804:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1804:38:12;1800:174;;;-1:-1:-1;1868:4:12;1800:174;;;1894:12;;:38;;;-1:-1:-1;;;;;1894:38:12;;;;;;;;;;-1:-1:-1;;;;;1894:12:12;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1894:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1894:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1894:38:12;1890:84;;;-1:-1:-1;1958:4:12;1655:326;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./PriceFeedsInternal.sol\";\r\nimport \"./PriceFeedsExternal.sol\";\r\n\r\n/**\r\n * Interface to market prices for the CFD contract.\r\n * Abstracts away the logic of reading from various market sources.\r\n */\r\ncontract PriceFeeds {\r\n    string constant REASON_MARKET_INACTIVE_OR_UNKNOWN = \"Price requested for inactive or unknown market\";\r\n    string constant REASON_MARKET_VALUE_ZERO = \"Market price is zero\";\r\n\r\n    PriceFeedsInternal feedInternal;\r\n    PriceFeedsExternal feedExternal;\r\n\r\n    constructor(address _internal, address _external) public {\r\n        feedInternal = PriceFeedsInternal(_internal);\r\n        feedExternal = PriceFeedsExternal(_external);\r\n    }\r\n\r\n    function read(bytes32 _marketId)\r\n        public\r\n        view\r\n        returns (uint value)\r\n    {\r\n        if (feedInternal.isMarketActive(_marketId)) {\r\n            (value, ) = feedInternal.read(_marketId);\r\n        } else if (feedExternal.isMarketActive(_marketId)) {\r\n            value = feedExternal.read(_marketId);\r\n        } else {\r\n            revert(REASON_MARKET_INACTIVE_OR_UNKNOWN);\r\n        }\r\n\r\n        if (value == 0) {\r\n            revert(REASON_MARKET_VALUE_ZERO);\r\n        }\r\n    }\r\n\r\n    function marketName(bytes32 _marketId)\r\n        public\r\n        view\r\n        returns (string memory name)\r\n    {\r\n        if (feedInternal.isMarketActive(_marketId)) {\r\n            name = feedInternal.marketNames(_marketId);\r\n        } else if (feedExternal.isMarketActive(_marketId)) {\r\n            name = feedExternal.marketNames(_marketId);\r\n        } else {\r\n            revert(REASON_MARKET_INACTIVE_OR_UNKNOWN);\r\n        }\r\n    }\r\n\r\n    function isMarketActive(bytes32 _marketId)\r\n        public\r\n        view\r\n        returns (bool active)\r\n    {\r\n        active = false;\r\n        if (feedInternal.isMarketActive(_marketId)) {\r\n            active = true;\r\n        } else if (feedExternal.isMarketActive(_marketId)) {\r\n            active = true;\r\n        }\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\feeds\\PriceFeeds.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-16T06:11:23.334Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Interface to market prices for the CFD contract.\r Abstracts away the logic of reading from various market sources.\r"
  }
}