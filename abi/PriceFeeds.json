{
  "contractName": "PriceFeeds",
  "abi": [
    {
      "inputs": [
        {
          "name": "_internal",
          "type": "address"
        },
        {
          "name": "_external",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "marketName",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "active",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"marketName\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_internal\",\"type\":\"address\"},{\"name\":\"_external\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Interface to market prices for the CFD contract. Abstracts away the logic of reading from various market sources.\"}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeeds.sol\":\"PriceFeeds\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol-master/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0x5ad3a6c629e76f46ec7ddea114cfcf0e1c52634c781b649e9379e30e2a9a61e8\",\"urls\":[\"bzzr://c75cbead25acede9b84b8bfe2931123261330773d91a13be0c1aa72049c4d26a\"]},\"/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeedsExternal.sol\":{\"keccak256\":\"0x374448d9bd3cd9d4d6def94590d3d43fd5b8084422aadc78b46db3d4f21b6edd\",\"urls\":[\"bzzr://a199b155f1e17b792066dc195376ebc3c0a7a886997f751ba312a9e98d1feef9\"]},\"/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeedsInternal.sol\":{\"keccak256\":\"0x73a923b47d0ef1f81948e6e24b94ca6b27a5b704c5aa3bd79559697cc8c3e11e\",\"urls\":[\"bzzr://6772987070a1b03eafefba2b04ffa09acbbd7f144edb2aac5b75bc5785e9ecbe\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516040806108618339810180604052604081101561003057600080fd5b508051602090910151600080546001600160a01b039384166001600160a01b031991821617909155600180549390921692169190911790556107ea806100776000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806361da14391461004657806377d7c52914610075578063f4463db514610107575b600080fd5b6100636004803603602081101561005c57600080fd5b5035610138565b60408051918252519081900360200190f35b6100926004803603602081101561008b57600080fd5b5035610456565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100cc5781810151838201526020016100b4565b50505050905090810190601f1680156100f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101246004803603602081101561011d57600080fd5b503561067f565b604080519115158252519081900360200190f35b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d60208110156101b257600080fd5b5051156102385760005460408051600160e01b6361da14390281526004810185905281516001600160a01b03909316926361da143992602480840193919291829003018186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d604081101561022f57600080fd5b505190506103d1565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561028757600080fd5b505afa15801561029b573d6000803e3d6000fd5b505050506040513d60208110156102b157600080fd5b5051156103315760015460408051600160e01b6361da14390281526004810185905290516001600160a01b03909216916361da143991602480820192602092909190829003018186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d602081101561022f57600080fd5b6040518060600160405280602e8152602001610791602e9139604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039657818101518382015260200161037e565b50505050905090810190601f1680156103c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b8061045157604080518082018252601481527f4d61726b6574207072696365206973207a65726f00000000000000000000000060208083019182529251600160e51b62461bcd028152600481019384528251602482015282519293928392604490920191908083836000831561039657818101518382015260200161037e565b919050565b60005460408051600160e01b63f4463db50281526004810184905290516060926001600160a01b03169163f4463db5916024808301926020929190829003018186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d60208110156104cf57600080fd5b5051156105b0576000805460408051600160e21b63106554850281526004810186905290516001600160a01b0390921692634195521492602480840193829003018186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561055d57600080fd5b81019080805164010000000081111561057557600080fd5b8201602081018481111561058857600080fd5b81516401000000008111828201871017156105a257600080fd5b509094506104519350505050565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d602081101561062957600080fd5b5051156103315760015460408051600160e21b63106554850281526004810185905290516001600160a01b0390921691634195521491602480820192600092909190829003018186803b15801561052057600080fd5b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d60208110156106f957600080fd5b50511561070857506001610451565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561075757600080fd5b505afa15801561076b573d6000803e3d6000fd5b505050506040513d602081101561078157600080fd5b5051156104515750600191905056fe50726963652072657175657374656420666f7220696e616374697665206f7220756e6b6e6f776e206d61726b6574a165627a7a723058206aeb0407e589b5b401e1d38ae0711462cbd11cab504ebd71d8a9d0ec02a940a50029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806361da14391461004657806377d7c52914610075578063f4463db514610107575b600080fd5b6100636004803603602081101561005c57600080fd5b5035610138565b60408051918252519081900360200190f35b6100926004803603602081101561008b57600080fd5b5035610456565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100cc5781810151838201526020016100b4565b50505050905090810190601f1680156100f95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101246004803603602081101561011d57600080fd5b503561067f565b604080519115158252519081900360200190f35b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561018857600080fd5b505afa15801561019c573d6000803e3d6000fd5b505050506040513d60208110156101b257600080fd5b5051156102385760005460408051600160e01b6361da14390281526004810185905281516001600160a01b03909316926361da143992602480840193919291829003018186803b15801561020557600080fd5b505afa158015610219573d6000803e3d6000fd5b505050506040513d604081101561022f57600080fd5b505190506103d1565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561028757600080fd5b505afa15801561029b573d6000803e3d6000fd5b505050506040513d60208110156102b157600080fd5b5051156103315760015460408051600160e01b6361da14390281526004810185905290516001600160a01b03909216916361da143991602480820192602092909190829003018186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d602081101561022f57600080fd5b6040518060600160405280602e8152602001610791602e9139604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039657818101518382015260200161037e565b50505050905090810190601f1680156103c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b8061045157604080518082018252601481527f4d61726b6574207072696365206973207a65726f00000000000000000000000060208083019182529251600160e51b62461bcd028152600481019384528251602482015282519293928392604490920191908083836000831561039657818101518382015260200161037e565b919050565b60005460408051600160e01b63f4463db50281526004810184905290516060926001600160a01b03169163f4463db5916024808301926020929190829003018186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d60208110156104cf57600080fd5b5051156105b0576000805460408051600160e21b63106554850281526004810186905290516001600160a01b0390921692634195521492602480840193829003018186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561055d57600080fd5b81019080805164010000000081111561057557600080fd5b8201602081018481111561058857600080fd5b81516401000000008111828201871017156105a257600080fd5b509094506104519350505050565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156105ff57600080fd5b505afa158015610613573d6000803e3d6000fd5b505050506040513d602081101561062957600080fd5b5051156103315760015460408051600160e21b63106554850281526004810185905290516001600160a01b0390921691634195521491602480820192600092909190829003018186803b15801561052057600080fd5b6000805460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d60208110156106f957600080fd5b50511561070857506001610451565b60015460408051600160e01b63f4463db50281526004810185905290516001600160a01b039092169163f4463db591602480820192602092909190829003018186803b15801561075757600080fd5b505afa15801561076b573d6000803e3d6000fd5b505050506040513d602081101561078157600080fd5b5051156104515750600191905056fe50726963652072657175657374656420666f7220696e616374697665206f7220756e6b6e6f776e206d61726b6574a165627a7a723058206aeb0407e589b5b401e1d38ae0711462cbd11cab504ebd71d8a9d0ec02a940a50029",
  "sourceMap": "224:1696:10:-;;;503:172;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:172:10;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;503:172:10;;;;;;;570:12;:44;;-1:-1:-1;;;;;570:44:10;;;-1:-1:-1;;;;;;570:44:10;;;;;;;;624;;;;;;;;;;;;;;224:1696;;;;;;",
  "deployedSourceMap": "224:1696:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:1696:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:485;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:485:10;;:::i;:::-;;;;;;;;;;;;;;;;1172:424;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1172:424:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1172:424:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1602:315:10;;:::i;:::-;;;;;;;;;;;;;;;;;;681:485;759:10;789:12;;:38;;;-1:-1:-1;;;;;789:38:10;;;;;;;;;;-1:-1:-1;;;;;789:12:10;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;789:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;789:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;789:38:10;785:292;;;855:12;;:28;;;-1:-1:-1;;;;;855:28:10;;;;;;;;;;-1:-1:-1;;;;;855:12:10;;;;:17;;:28;;;;;;;;;;;;;:12;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;855:28:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;855:28:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;855:28:10;;-1:-1:-1;785:292:10;;;904:12;;:38;;;-1:-1:-1;;;;;904:38:10;;;;;;;;;;-1:-1:-1;;;;;904:12:10;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;904:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;904:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;904:38:10;900:177;;;966:12;;:28;;;-1:-1:-1;;;;;966:28:10;;;;;;;;;;-1:-1:-1;;;;;966:12:10;;;;:17;;:28;;;;;;;;;;;;;;;:12;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;966:28:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;966:28:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;900:177:10;1032:33;;;;;;;;;;;;;;;;;1025:41;;-1:-1:-1;;;;;1025:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1025:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:177;1091:10;1087:73;;1124:24;;;;;;;;;;;;;;;;;;;1117:32;;-1:-1:-1;;;;;1117:32:10;;;;;;;;;;;;;;;;1124:24;;1117:32;;;;;;;;1124:24;1117:32;;1124:24;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1087:73:10;681:485;;;:::o;1172:424::-;1294:12;;:38;;;-1:-1:-1;;;;;1294:38:10;;;;;;;;;;1256:18;;-1:-1:-1;;;;;1294:12:10;;:27;;:38;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1294:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1294:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1294:38:10;1290:300;;;1355:12;;;:35;;;-1:-1:-1;;;;;1355:35:10;;;;;;;;;;-1:-1:-1;;;;;1355:12:10;;;;:24;;:35;;;;;;;;;;:12;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;1355:35:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1355:35:10;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1355:35:10;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1355:35:10;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;1355:35:10;;-1:-1:-1;1290:300:10;;-1:-1:-1;;;;1290:300:10;;1411:12;;:38;;;-1:-1:-1;;;;;1411:38:10;;;;;;;;;;-1:-1:-1;;;;;1411:12:10;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1411:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1411:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1411:38:10;1407:183;;;1472:12;;:35;;;-1:-1:-1;;;;;1472:35:10;;;;;;;;;;-1:-1:-1;;;;;1472:12:10;;;;:24;;:35;;;;;:12;;:35;;;;;;;;:12;:35;;;5:2:-1;;;;30:1;27;20:12;1602:315:10;1690:11;1745:12;;:38;;;-1:-1:-1;;;;;1745:38:10;;;;;;;;;;-1:-1:-1;;;;;1745:12:10;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1745:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1745:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1745:38:10;1741:170;;;-1:-1:-1;1808:4:10;1741:170;;;1833:12;;:38;;;-1:-1:-1;;;;;1833:38:10;;;;;;;;;;-1:-1:-1;;;;;1833:12:10;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1833:38:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1833:38:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1833:38:10;1829:82;;;-1:-1:-1;1896:4:10;1602:315;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./PriceFeedsInternal.sol\";\nimport \"./PriceFeedsExternal.sol\";\n\n/**\n * Interface to market prices for the CFD contract.\n * Abstracts away the logic of reading from various market sources.\n */\ncontract PriceFeeds {\n    string constant REASON_MARKET_INACTIVE_OR_UNKNOWN = \"Price requested for inactive or unknown market\";\n    string constant REASON_MARKET_VALUE_ZERO = \"Market price is zero\";\n\n    PriceFeedsInternal feedInternal;\n    PriceFeedsExternal feedExternal;\n\n    constructor(address _internal, address _external) public {\n        feedInternal = PriceFeedsInternal(_internal);\n        feedExternal = PriceFeedsExternal(_external);\n    }\n\n    function read(bytes32 _marketId)\n        public\n        view\n        returns (uint value)\n    {\n        if (feedInternal.isMarketActive(_marketId)) {\n            (value, ) = feedInternal.read(_marketId);\n        } else if (feedExternal.isMarketActive(_marketId)) {\n            value = feedExternal.read(_marketId);\n        } else {\n            revert(REASON_MARKET_INACTIVE_OR_UNKNOWN);\n        }\n\n        if (value == 0) {\n            revert(REASON_MARKET_VALUE_ZERO);\n        }\n    }\n\n    function marketName(bytes32 _marketId)\n        public\n        view\n        returns (string memory name)\n    {\n        if (feedInternal.isMarketActive(_marketId)) {\n            name = feedInternal.marketNames(_marketId);\n        } else if (feedExternal.isMarketActive(_marketId)) {\n            name = feedExternal.marketNames(_marketId);\n        } else {\n            revert(REASON_MARKET_INACTIVE_OR_UNKNOWN);\n        }\n    }\n\n    function isMarketActive(bytes32 _marketId)\n        public\n        view\n        returns (bool active)\n    {\n        active = false;\n        if (feedInternal.isMarketActive(_marketId)) {\n            active = true;\n        } else if (feedExternal.isMarketActive(_marketId)) {\n            active = true;\n        }\n    }\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeeds.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-06-04T07:06:18.957Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Interface to market prices for the CFD contract. Abstracts away the logic of reading from various market sources."
  }
}