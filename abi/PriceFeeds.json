{
  "contractName": "PriceFeeds",
  "abi": [
    {
      "inputs": [
        {
          "name": "_internal",
          "type": "address"
        },
        {
          "name": "_external",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "marketName",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "active",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516040806109388339810180604052604081101561003057600080fd5b50805160209091015160008054600160a060020a03938416600160a060020a031991821617909155600180549390921692169190911790556108c1806100776000396000f3fe6080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166361da1439811461005b57806377d7c52914610097578063f4463db514610136575b600080fd5b34801561006757600080fd5b506100856004803603602081101561007e57600080fd5b5035610174565b60408051918252519081900360200190f35b3480156100a357600080fd5b506100c1600480360360208110156100ba57600080fd5b503561052f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014257600080fd5b506101606004803603602081101561015957600080fd5b5035610784565b604080519115158252519081900360200190f35b600080546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156101c457600080fd5b505afa1580156101d8573d6000803e3d6000fd5b505050506040513d60208110156101ee57600080fd5b50511561028a57600054604080517f61da1439000000000000000000000000000000000000000000000000000000008152600481018590528151600160a060020a03909316926361da143992602480840193919291829003018186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d604081101561028157600080fd5b5051905061048f565b6001546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156102d957600080fd5b505afa1580156102ed573d6000803e3d6000fd5b505050506040513d602081101561030357600080fd5b50511561039957600154604080517f61da1439000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a03909216916361da143991602480820192602092909190829003018186803b15801561036f57600080fd5b505afa158015610383573d6000803e3d6000fd5b505050506040513d602081101561028157600080fd5b60408051606081018252602e81527f50726963652072657175657374656420666f7220696e616374697665206f722060208083019182527f756e6b6e6f776e206d61726b65740000000000000000000000000000000000008385015292517f08c379a00000000000000000000000000000000000000000000000000000000081526004810193845282516024820152825192939283926044909201919080838360005b8381101561045457818101518382015260200161043c565b50505050905090810190601f1680156104815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b80151561052a57604080518082018252601481527f4d61726b6574207072696365206973207a65726f000000000000000000000000602080830191825292517f08c379a00000000000000000000000000000000000000000000000000000000081526004810193845282516024820152825192939283926044909201919080838360008381101561045457818101518382015260200161043c565b919050565b6000546040805160e060020a63f4463db5028152600481018490529051606092600160a060020a03169163f4463db5916024808301926020929190829003018186803b15801561057e57600080fd5b505afa158015610592573d6000803e3d6000fd5b505050506040513d60208110156105a857600080fd5b50511561069f5760008054604080517f41955214000000000000000000000000000000000000000000000000000000008152600481018690529051600160a060020a0390921692634195521492602480840193829003018186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561064c57600080fd5b81019080805164010000000081111561066457600080fd5b8201602081018481111561067757600080fd5b815164010000000081118282018710171561069157600080fd5b5090945061052a9350505050565b6001546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156106ee57600080fd5b505afa158015610702573d6000803e3d6000fd5b505050506040513d602081101561071857600080fd5b50511561039957600154604080517f41955214000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a0390921691634195521491602480820192600092909190829003018186803b15801561060f57600080fd5b600080546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b50511561080d5750600161052a565b6001546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d602081101561088657600080fd5b50511561052a5750600191905056fea165627a7a723058205d9d354feb20729976a40a4018e82295ab36d0648a1df31df383857ea57732d80029",
  "deployedBytecode": "0x6080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166361da1439811461005b57806377d7c52914610097578063f4463db514610136575b600080fd5b34801561006757600080fd5b506100856004803603602081101561007e57600080fd5b5035610174565b60408051918252519081900360200190f35b3480156100a357600080fd5b506100c1600480360360208110156100ba57600080fd5b503561052f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014257600080fd5b506101606004803603602081101561015957600080fd5b5035610784565b604080519115158252519081900360200190f35b600080546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156101c457600080fd5b505afa1580156101d8573d6000803e3d6000fd5b505050506040513d60208110156101ee57600080fd5b50511561028a57600054604080517f61da1439000000000000000000000000000000000000000000000000000000008152600481018590528151600160a060020a03909316926361da143992602480840193919291829003018186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d604081101561028157600080fd5b5051905061048f565b6001546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156102d957600080fd5b505afa1580156102ed573d6000803e3d6000fd5b505050506040513d602081101561030357600080fd5b50511561039957600154604080517f61da1439000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a03909216916361da143991602480820192602092909190829003018186803b15801561036f57600080fd5b505afa158015610383573d6000803e3d6000fd5b505050506040513d602081101561028157600080fd5b60408051606081018252602e81527f50726963652072657175657374656420666f7220696e616374697665206f722060208083019182527f756e6b6e6f776e206d61726b65740000000000000000000000000000000000008385015292517f08c379a00000000000000000000000000000000000000000000000000000000081526004810193845282516024820152825192939283926044909201919080838360005b8381101561045457818101518382015260200161043c565b50505050905090810190601f1680156104815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b80151561052a57604080518082018252601481527f4d61726b6574207072696365206973207a65726f000000000000000000000000602080830191825292517f08c379a00000000000000000000000000000000000000000000000000000000081526004810193845282516024820152825192939283926044909201919080838360008381101561045457818101518382015260200161043c565b919050565b6000546040805160e060020a63f4463db5028152600481018490529051606092600160a060020a03169163f4463db5916024808301926020929190829003018186803b15801561057e57600080fd5b505afa158015610592573d6000803e3d6000fd5b505050506040513d60208110156105a857600080fd5b50511561069f5760008054604080517f41955214000000000000000000000000000000000000000000000000000000008152600481018690529051600160a060020a0390921692634195521492602480840193829003018186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561064c57600080fd5b81019080805164010000000081111561066457600080fd5b8201602081018481111561067757600080fd5b815164010000000081118282018710171561069157600080fd5b5090945061052a9350505050565b6001546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156106ee57600080fd5b505afa158015610702573d6000803e3d6000fd5b505050506040513d602081101561071857600080fd5b50511561039957600154604080517f41955214000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a0390921691634195521491602480820192600092909190829003018186803b15801561060f57600080fd5b600080546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b50511561080d5750600161052a565b6001546040805160e060020a63f4463db5028152600481018590529051600160a060020a039092169163f4463db591602480820192602092909190829003018186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d602081101561088657600080fd5b50511561052a5750600191905056fea165627a7a723058205d9d354feb20729976a40a4018e82295ab36d0648a1df31df383857ea57732d80029",
  "sourceMap": "224:1707:8:-;;;503:172;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:172:8;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;503:172:8;;;;;;;570:12;:44;;-1:-1:-1;;;;;570:44:8;;;-1:-1:-1;;;;;;570:44:8;;;;;;;;624;;;;;;;;;;;;;;224:1707;;;;;;",
  "deployedSourceMap": "224:1707:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:488;;8:9:-1;5:2;;;30:1;27;20:12;5:2;681:488:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;681:488:8;;;;;;;;;;;;;;;;;;;1175:428;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1175:428:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1175:428:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1175:428:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1609:319:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1609:319:8;;;;;;;;;;;;;;;;;;;;;681:488;761:10;792:12;;:38;;;-1:-1:-1;;;;;792:38:8;;;;;;;;;;-1:-1:-1;;;;;792:12:8;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;792:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;792:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;792:38:8;788:292;;;858:12;;:28;;;;;;;;;;;;;;-1:-1:-1;;;;;858:12:8;;;;:17;;:28;;;;;;;;;;;;;:12;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;858:28:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;858:28:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;858:28:8;;-1:-1:-1;788:292:8;;;907:12;;:38;;;-1:-1:-1;;;;;907:38:8;;;;;;;;;;-1:-1:-1;;;;;907:12:8;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;907:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;907:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;907:38:8;903:177;;;969:12;;:28;;;;;;;;;;;;;;-1:-1:-1;;;;;969:12:8;;;;:17;;:28;;;;;;;;;;;;;;;:12;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;969:28:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;969:28:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;903:177:8;1035:33;;;;;;;;;;;;;;;;;;;;;;;;1028:41;;;;;;;;;;;;;;;;;;;1035:33;;1028:41;;;;;;;;1035:33;1028:41;;1035:33;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1028:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;903:177;1094:10;;1090:73;;;1127:24;;;;;;;;;;;;;;;;;;;1120:32;;;;;;;;;;;;;;;;;;;1127:24;;1120:32;;;;;;;;1127:24;1120:32;;1127:24;-1:-1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1090:73:8;681:488;;;:::o;1175:428::-;1301:12;;:38;;;-1:-1:-1;;;;;1301:38:8;;;;;;;;;;1262:18;;-1:-1:-1;;;;;1301:12:8;;:27;;:38;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1301:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1301:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1301:38:8;1297:300;;;1362:12;;;:35;;;;;;;;;;;;;;-1:-1:-1;;;;;1362:12:8;;;;:24;;:35;;;;;;;;;;:12;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;1362:35:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1362:35:8;;;;;;39:16:-1;36:1;17:17;2:54;101:4;1362:35:8;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;1362:35:8;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;1362:35:8;;-1:-1:-1;1297:300:8;;-1:-1:-1;;;;1297:300:8;;1418:12;;:38;;;-1:-1:-1;;;;;1418:38:8;;;;;;;;;;-1:-1:-1;;;;;1418:12:8;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1418:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1418:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1418:38:8;1414:183;;;1479:12;;:35;;;;;;;;;;;;;;-1:-1:-1;;;;;1479:12:8;;;;:24;;:35;;;;;:12;;:35;;;;;;;;:12;:35;;;5:2:-1;;;;30:1;27;20:12;1609:319:8;1700:11;1756:12;;:38;;;-1:-1:-1;;;;;1756:38:8;;;;;;;;;;-1:-1:-1;;;;;1756:12:8;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1756:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1756:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1756:38:8;1752:170;;;-1:-1:-1;1819:4:8;1752:170;;;1844:12;;:38;;;-1:-1:-1;;;;;1844:38:8;;;;;;;;;;-1:-1:-1;;;;;1844:12:8;;;;:27;;:38;;;;;;;;;;;;;;;:12;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;1844:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1844:38:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1844:38:8;1840:82;;;-1:-1:-1;1907:4:8;1609:319;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./PriceFeedsInternal.sol\";\nimport \"./PriceFeedsExternal.sol\";\n\n/**\n * Interface to market prices for the CFD contract.\n * Abstracts away the logic of reading from various market sources.\n */\ncontract PriceFeeds {\n    string constant REASON_MARKET_INACTIVE_OR_UNKNOWN = \"Price requested for inactive or unknown market\";\n    string constant REASON_MARKET_VALUE_ZERO = \"Market price is zero\";\n\n    PriceFeedsInternal feedInternal;\n    PriceFeedsExternal feedExternal;\n\n    constructor(address _internal, address _external) public {\n        feedInternal = PriceFeedsInternal(_internal);\n        feedExternal = PriceFeedsExternal(_external);\n    }\n\n    function read(bytes32 _marketId)\n        public \n        view \n        returns (uint value) \n    {\n        if (feedInternal.isMarketActive(_marketId)) {\n            (value, ) = feedInternal.read(_marketId);\n        } else if (feedExternal.isMarketActive(_marketId)) {\n            value = feedExternal.read(_marketId);\n        } else {\n            revert(REASON_MARKET_INACTIVE_OR_UNKNOWN);\n        }\n\n        if (value == 0) {\n            revert(REASON_MARKET_VALUE_ZERO);\n        }\n    }\n\n    function marketName(bytes32 _marketId) \n        public \n        view \n        returns (string memory name) \n    {\n        if (feedInternal.isMarketActive(_marketId)) {\n            name = feedInternal.marketNames(_marketId);\n        } else if (feedExternal.isMarketActive(_marketId)) {\n            name = feedExternal.marketNames(_marketId);\n        } else {\n            revert(REASON_MARKET_INACTIVE_OR_UNKNOWN);\n        }\n    }\n\n    function isMarketActive(bytes32 _marketId) \n        public \n        view \n        returns (bool active) \n    {\n        active = false;\n        if (feedInternal.isMarketActive(_marketId)) {\n            active = true;\n        } else if (feedExternal.isMarketActive(_marketId)) {\n            active = true;\n        }\n    }\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeeds.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-21T18:18:05.748Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Interface to market prices for the CFD contract. Abstracts away the logic of reading from various market sources."
  }
}