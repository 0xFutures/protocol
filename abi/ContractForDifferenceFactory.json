{
  "contractName": "ContractForDifferenceFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "forwardFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdModel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeds",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_cfdModel",
          "type": "address"
        },
        {
          "name": "_forwardFactory",
          "type": "address"
        },
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNew",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCFDAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oldCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNewByUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdModel",
          "type": "address"
        }
      ],
      "name": "setCFDModel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdRegistry",
          "type": "address"
        }
      ],
      "name": "setCFDRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_forwardFactory",
          "type": "address"
        }
      ],
      "name": "setForwardFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "name": "setFeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountWei",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createByUpgrade",
      "outputs": [
        {
          "name": "newCfd",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100c15763ffffffff60e060020a6000350416630fa7f84081146100c6578063165ae0fc146100f857806338874a1a146101005780635fd355eb14610115578063715018a61461012a57806377b727ac146101415780637b103999146101565780637dc532c51461016b5780638da5cb5b1461018c5780639255e0d6146101a1578063a91ee0dc146101c2578063abcca75e146101e3578063c03cced314610204578063d63605b814610225578063f2fde38b1461023a575b600080fd5b6100dc600435602435604435606435151561025b565b60408051600160a060020a039092168252519081900360200190f35b6100dc610508565b34801561010c57600080fd5b506100dc610d4b565b34801561012157600080fd5b506100dc610d5a565b34801561013657600080fd5b5061013f610d69565b005b34801561014d57600080fd5b506100dc610dc8565b34801561016257600080fd5b506100dc610dd7565b34801561017757600080fd5b5061013f600160a060020a0360043516610de6565b34801561019857600080fd5b506100dc610e1f565b3480156101ad57600080fd5b5061013f600160a060020a0360043516610e2e565b3480156101ce57600080fd5b5061013f600160a060020a0360043516610e67565b3480156101ef57600080fd5b5061013f600160a060020a0360043516610ea0565b34801561021057600080fd5b5061013f600160a060020a0360043516610ed9565b34801561023157600080fd5b506100dc610f12565b34801561024657600080fd5b5061013f600160a060020a0360043516610f21565b60048054600254604080517f9193ba0b000000000000000000000000000000000000000000000000000000008152600160a060020a03928316948101949094525160009333939290921691639193ba0b91602480830192602092919082900301818887803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b505050506040513d60208110156102f657600080fd5b5051600154600354600554604080517f5df0d4cd000000000000000000000000000000000000000000000000000000008152600160a060020a039485166004820152928416602484015290831660448301528483166064830152608482018a905260a4820189905260c4820188905286151560e48301525192945090841691635df0d4cd91349161010480830192600092919082900301818588803b15801561039e57600080fd5b505af11580156103b2573d6000803e3d6000fd5b5050600154604080517f76d00fd8000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015291519190921694506376d00fd893506024808301935060009282900301818387803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505060408051600160a060020a038681168252915191851693508992507f2d0c41699a808fef3dcfaa411d95703031d69229e73f5f3299fd6045deb4f962919081900360200190a3600354604080517f0596030d000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152848116602483015291519190921691630596030d91604480830192600092919082900301818387803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b5050505050949350505050565b60008060008030600160a060020a0316600160009054906101000a9004600160a060020a0316600160a060020a03166323ec7f2a6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b505160408051606081018252603081527f43616e206f6e6c792075706772616465206f6e206120666163746f727920746860208201527f617420697320746865206c6174657374000000000000000000000000000000009181019190915291600160a060020a03909116146106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561066557818101518382015260200161064d565b50505050905090810190601f1680156106925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600154604080517f0c5a95f800000000000000000000000000000000000000000000000000000000815233600482018190529151919550600160a060020a0390921691630c5a95f8916024808301926020929190829003018186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d602081101561073357600080fd5b50519150600160a060020a038216158015906107585750600160a060020a0382163014155b60408051808201909152601f81527f43616c6c6572206d75737420626520612072656769737465726564204346440060208201529015156107f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360008381101561066557818101518382015260200161064d565b5082905080600160a060020a03166341c20c8e6040518163ffffffff1660e060020a02815260040160206040518083038186803b15801561083557600080fd5b505afa158015610849573d6000803e3d6000fd5b505050506040513d602081101561085f57600080fd5b505160408051606081018252602181527f7570677261646561626c65206973206e6f742073657420696e2074686520434660208201527f440000000000000000000000000000000000000000000000000000000000000091810191909152901515610926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360008381101561066557818101518382015260200161064d565b5060048054600254604080517f9193ba0b000000000000000000000000000000000000000000000000000000008152600160a060020a039283169481019490945251911691639193ba0b9160248083019260209291908290030181600087803b15801561099257600080fd5b505af11580156109a6573d6000803e3d6000fd5b505050506040513d60208110156109bc57600080fd5b5051600354604080517f7150d8ae0000000000000000000000000000000000000000000000000000000081529051929650600160a060020a0391821692630596030d92889290861691637150d8ae91600480820192602092909190829003018186803b158015610a2b57600080fd5b505afa158015610a3f573d6000803e3d6000fd5b505050506040513d6020811015610a5557600080fd5b50516040805160e060020a63ffffffff8616028152600160a060020a03938416600482015292909116602483015251604480830192600092919082900301818387803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b5050600154600354600554604080517f2802759b000000000000000000000000000000000000000000000000000000008152600160a060020a038a81166004830152948516602482015292841660448401529083166064830152519188169350632802759b92503491608480830192600092919082900301818588803b158015610b4157600080fd5b505af1158015610b55573d6000803e3d6000fd5b5050600154604080517f76d00fd8000000000000000000000000000000000000000000000000000000008152600160a060020a038a8116600483015291519190921694506376d00fd893506024808301935060009282900301818387803b158015610bbf57600080fd5b505af1158015610bd3573d6000803e3d6000fd5b5050505083600160a060020a0316637150d8ae6040518163ffffffff1660e060020a02815260040160206040518083038186803b158015610c1357600080fd5b505afa158015610c27573d6000803e3d6000fd5b505050506040513d6020811015610c3d57600080fd5b5051604080517f80f556050000000000000000000000000000000000000000000000000000000081529051600160a060020a03928316928716916380f55605916004808301926020929190829003018186803b158015610c9c57600080fd5b505afa158015610cb0573d6000803e3d6000fd5b505050506040513d6020811015610cc657600080fd5b505160408051600160a060020a038816815290517f2d0c41699a808fef3dcfaa411d95703031d69229e73f5f3299fd6045deb4f9629181900360200190a360408051600160a060020a0383811682529151918616917fe77178664194a5b1c28f6ee0f3fcb6d4404d796abfdf7edee18b68617768f48a9181900360200190a250505090565b600454600160a060020a031681565b600354600160a060020a031681565b600054600160a060020a03163314610d8057600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a260008054600160a060020a0319169055565b600254600160a060020a031681565b600154600160a060020a031681565b600054600160a060020a03163314610dfd57600080fd5b60058054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a031681565b600054600160a060020a03163314610e4557600080fd5b60038054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314610e7e57600080fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314610eb757600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b600054600160a060020a03163314610ef057600080fd5b60048054600160a060020a031916600160a060020a0392909216919091179055565b600554600160a060020a031681565b600054600160a060020a03163314610f3857600080fd5b610f4181610f44565b50565b600160a060020a0381161515610f5957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360008054600160a060020a031916600160a060020a03929092169190911790555600a165627a7a72305820e7f45254bf16d27d17b19b15900580d9c52c9242bda37782561ffe7ee3732fd00029",
  "sourceMap": "294:4416:6:-;;;1037:287;8:9:-1;5:2;;;30:1;27;20:12;5:2;1037:287:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:5:10;:18;;-1:-1:-1;;;;;;567:18:10;575:10;567:18;;;1037:287:6;;;1189:22;1037:287;1189:11;;;;:22;:::i;:::-;1222;1234:9;1222:11;;;;:22;:::i;:::-;1255:34;1273:15;1255:17;;;;:34;:::i;:::-;1300:16;1309:6;1300:8;;;;:16;:::i;:::-;1037:287;;;;294:4416;;1332:106;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1400:8:6;:30;;-1:-1:-1;;;;;;1400:30:6;-1:-1:-1;;;;;1400:30:6;;;;;;;;;;1332:106::o;1446:96::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1514:8:6;:20;;-1:-1:-1;;;;;;1514:20:6;-1:-1:-1;;;;;1514:20:6;;;;;;;;;;1446:96::o;1666:120::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1746:14:6;:32;;-1:-1:-1;;;;;;1746:32:6;-1:-1:-1;;;;;1746:32:6;;;;;;;;;;1666:120::o;1794:84::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1856:5:6;:14;;-1:-1:-1;;;;;;1856:14:6;-1:-1:-1;;;;;1856:14:6;;;;;;;;;;1794:84::o;294:4416::-;;;;;;;",
  "deployedSourceMap": "294:4416:6:-;;;;;;;;;-1:-1:-1;;;294:4416:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2281:811;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2281:811:6;;;;;;;;;;;;;;3312:1393;;;;972:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:29:6;;;;939:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;939:26:6;;;;1001:111:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:10;;;;;;909:23:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;909:23:6;;;;878:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;878:24:6;;;;1794:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1794:84:6;-1:-1:-1;;;;;1794:84:6;;;;;238:20:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:10;;;;1550:108:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1550:108:6;-1:-1:-1;;;;;1550:108:6;;;;;1332:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1332:106:6;-1:-1:-1;;;;;1332:106:6;;;;;1446:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1446:96:6;-1:-1:-1;;;;;1446:96:6;;;;;1666:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1666:120:6;-1:-1:-1;;;;;1666:120:6;;;;;1008:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1008:20:6;;;;1274:103:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:10;-1:-1:-1;;;;;1274:103:10;;;;;2281:811:6;2618:14;;;2650:8;;2603:56;;;;;;-1:-1:-1;;;;;2650:8:6;;;2603:56;;;;;;;;2479:25;;2540:10;;2618:14;;;;;2603:46;;:56;;;;;;;;;;;;;;2479:25;2618:14;2603:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2603:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2603:56:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2603:56:6;2723:8;;2746:11;;2772:5;;2681:236;;;;;;-1:-1:-1;;;;;2723:8:6;;;2681:236;;;;2746:11;;;2681:236;;;;2772:5;;;2681:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:56;;-1:-1:-1;2681:10:6;;;;;;2698:9;;2681:236;;;;;2723:8;;2681:236;;;;;;;2698:9;2681:10;:236;;;5:2:-1;;;;30:1;27;20:12;5:2;2681:236:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2928:8:6;;:20;;;;;;-1:-1:-1;;;;;2928:20:6;;;;;;;;;:8;;;;;-1:-1:-1;2928:15:6;;-1:-1:-1;2928:20:6;;;;;-1:-1:-1;2928:8:6;;:20;;;;;:8;;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;2928:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2964:41:6;;;-1:-1:-1;;;;;2964:41:6;;;;;;;;;;;-1:-1:-1;2981:9:6;;-1:-1:-1;2964:41:6;;;;;;;;;;3046:11;;3016:68;;;;;;-1:-1:-1;;;;;3016:68:6;;;;;;;;;;;;;;;;3046:11;;;;;3016:54;;:68;;;;;3046:11;;3016:68;;;;;;;3046:11;;3016:68;;;5:2:-1;;;;30:1;27;20:12;5:2;3016:68:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3016:68:6;;;;2281:811;;;;;;;:::o;3312:1393::-;3392:28;3597:15;3718:21;3882:33;3555:4;-1:-1:-1;;;;;3513:47:6;:8;;;;;;;;;-1:-1:-1;;;;;3513:8:6;-1:-1:-1;;;;;3513:28:6;;:30;;;;;-1:-1:-1;;;3513:30:6;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3513:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3513:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3513:30:6;3562:21;;;;;;;;;;;;3513:30;3562:21;;;;;;;;;;;;-1:-1:-1;;;;;3513:47:6;;;;3505:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3505:79:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3742:8:6;;:25;;;;;;3615:10;3742:25;;;;;;;;3615:10;;-1:-1:-1;;;;;;3742:8:6;;;;:16;;:25;;;;;;;;;;;;;;:8;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;3742:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3742:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3742:25:6;;-1:-1:-1;;;;;;3786:20:6;;;;;;:54;;-1:-1:-1;;;;;;3810:30:6;;3835:4;3810:30;;3786:54;3842:26;;;;;;;;;;;;;;;;;;3778:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3778:91:6;;3940:7;3882:66;;3967:11;-1:-1:-1;;;;;3967:23:6;;:25;;;;;-1:-1:-1;;;3967:25:6;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3967:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3967:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3967:25:6;3994:31;;;;;;;;;;;;3967:25;3994:31;;;;;;;;;;;;3959:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3959:67:6;-1:-1:-1;4099:14:6;;;4131:8;;4084:56;;;;;;-1:-1:-1;;;;;4131:8:6;;;4084:56;;;;;;;;4099:14;;;4084:46;;:56;;;;;;;;;;;;;;4099:14;;4084:56;;;5:2:-1;;;;30:1;27;20:12;5:2;4084:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4084:56:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4084:56:6;4192:11;;4252:19;;;;;;;;4084:56;;-1:-1:-1;;;;;;4192:11:6;;;;4162:54;;4084:56;;4252:17;;;;;;:19;;;;;4084:56;;4252:19;;;;;;;;:17;:19;;;5:2:-1;;;;30:1;27;20:12;5:2;4252:19:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4252:19:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4252:19:6;4162:120;;;-1:-1:-1;;;4162:120:6;;;;;;-1:-1:-1;;;;;4162:120:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4162:120:6;;;;;;;-1:-1:-1;4162:120:6;;;;5:2:-1;;;;30:1;27;20:12;5:2;4162:120:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4379:8:6;;4403:11;;4429:5;;4295:150;;;;;;-1:-1:-1;;;;;4295:150:6;;;;;;;4379:8;;;4295:150;;;;4403:11;;;4295:150;;;;4429:5;;;4295:150;;;;;:22;;;;-1:-1:-1;4295:22:6;;-1:-1:-1;4324:9:6;;4295:150;;;;;4379:8;;4295:150;;;;;;;4324:9;4295:22;:150;;;5:2:-1;;;;30:1;27;20:12;5:2;4295:150:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4456:8:6;;:23;;;;;;-1:-1:-1;;;;;4456:23:6;;;;;;;;;:8;;;;;-1:-1:-1;4456:15:6;;-1:-1:-1;4456:23:6;;;;;-1:-1:-1;4456:8:6;;:23;;;;;:8;;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;4456:23:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4456:23:6;;;;4612:6;-1:-1:-1;;;;;4612:12:6;;:14;;;;;-1:-1:-1;;;4612:14:6;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4612:14:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4612:14:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4612:14:6;4595:15;;;;;;;;-1:-1:-1;;;;;4578:57:6;;;;4595:13;;;;;:15;;;;;4612:14;;4595:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;4595:15:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4595:15:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4595:15:6;4578:57;;;-1:-1:-1;;;;;4578:57:6;;;;;;;;;;;4595:15;4578:57;;;4651:46;;;-1:-1:-1;;;;;4651:46:6;;;;;;;;;;;;;;;;;;;;3312:1393;;;;:::o;972:29::-;;;-1:-1:-1;;;;;972:29:6;;:::o;939:26::-;;;-1:-1:-1;;;;;939:26:6;;:::o;1001:111:10:-;719:5;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:10;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;;;;;1089:18:10;;;1001:111::o;909:23:6:-;;;-1:-1:-1;;;;;909:23:6;;:::o;878:24::-;;;-1:-1:-1;;;;;878:24:6;;:::o;1794:84::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1856:5:6;:14;;-1:-1:-1;;;;;;1856:14:6;-1:-1:-1;;;;;1856:14:6;;;;;;;;;;1794:84::o;238:20:10:-;;;-1:-1:-1;;;;;238:20:10;;:::o;1550:108:6:-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1624:11:6;:26;;-1:-1:-1;;;;;;1624:26:6;-1:-1:-1;;;;;1624:26:6;;;;;;;;;;1550:108::o;1332:106::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1400:8:6;:30;;-1:-1:-1;;;;;;1400:30:6;-1:-1:-1;;;;;1400:30:6;;;;;;;;;;1332:106::o;1446:96::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1514:8:6;:20;;-1:-1:-1;;;;;;1514:20:6;-1:-1:-1;;;;;1514:20:6;;;;;;;;;;1446:96::o;1666:120::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1746:14:6;:32;;-1:-1:-1;;;;;;1746:32:6;-1:-1:-1;;;;;1746:32:6;;;;;;;;;;1666:120::o;1008:20::-;;;-1:-1:-1;;;;;1008:20:6;;:::o;1274:103:10:-;719:5;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:10;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:10;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;;;;;1661:17:10;-1:-1:-1;;;;;1661:17:10;;;;;;;;;;1512:171::o",
  "source": "pragma solidity ^0.4.23;\r\npragma experimental \"v0.5.0\";\r\n\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\nimport \"../DBC.sol\";\r\nimport \"../Registry.sol\";\r\nimport \"../ForwardFactory.sol\";\r\nimport \"./ContractForDifference.sol\";\r\nimport \"./ContractForDifferenceRegistry.sol\";\r\n\r\ncontract ContractForDifferenceFactory is DBC, Ownable {\r\n    event LogCFDFactoryNew(\r\n        bytes32 indexed marketId,\r\n        address indexed creator,\r\n        address newCFDAddr\r\n    );\r\n    event LogCFDFactoryNewByUpgrade(\r\n        address indexed newCFDAddr,\r\n        address oldCFDAddr\r\n    );\r\n\r\n    string constant REASON_MUST_BE_LATEST = \"Can only upgrade on a factory that is the latest\";\r\n    string constant REASON_MUST_REGISTERED_CFD = \"Caller must be a registered CFD\";\r\n    string constant REASON_UPGRADEABLE_FLAG_NOT_SET = \"upgradeable is not set in the CFD\";\r\n\r\n    Registry public registry;\r\n    address public cfdModel;\r\n    address public cfdRegistry;\r\n    address public forwardFactory;\r\n    address public feeds;\r\n\r\n    constructor(\r\n        address _registry,\r\n        address _cfdModel,\r\n        address _forwardFactory,\r\n        address _feeds\r\n    ) public {\r\n        setRegistry(_registry);\r\n        setCFDModel(_cfdModel);\r\n        setForwardFactory(_forwardFactory);\r\n        setFeeds(_feeds);\r\n    }\r\n\r\n    function setRegistry(address _registry) public onlyOwner {\r\n        registry = Registry(_registry);\r\n    }\r\n\r\n    function setCFDModel(address _cfdModel) public onlyOwner {\r\n        cfdModel = _cfdModel;\r\n    }\r\n\r\n    function setCFDRegistry(address _cfdRegistry) public onlyOwner {\r\n        cfdRegistry = _cfdRegistry;\r\n    }\r\n\r\n    function setForwardFactory(address _forwardFactory) public onlyOwner {\r\n        forwardFactory = _forwardFactory;\r\n    }\r\n\r\n    function setFeeds(address _feeds) public onlyOwner {\r\n        feeds = _feeds;\r\n    }\r\n\r\n    /**\r\n     * Create a new ContractForDifference instance\r\n     *\r\n     * @param _marketId Contract for this market (see Feeds.sol markets)\r\n     * @param _strikePrice Contact strike price\r\n     * @param _notionalAmountWei Contract notional amount\r\n     * @param _isBuyer If the caller is to be the buyer, else they will be the seller\r\n     *\r\n     * @return address of new contract\r\n     */\r\n    function createContract(\r\n        bytes32 _marketId,\r\n        uint _strikePrice,\r\n        uint _notionalAmountWei,\r\n        bool _isBuyer\r\n    )\r\n        external\r\n        payable\r\n        returns (ContractForDifference cfd)\r\n    {\r\n        address creator = msg.sender;\r\n        cfd = ContractForDifference(\r\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\r\n        );\r\n        cfd.create.value(msg.value)(\r\n            registry,\r\n            cfdRegistry,\r\n            feeds,\r\n            creator,\r\n            _marketId,\r\n            _strikePrice,\r\n            _notionalAmountWei,\r\n            _isBuyer\r\n        );\r\n        registry.addCFD(cfd);\r\n        emit LogCFDFactoryNew(_marketId, creator, cfd);\r\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(cfd, creator);\r\n    }\r\n\r\n    /**\r\n     * Upgrade a CFD at a different set of contracts to this set of contracts.\r\n     * The old CFD itself will invoke this function to do the upgrade.\r\n\r\n     * @return address of new contract\r\n     */\r\n    function createByUpgrade()\r\n        external\r\n        payable\r\n        returns (ContractForDifference newCfd)\r\n    {\r\n        // can only upgrade this if factory is the latest version\r\n        require(registry.getCFDFactoryLatest() == address(this), REASON_MUST_BE_LATEST);\r\n\r\n        address cfdAddr = msg.sender;\r\n\r\n        // can only upgrade if cfd registered and not with this latest version\r\n        address registryEntry = registry.allCFDs(cfdAddr);\r\n        require(registryEntry != 0x0 && registryEntry != address(this), REASON_MUST_REGISTERED_CFD);\r\n\r\n        ContractForDifference existingCfd = ContractForDifference(cfdAddr);\r\n        require(existingCfd.upgradeable(), REASON_UPGRADEABLE_FLAG_NOT_SET);\r\n\r\n        newCfd = ContractForDifference(\r\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\r\n        );\r\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(\r\n            newCfd,\r\n            existingCfd.buyer()\r\n        );\r\n\r\n        newCfd.createByUpgrade.value(msg.value)(\r\n            cfdAddr,\r\n            address(registry),\r\n            cfdRegistry,\r\n            feeds\r\n        );\r\n        registry.addCFD(newCfd);\r\n\r\n        // replicate logging for an ordinary create so queries will get this to\r\n        emit LogCFDFactoryNew(newCfd.market(), newCfd.buyer(), newCfd);\r\n        emit LogCFDFactoryNewByUpgrade(newCfd, existingCfd);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\cfd\\ContractForDifferenceFactory.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-11T13:18:02.985Z"
}