{
  "contractName": "ContractForDifferenceFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "forwardFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdModel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeds",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_cfdModel",
          "type": "address"
        },
        {
          "name": "_forwardFactory",
          "type": "address"
        },
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNew",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCFDAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oldCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNewByUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdModel",
          "type": "address"
        }
      ],
      "name": "setCFDModel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdRegistry",
          "type": "address"
        }
      ],
      "name": "setCFDRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_forwardFactory",
          "type": "address"
        }
      ],
      "name": "setForwardFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "name": "setFeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createByUpgrade",
      "outputs": [
        {
          "name": "newCfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"createByUpgrade\",\"outputs\":[{\"name\":\"newCfd\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"forwardFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createContract\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cfdRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cfdModel\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeds\",\"type\":\"address\"}],\"name\":\"setFeeds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdRegistry\",\"type\":\"address\"}],\"name\":\"setCFDRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdModel\",\"type\":\"address\"}],\"name\":\"setCFDModel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_forwardFactory\",\"type\":\"address\"}],\"name\":\"setForwardFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeds\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_cfdModel\",\"type\":\"address\"},{\"name\":\"_forwardFactory\",\"type\":\"address\"},{\"name\":\"_feeds\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newCFDAddr\",\"type\":\"address\"}],\"name\":\"LogCFDFactoryNew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newCFDAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"oldCFDAddr\",\"type\":\"address\"}],\"name\":\"LogCFDFactoryNewByUpgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"createByUpgrade()\":{\"return\":\"address of new contract\\r\"},\"createContract(bytes32,uint256,uint256,bool,uint256)\":{\"params\":{\"_isBuyer\":\"If the caller is to be the buyer, else they will be the seller\\r\",\"_marketId\":\"Contract for this market (see Feeds.sol markets)\\r\",\"_notionalAmountDai\":\"Contract notional amount\\r\",\"_strikePrice\":\"Contact strike price\\r\",\"_value\":\"Amount of DAI to deposit\\r \"},\"return\":\"address of new contract\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"createByUpgrade()\":{\"notice\":\"Upgrade a CFD at a different set of contracts to this set of contracts.\\r The old CFD itself will invoke this function to do the upgrade.\\r\"},\"createContract(bytes32,uint256,uint256,bool,uint256)\":{\"notice\":\"Create a new ContractForDifference instance\\r \"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol\":\"ContractForDifferenceFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0x3fcf0d97ad97399402274b04b62f704f714bd84e0cf8d173337cdc983f1e8608\",\"urls\":[\"bzzr://30f2233a4e3d87dc3a395f921d8aed6139f911bbfb1677fa696a39639bcd005b\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/ForwardFactory.sol\":{\"keccak256\":\"0xb0c15f958b92ff2327342353a45d44fa7d67a9e5aeacfcf7cef27aa08aad8161\",\"urls\":[\"bzzr://443d355e483c722b1a4ea53f94359066d3f7900abc27e872fbdc76c69fc776f2\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0xdd2e58003fe5316c50270a769a76b396fe6ed20aa388a607e725c74eb1d6c834\",\"urls\":[\"bzzr://2dde9105930aaadc93693bacba7f6c07fda48cf17bda63e4c0d97d8c4d3018c6\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifference.sol\":{\"keccak256\":\"0x63f22328e932f62dd7d18a2148b14d5cf4ef4a1c4e87730990181cd5bd611595\",\"urls\":[\"bzzr://225589f86bbcc96c81785112d71e7750343fc7140929616f4896c9952f89ffae\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol\":{\"keccak256\":\"0x7fc93dcccbd5476f38c36fc13cdc2e9b57e1d57d5eef9e9d720f0c9ead6fd430\",\"urls\":[\"bzzr://e44ff01b84aad1b17535932c7669f663b879eb3fd8ba053db668e3185c831487\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceLibrary.sol\":{\"keccak256\":\"0xd21632a219bd5c99c5a02621f9f9053b122b8fa73a7da35bec9eb1db44b4dbcd\",\"urls\":[\"bzzr://a3a125dd74eed530fdbcf87a06902ab039c4e333d2231ce61616234d8d718a17\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceRegistry.sol\":{\"keccak256\":\"0xc2242bd19e73177d32e95c3cbad2e99c48825722eebcbe12c3c60dd033674773\",\"urls\":[\"bzzr://041ea968045af40b538d2e91a72c636269bd82a610cc83c761b1c39967b52345\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/auth.sol\":{\"keccak256\":\"0xd79120d413ebb735b8f007b490f48e017b155bb3c958cc63ffda7b62d0dc7430\",\"urls\":[\"bzzr://0edb6e7092e44a153ddfc0625a0bb7e43a87565bddb5dba1d1200a239d1aeb35\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/note.sol\":{\"keccak256\":\"0x01cdc75fcd89273bebf0990ba2308ea73c44a63ef0b474cb7c649dff38a94b68\",\"urls\":[\"bzzr://fa6444a1ae294441ab8de30833036b810a7fbab8661f376fa58ed4e2844734a1\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0x163b6d661fe625052411fb4e6d4e676066215ec363f747ff4d10bc6675283f01\",\"urls\":[\"bzzr://08acac2533ffb50581b8776fe7ee4e8d34c58707ae8bfa7fb5ab4b69a21ca99c\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0xf01dc763fb887a782d5423789b9ff56889cea67765352d06733bbf83a0da369f\",\"urls\":[\"bzzr://c58ef6b2675aad3950367786073213c0f124705ef567bbf3c058db3f384a1071\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsExternal.sol\":{\"keccak256\":\"0x153fd7aee60aceadae0f9184f5bd9c5da754717271422cb9fcd865e4ee0259e1\",\"urls\":[\"bzzr://5aae071063b61ff9c9b419415a1e62540225d9929f2284d6648044bb7d8d5724\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsInternal.sol\":{\"keccak256\":\"0x89902441c5dd11a546d38c0e8ccbf4e163dc10a609cd3c0ab4b021e9b2a90c0d\",\"urls\":[\"bzzr://5679d5873d793e9103648639e1fb62a7b6bba7f187ac0f7762ec178294353f00\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051608080620013b4833981018060405260808110156200003357600080fd5b5080516020820151604080840151606090940151600080546001600160a01b031916331780825592519495939491926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620000a284620000df60201b60201c565b620000b3836200011b60201b60201c565b620000c4826200015760201b60201c565b620000d5816200019360201b60201c565b50505050620001e0565b620000ef620001cf60201b60201c565b620000f957600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6200012b620001cf60201b60201c565b6200013557600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b62000167620001cf60201b60201c565b6200017157600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b620001a3620001cf60201b60201c565b620001ad57600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331490565b6111c480620001f06000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063abcca75e11610066578063abcca75e14610220578063c03cced314610246578063d63605b81461026c578063f2fde38b1461027457610100565b80638da5cb5b146101b05780638f32d59b146101b85780639255e0d6146101d4578063a91ee0dc146101fa57610100565b8063715018a6116100d3578063715018a61461017057806377b727ac1461017a5780637b103999146101825780637dc532c51461018a57610100565b8063165ae0fc1461010557806338874a1a1461012957806344a1e618146101315780635fd355eb14610168575b600080fd5b61010d61029a565b604080516001600160a01b039092168252519081900360200190f35b61010d610981565b61010d600480360360a081101561014757600080fd5b50803590602081013590604081013590606081013515159060800135610990565b61010d610eb6565b610178610ec5565b005b61010d610f20565b61010d610f2f565b610178600480360360208110156101a057600080fd5b50356001600160a01b0316610f3e565b61010d610f71565b6101c0610f80565b604080519115158252519081900360200190f35b610178600480360360208110156101ea57600080fd5b50356001600160a01b0316610f91565b6101786004803603602081101561021057600080fd5b50356001600160a01b0316610fc4565b6101786004803603602081101561023657600080fd5b50356001600160a01b0316610ff7565b6101786004803603602081101561025c57600080fd5b50356001600160a01b031661102a565b61010d61105d565b6101786004803603602081101561028a57600080fd5b50356001600160a01b031661106c565b6000306001600160a01b0316600160009054906101000a90046001600160a01b03166001600160a01b03166323ec7f2a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102f457600080fd5b505afa158015610308573d6000803e3d6000fd5b505050506040513d602081101561031e57600080fd5b5051604080516060810190915260308082526001600160a01b039092169290921491906110f86020830139906103d557604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039a578181015183820152602001610382565b50505050905090810190601f1680156103c75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060015460408051600160e31b63018b52bf0281523360048201819052915191926000926001600160a01b0390911691630c5a95f8916024808301926020929190829003018186803b15801561042a57600080fd5b505afa15801561043e573d6000803e3d6000fd5b505050506040513d602081101561045457600080fd5b505190506001600160a01b0381161580159061047957506001600160a01b0381163014155b6040518060400160405280601f81526020017f43616c6c6572206d757374206265206120726567697374657265642043464400815250906104fe57604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b506000829050806001600160a01b03166341c20c8e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053d57600080fd5b505afa158015610551573d6000803e3d6000fd5b505050506040513d602081101561056757600080fd5b5051604080516060810190915260218082526111286020830139906105d057604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b506004805460025460408051600160e01b639193ba0b0281526001600160a01b039283169481019490945251911691639193ba0b9160248083019260209291908290030181600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b505050506040513d602081101561065057600080fd5b505160035460408051600160e11b6338a86c5702815290519296506001600160a01b0391821692630596030d92889290861691637150d8ae91600480820192602092909190829003018186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d60208110156106d357600080fd5b50516040805163ffffffff851660e01b81526001600160a01b03938416600482015292909116602483015251604480830192600092919082900301818387803b15801561071f57600080fd5b505af1158015610733573d6000803e3d6000fd5b505060015460035460055460408051600160e01b632802759b0281526001600160a01b038a81166004830152948516602482015292841660448401529083166064830152519188169350632802759b925060848082019260009290919082900301818387803b1580156107a557600080fd5b505af11580156107b9573d6000803e3d6000fd5b505060015460408051600160e31b630eda01fb0281526001600160a01b03898116600483015291519190921693506376d00fd89250602480830192600092919082900301818387803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b50505050836001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561085f57600080fd5b505afa158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b505160408051600160e01b6380f5560502815290516001600160a01b03928316928716916380f55605916004808301926020929190829003018186803b1580156108d257600080fd5b505afa1580156108e6573d6000803e3d6000fd5b505050506040513d60208110156108fc57600080fd5b5051604080516001600160a01b038816815290517f2d0c41699a808fef3dcfaa411d95703031d69229e73f5f3299fd6045deb4f9629181900360200190a3604080516001600160a01b0383811682529151918616917fe77178664194a5b1c28f6ee0f3fcb6d4404d796abfdf7edee18b68617768f48a9181900360200190a250505090565b6004546001600160a01b031681565b600081600160009054906101000a90046001600160a01b03166001600160a01b0316638ef855686040518163ffffffff1660e01b815260040160206040518083038186803b1580156109e157600080fd5b505afa1580156109f5573d6000803e3d6000fd5b505050506040513d6020811015610a0b57600080fd5b505160408051600160e11b636eb1769f02815233600482015230602482015290516001600160a01b039092169163dd62ed3e91604480820192602092909190829003018186803b158015610a5e57600080fd5b505afa158015610a72573d6000803e3d6000fd5b505050506040513d6020811015610a8857600080fd5b50516040805160608101909152602580825292909110159161117460208301398082610af857604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b506004805460025460408051600160e01b639193ba0b0281526001600160a01b03928316948101949094525133939190921691639193ba0b916024808201926020929091908290030181600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b505050506040513d6020811015610b7d57600080fd5b505160015460408051600160e31b6311df0aad02815290519296506001600160a01b0390911691638ef8556891600480820192602092909190829003018186803b158015610bca57600080fd5b505afa158015610bde573d6000803e3d6000fd5b505050506040513d6020811015610bf457600080fd5b505160408051600160e01b6323b872dd0281526001600160a01b038481166004830152878116602483015260448201899052915191909216916323b872dd9160648083019260209291908290030181600087803b158015610c5457600080fd5b505af1158015610c68573d6000803e3d6000fd5b505050506040513d6020811015610c7e57600080fd5b50516040805160608101909152602b808252611149602083013990610ce757604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b5060015460035460055460408051600160e31b631073769f0281526001600160a01b039485166004820152928416602484015290831660448301528383166064830152608482018c905260a482018b905260c482018a905288151560e4830152519186169163839bb4f8916101048082019260009290919082900301818387803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b505060015460408051600160e31b630eda01fb0281526001600160a01b03898116600483015291519190921693506376d00fd89250602480830192600092919082900301818387803b158015610ddd57600080fd5b505af1158015610df1573d6000803e3d6000fd5b5050604080516001600160a01b038881168252915191851693508c92507f2d0c41699a808fef3dcfaa411d95703031d69229e73f5f3299fd6045deb4f962919081900360200190a360035460408051600160e01b630596030d0281526001600160a01b038781166004830152848116602483015291519190921691630596030d91604480830192600092919082900301818387803b158015610e9257600080fd5b505af1158015610ea6573d6000803e3d6000fd5b5050505050505095945050505050565b6003546001600160a01b031681565b610ecd610f80565b610ed657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b031681565b6001546001600160a01b031681565b610f46610f80565b610f4f57600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610f99610f80565b610fa257600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610fcc610f80565b610fd557600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610fff610f80565b61100857600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b611032610f80565b61103b57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031681565b611074610f80565b61107d57600080fd5b61108681611089565b50565b6001600160a01b03811661109c57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe43616e206f6e6c792075706772616465206f6e206120666163746f7279207468617420697320746865206c61746573747570677261646561626c65206973206e6f742073657420696e20746865204346444661696c757265207472616e73666572696e67206f776e657273686970206f662044414920746f6b656e7344414920616c6c6f77616e6365206973206c657373207468616e20746865205f76616c7565a165627a7a7230582019e3db75f4a77a0a892c1409c7865ed7742a7590f9127b0f831c62ad4e408ec70029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063abcca75e11610066578063abcca75e14610220578063c03cced314610246578063d63605b81461026c578063f2fde38b1461027457610100565b80638da5cb5b146101b05780638f32d59b146101b85780639255e0d6146101d4578063a91ee0dc146101fa57610100565b8063715018a6116100d3578063715018a61461017057806377b727ac1461017a5780637b103999146101825780637dc532c51461018a57610100565b8063165ae0fc1461010557806338874a1a1461012957806344a1e618146101315780635fd355eb14610168575b600080fd5b61010d61029a565b604080516001600160a01b039092168252519081900360200190f35b61010d610981565b61010d600480360360a081101561014757600080fd5b50803590602081013590604081013590606081013515159060800135610990565b61010d610eb6565b610178610ec5565b005b61010d610f20565b61010d610f2f565b610178600480360360208110156101a057600080fd5b50356001600160a01b0316610f3e565b61010d610f71565b6101c0610f80565b604080519115158252519081900360200190f35b610178600480360360208110156101ea57600080fd5b50356001600160a01b0316610f91565b6101786004803603602081101561021057600080fd5b50356001600160a01b0316610fc4565b6101786004803603602081101561023657600080fd5b50356001600160a01b0316610ff7565b6101786004803603602081101561025c57600080fd5b50356001600160a01b031661102a565b61010d61105d565b6101786004803603602081101561028a57600080fd5b50356001600160a01b031661106c565b6000306001600160a01b0316600160009054906101000a90046001600160a01b03166001600160a01b03166323ec7f2a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102f457600080fd5b505afa158015610308573d6000803e3d6000fd5b505050506040513d602081101561031e57600080fd5b5051604080516060810190915260308082526001600160a01b039092169290921491906110f86020830139906103d557604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561039a578181015183820152602001610382565b50505050905090810190601f1680156103c75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060015460408051600160e31b63018b52bf0281523360048201819052915191926000926001600160a01b0390911691630c5a95f8916024808301926020929190829003018186803b15801561042a57600080fd5b505afa15801561043e573d6000803e3d6000fd5b505050506040513d602081101561045457600080fd5b505190506001600160a01b0381161580159061047957506001600160a01b0381163014155b6040518060400160405280601f81526020017f43616c6c6572206d757374206265206120726567697374657265642043464400815250906104fe57604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b506000829050806001600160a01b03166341c20c8e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053d57600080fd5b505afa158015610551573d6000803e3d6000fd5b505050506040513d602081101561056757600080fd5b5051604080516060810190915260218082526111286020830139906105d057604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b506004805460025460408051600160e01b639193ba0b0281526001600160a01b039283169481019490945251911691639193ba0b9160248083019260209291908290030181600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b505050506040513d602081101561065057600080fd5b505160035460408051600160e11b6338a86c5702815290519296506001600160a01b0391821692630596030d92889290861691637150d8ae91600480820192602092909190829003018186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d60208110156106d357600080fd5b50516040805163ffffffff851660e01b81526001600160a01b03938416600482015292909116602483015251604480830192600092919082900301818387803b15801561071f57600080fd5b505af1158015610733573d6000803e3d6000fd5b505060015460035460055460408051600160e01b632802759b0281526001600160a01b038a81166004830152948516602482015292841660448401529083166064830152519188169350632802759b925060848082019260009290919082900301818387803b1580156107a557600080fd5b505af11580156107b9573d6000803e3d6000fd5b505060015460408051600160e31b630eda01fb0281526001600160a01b03898116600483015291519190921693506376d00fd89250602480830192600092919082900301818387803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b50505050836001600160a01b0316637150d8ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561085f57600080fd5b505afa158015610873573d6000803e3d6000fd5b505050506040513d602081101561088957600080fd5b505160408051600160e01b6380f5560502815290516001600160a01b03928316928716916380f55605916004808301926020929190829003018186803b1580156108d257600080fd5b505afa1580156108e6573d6000803e3d6000fd5b505050506040513d60208110156108fc57600080fd5b5051604080516001600160a01b038816815290517f2d0c41699a808fef3dcfaa411d95703031d69229e73f5f3299fd6045deb4f9629181900360200190a3604080516001600160a01b0383811682529151918616917fe77178664194a5b1c28f6ee0f3fcb6d4404d796abfdf7edee18b68617768f48a9181900360200190a250505090565b6004546001600160a01b031681565b600081600160009054906101000a90046001600160a01b03166001600160a01b0316638ef855686040518163ffffffff1660e01b815260040160206040518083038186803b1580156109e157600080fd5b505afa1580156109f5573d6000803e3d6000fd5b505050506040513d6020811015610a0b57600080fd5b505160408051600160e11b636eb1769f02815233600482015230602482015290516001600160a01b039092169163dd62ed3e91604480820192602092909190829003018186803b158015610a5e57600080fd5b505afa158015610a72573d6000803e3d6000fd5b505050506040513d6020811015610a8857600080fd5b50516040805160608101909152602580825292909110159161117460208301398082610af857604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b506004805460025460408051600160e01b639193ba0b0281526001600160a01b03928316948101949094525133939190921691639193ba0b916024808201926020929091908290030181600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b505050506040513d6020811015610b7d57600080fd5b505160015460408051600160e31b6311df0aad02815290519296506001600160a01b0390911691638ef8556891600480820192602092909190829003018186803b158015610bca57600080fd5b505afa158015610bde573d6000803e3d6000fd5b505050506040513d6020811015610bf457600080fd5b505160408051600160e01b6323b872dd0281526001600160a01b038481166004830152878116602483015260448201899052915191909216916323b872dd9160648083019260209291908290030181600087803b158015610c5457600080fd5b505af1158015610c68573d6000803e3d6000fd5b505050506040513d6020811015610c7e57600080fd5b50516040805160608101909152602b808252611149602083013990610ce757604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561039a578181015183820152602001610382565b5060015460035460055460408051600160e31b631073769f0281526001600160a01b039485166004820152928416602484015290831660448301528383166064830152608482018c905260a482018b905260c482018a905288151560e4830152519186169163839bb4f8916101048082019260009290919082900301818387803b158015610d7457600080fd5b505af1158015610d88573d6000803e3d6000fd5b505060015460408051600160e31b630eda01fb0281526001600160a01b03898116600483015291519190921693506376d00fd89250602480830192600092919082900301818387803b158015610ddd57600080fd5b505af1158015610df1573d6000803e3d6000fd5b5050604080516001600160a01b038881168252915191851693508c92507f2d0c41699a808fef3dcfaa411d95703031d69229e73f5f3299fd6045deb4f962919081900360200190a360035460408051600160e01b630596030d0281526001600160a01b038781166004830152848116602483015291519190921691630596030d91604480830192600092919082900301818387803b158015610e9257600080fd5b505af1158015610ea6573d6000803e3d6000fd5b5050505050505095945050505050565b6003546001600160a01b031681565b610ecd610f80565b610ed657600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002546001600160a01b031681565b6001546001600160a01b031681565b610f46610f80565b610f4f57600080fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b610f99610f80565b610fa257600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610fcc610f80565b610fd557600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610fff610f80565b61100857600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b611032610f80565b61103b57600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031681565b611074610f80565b61107d57600080fd5b61108681611089565b50565b6001600160a01b03811661109c57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe43616e206f6e6c792075706772616465206f6e206120666163746f7279207468617420697320746865206c61746573747570677261646561626c65206973206e6f742073657420696e20746865204346444661696c757265207472616e73666572696e67206f776e657273686970206f662044414920746f6b656e7344414920616c6c6f77616e6365206973206c657373207468616e20746865205f76616c7565a165627a7a7230582019e3db75f4a77a0a892c1409c7865ed7742a7590f9127b0f831c62ad4e408ec70029",
  "sourceMap": "262:5224:5:-;;;1195:287;8:9:-1;5:2;;;30:1;27;20:12;5:2;1195:287:5;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1195:287:5;;;;;;;;;;;;;;;;515:6:19;:19;;-1:-1:-1;;;;;;515:19:19;524:10;515:19;;;;549:40;;1195:287:5;;;;;;-1:-1:-1;;;;;582:6:19;;549:40;;515:6;;549:40;1347:22:5;1359:9;1347:11;;;:22;;:::i;:::-;1380;1392:9;1380:11;;;:22;;:::i;:::-;1413:34;1431:15;1413:17;;;:34;;:::i;:::-;1458:16;1467:6;1458:8;;;:16;;:::i;:::-;1195:287;;;;262:5224;;1490:106;863:9:19;:7;;;:9;;:::i;:::-;855:18;;;;;;1558:8:5;:30;;-1:-1:-1;;;;;;1558:30:5;-1:-1:-1;;;;;1558:30:5;;;;;;;;;;1490:106::o;1604:96::-;863:9:19;:7;;;:9;;:::i;:::-;855:18;;;;;;1672:8:5;:20;;-1:-1:-1;;;;;;1672:20:5;-1:-1:-1;;;;;1672:20:5;;;;;;;;;;1604:96::o;1824:120::-;863:9:19;:7;;;:9;;:::i;:::-;855:18;;;;;;1904:14:5;:32;;-1:-1:-1;;;;;;1904:32:5;-1:-1:-1;;;;;1904:32:5;;;;;;;;;;1824:120::o;1952:84::-;863:9:19;:7;;;:9;;:::i;:::-;855:18;;;;;;2014:5:5;:14;;-1:-1:-1;;;;;;2014:14:5;-1:-1:-1;;;;;2014:14:5;;;;;;;;;;1952:84::o;979:90:19:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;262:5224:5:-;;;;;;;",
  "deployedSourceMap": "262:5224:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:5224:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:1635;;;:::i;:::-;;;;-1:-1:-1;;;;;3846:1635:5;;;;;;;;;;;;;;1130:29;;;:::i;2486:1140::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2486:1140:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;1097:26::-;;;:::i;1347:137:19:-;;;:::i;:::-;;1067:23:5;;;:::i;1036:24::-;;;:::i;1952:84::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1952:84:5;-1:-1:-1;;;;;1952:84:5;;:::i;659:77:19:-;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1708:108:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1708:108:5;-1:-1:-1;;;;;1708:108:5;;:::i;1490:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1490:106:5;-1:-1:-1;;;;;1490:106:5;;:::i;1604:96::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1604:96:5;-1:-1:-1;;;;;1604:96:5;;:::i;1824:120::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1824:120:5;-1:-1:-1;;;;;1824:120:5;;:::i;1166:20::-;;;:::i;1655:107:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:19;-1:-1:-1;;;;;1655:107:19;;:::i;3846:1635:5:-;3909:28;4072:4;-1:-1:-1;;;;;4030:47:5;:8;;;;;;;;;-1:-1:-1;;;;;4030:8:5;-1:-1:-1;;;;;4030:28:5;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4030:30:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4030:30:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4030:30:5;4079:21;;;;;;;;;;;;;-1:-1:-1;;;;;4030:47:5;;;;;;;;4079:21;;4030:30;4079:21;;;4022:79;;;;;-1:-1:-1;;;;;4022:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4022:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4259:8:5;;:25;;;-1:-1:-1;;;;;4259:25:5;;4132:10;4259:25;;;;;;;;4132:10;;4114:15;;-1:-1:-1;;;;;4259:8:5;;;;:16;;:25;;;;;;;;;;;;;;:8;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;4259:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4259:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4259:25:5;;-1:-1:-1;;;;;;4317:27:5;;;;;;:61;;-1:-1:-1;;;;;;4348:30:5;;4373:4;4348:30;;4317:61;4394:26;;;;;;;;;;;;;;;;;4295:136;;;;;-1:-1:-1;;;;;4295:136:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4295:136:5;;4444:33;4502:7;4444:66;;4529:11;-1:-1:-1;;;;;4529:23:5;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4529:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4529:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4529:25:5;4556:31;;;;;;;;;;;;;;4529:25;4556:31;;;4521:67;;;;;-1:-1:-1;;;;;4521:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4521:67:5;-1:-1:-1;4661:14:5;;;4693:8;;4646:56;;;-1:-1:-1;;;;;4646:56:5;;-1:-1:-1;;;;;4693:8:5;;;4646:56;;;;;;;;4661:14;;;4646:46;;:56;;;;;;;;;;;;;;4661:14;;4646:56;;;5:2:-1;;;;30:1;27;20:12;5:2;4646:56:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4646:56:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4646:56:5;4893:11;;4962:19;;;-1:-1:-1;;;;;4962:19:5;;;;4646:56;;-1:-1:-1;;;;;;4893:11:5;;;;4863:54;;4646:56;;4962:17;;;;;;:19;;;;;4646:56;;4962:19;;;;;;;;:17;:19;;;5:2:-1;;;;30:1;27;20:12;5:2;4962:19:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4962:19:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4962:19:5;4863:129;;;;;;;;;;-1:-1:-1;;;;;4863:129:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4863:129:5;;;;;;;-1:-1:-1;4863:129:5;;;;5:2:-1;;;;30:1;27;20:12;5:2;4863:129:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5072:8:5;;5096:11;;5122:5;;5005:133;;;-1:-1:-1;;;;;5005:133:5;;-1:-1:-1;;;;;5005:133:5;;;;;;;5072:8;;;5005:133;;;;5096:11;;;5005:133;;;;5122:5;;;5005:133;;;;;:22;;;;-1:-1:-1;5005:22:5;;-1:-1:-1;5005:133:5;;;;;5072:8;;5005:133;;;;;;;;5072:8;5005:22;:133;;;5:2:-1;;;;30:1;27;20:12;5:2;5005:133:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5196:8:5;;:32;;;-1:-1:-1;;;;;5196:32:5;;-1:-1:-1;;;;;5196:32:5;;;;;;;;;:8;;;;;-1:-1:-1;5196:15:5;;-1:-1:-1;5196:32:5;;;;;:8;;:32;;;;;;;:8;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;5196:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5196:32:5;;;;5361:6;-1:-1:-1;;;;;5361:12:5;;:14;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5361:14:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5361:14:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5361:14:5;5344:15;;;-1:-1:-1;;;;;5344:15:5;;;;-1:-1:-1;;;;;5327:66:5;;;;5344:13;;;;;:15;;;;;5361:14;;5344:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;5344:15:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5344:15:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5344:15:5;5327:66;;;-1:-1:-1;;;;;5327:66:5;;;;;;;;;;;5344:15;5327:66;;;5409:64;;;-1:-1:-1;;;;;5409:64:5;;;;;;;;;;;;;;;;;;;;3846:1635;;;;:::o;1130:29::-;;;-1:-1:-1;;;;;1130:29:5;;:::o;2486:1140::-;2841:25;2761:6;2703:8;;;;;;;;;-1:-1:-1;;;;;2703:8:5;-1:-1:-1;;;;;2703:15:5;;:17;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2703:17:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2703:17:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2703:17:5;:54;;;-1:-1:-1;;;;;2703:54:5;;2731:10;2703:54;;;;2751:4;2703:54;;;;;;-1:-1:-1;;;;;2703:27:5;;;;;;:54;;;;;:17;;:54;;;;;;;;:27;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;2703:54:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2703:54:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2703:54:5;2783:28;;;;;;;;;;;;;2703:64;;;;;;2783:28;2703:54;2783:28;;;314:6:0;303:9;295:26;;;;-1:-1:-1;;;;;295:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;295:26:0;-1:-1:-1;2982:14:5;;;3014:8;;2967:56;;;-1:-1:-1;;;;;2967:56:5;;-1:-1:-1;;;;;3014:8:5;;;2967:56;;;;;;;;2902:10;;2982:14;;;;;2967:46;;:56;;;;;;;;;;;;;;;2884:15;2982:14;2967:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2967:56:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2967:56:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2967:56:5;3067:8;;:17;;;-1:-1:-1;;;;;3067:17:5;;;;2967:56;;-1:-1:-1;;;;;;3067:8:5;;;;:15;;:17;;;;;2967:56;;3067:17;;;;;;;;:8;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;3067:17:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3067:17:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3067:17:5;:61;;;-1:-1:-1;;;;;3067:61:5;;-1:-1:-1;;;;;3067:61:5;;;;;;;;;;;;;;;;;;;;;;:30;;;;;;;:61;;;;;:17;;:61;;;;;;;-1:-1:-1;3067:30:5;:61;;;5:2:-1;;;;30:1;27;20:12;5:2;3067:61:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3067:61:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3067:61:5;3143:26;;;;;;;;;;;;;;3067:61;3143:26;;;3045:135;;;;;-1:-1:-1;;;;;3045:135:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3045:135:5;-1:-1:-1;3227:8:5;;3251:11;;3277:5;;3191:231;;;-1:-1:-1;;;;;3191:231:5;;-1:-1:-1;;;;;3227:8:5;;;3191:231;;;;3251:11;;;3191:231;;;;3277:5;;;3191:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;;;;;:231;;;;;3227:8;;3191:231;;;;;;;;3227:8;3191:13;:231;;;5:2:-1;;;;30:1;27;20:12;5:2;3191:231:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3435:8:5;;:29;;;-1:-1:-1;;;;;3435:29:5;;-1:-1:-1;;;;;3435:29:5;;;;;;;;;:8;;;;;-1:-1:-1;3435:15:5;;-1:-1:-1;3435:29:5;;;;;:8;;:29;;;;;;;:8;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;3435:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3480:50:5;;;-1:-1:-1;;;;;3480:50:5;;;;;;;;;;;-1:-1:-1;3497:9:5;;-1:-1:-1;3480:50:5;;;;;;;;;;3571:11;;3541:77;;;-1:-1:-1;;;;;3541:77:5;;-1:-1:-1;;;;;3541:77:5;;;;;;;;;;;;;;;;3571:11;;;;;3541:54;;:77;;;;;3571:11;;3541:77;;;;;;;3571:11;;3541:77;;;5:2:-1;;;;30:1;27;20:12;5:2;3541:77:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3541:77:5;;;;332:1:0;2486:1140:5;;;;;;;;;:::o;1097:26::-;;;-1:-1:-1;;;;;1097:26:5;;:::o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:19;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:19;;;1347:137::o;1067:23:5:-;;;-1:-1:-1;;;;;1067:23:5;;:::o;1036:24::-;;;-1:-1:-1;;;;;1036:24:5;;:::o;1952:84::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;2014:5:5;:14;;-1:-1:-1;;;;;;2014:14:5;-1:-1:-1;;;;;2014:14:5;;;;;;;;;;1952:84::o;659:77:19:-;697:7;723:6;-1:-1:-1;;;;;723:6:19;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;1708:108:5:-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1782:11:5;:26;;-1:-1:-1;;;;;;1782:26:5;-1:-1:-1;;;;;1782:26:5;;;;;;;;;;1708:108::o;1490:106::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1558:8:5;:30;;-1:-1:-1;;;;;;1558:30:5;-1:-1:-1;;;;;1558:30:5;;;;;;;;;;1490:106::o;1604:96::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1672:8:5;:20;;-1:-1:-1;;;;;;1672:20:5;-1:-1:-1;;;;;1672:20:5;;;;;;;;;;1604:96::o;1824:120::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1904:14:5;:32;;-1:-1:-1;;;;;;1904:32:5;-1:-1:-1;;;;;1904:32:5;;;;;;;;;;1824:120::o;1166:20::-;;;-1:-1:-1;;;;;1166:20:5;;:::o;1655:107:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:19;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:19;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:19;-1:-1:-1;;;;;2065:17:19;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\nimport \"../DBC.sol\";\r\nimport \"../Registry.sol\";\r\nimport \"../ForwardFactory.sol\";\r\nimport \"./ContractForDifference.sol\";\r\nimport \"./ContractForDifferenceRegistry.sol\";\r\n\r\ncontract ContractForDifferenceFactory is DBC, Ownable {\r\n    event LogCFDFactoryNew(\r\n        bytes32 indexed marketId,\r\n        address indexed creator,\r\n        address newCFDAddr\r\n    );\r\n    event LogCFDFactoryNewByUpgrade(\r\n        address indexed newCFDAddr,\r\n        address oldCFDAddr\r\n    );\r\n\r\n    string constant REASON_MUST_BE_LATEST = \"Can only upgrade on a factory that is the latest\";\r\n    string constant REASON_MUST_REGISTERED_CFD = \"Caller must be a registered CFD\";\r\n    string constant REASON_UPGRADEABLE_FLAG_NOT_SET = \"upgradeable is not set in the CFD\";\r\n    string constant REASON_DAI_TRANSFER_FAILED = \"Failure transfering ownership of DAI tokens\";\r\n    string constant REASON_DAI_ALLOWANCE_TOO_LOW = \"DAI allowance is less than the _value\";\r\n\r\n    Registry public registry;\r\n    address public cfdModel;\r\n    address public cfdRegistry;\r\n    address public forwardFactory;\r\n    address public feeds;\r\n\r\n    constructor(\r\n        address _registry,\r\n        address _cfdModel,\r\n        address _forwardFactory,\r\n        address _feeds\r\n    ) public {\r\n        setRegistry(_registry);\r\n        setCFDModel(_cfdModel);\r\n        setForwardFactory(_forwardFactory);\r\n        setFeeds(_feeds);\r\n    }\r\n\r\n    function setRegistry(address _registry) public onlyOwner {\r\n        registry = Registry(_registry);\r\n    }\r\n\r\n    function setCFDModel(address _cfdModel) public onlyOwner {\r\n        cfdModel = _cfdModel;\r\n    }\r\n\r\n    function setCFDRegistry(address _cfdRegistry) public onlyOwner {\r\n        cfdRegistry = _cfdRegistry;\r\n    }\r\n\r\n    function setForwardFactory(address _forwardFactory) public onlyOwner {\r\n        forwardFactory = _forwardFactory;\r\n    }\r\n\r\n    function setFeeds(address _feeds) public onlyOwner {\r\n        feeds = _feeds;\r\n    }\r\n\r\n    /**\r\n     * Create a new ContractForDifference instance\r\n     *\r\n     * @param _marketId Contract for this market (see Feeds.sol markets)\r\n     * @param _strikePrice Contact strike price\r\n     * @param _notionalAmountDai Contract notional amount\r\n     * @param _isBuyer If the caller is to be the buyer, else they will be the seller\r\n     * @param _value Amount of DAI to deposit\r\n     *\r\n     * @return address of new contract\r\n     */\r\n    function createContract(\r\n        bytes32 _marketId,\r\n        uint _strikePrice,\r\n        uint _notionalAmountDai,\r\n        bool _isBuyer,\r\n        uint _value\r\n    )\r\n        external\r\n        pre_cond(\r\n            registry.getDAI().allowance(msg.sender, address(this)) >= _value, \r\n            REASON_DAI_ALLOWANCE_TOO_LOW\r\n        )\r\n        returns (ContractForDifference cfd)\r\n    {\r\n        address creator = msg.sender;\r\n\r\n        cfd = ContractForDifference(\r\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\r\n        );\r\n        require(\r\n            registry.getDAI().transferFrom(creator, address(cfd), _value),\r\n            REASON_DAI_TRANSFER_FAILED\r\n        );\r\n        cfd.createNew(\r\n            address(registry),\r\n            cfdRegistry,\r\n            feeds,\r\n            creator,\r\n            _marketId,\r\n            _strikePrice,\r\n            _notionalAmountDai,\r\n            _isBuyer\r\n        );\r\n\r\n        registry.addCFD(address(cfd));\r\n        emit LogCFDFactoryNew(_marketId, creator, address(cfd));\r\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(address(cfd), creator);\r\n    }\r\n\r\n    /**\r\n     * Upgrade a CFD at a different set of contracts to this set of contracts.\r\n     * The old CFD itself will invoke this function to do the upgrade.\r\n\r\n     * @return address of new contract\r\n     */\r\n    function createByUpgrade()\r\n        external\r\n        returns (ContractForDifference newCfd)\r\n    {\r\n        // can only upgrade this if factory is the latest version\r\n        require(registry.getCFDFactoryLatest() == address(this), REASON_MUST_BE_LATEST);\r\n\r\n        address cfdAddr = msg.sender;\r\n\r\n        // can only upgrade if cfd registered and not with this latest version\r\n        address registryEntry = registry.allCFDs(cfdAddr);\r\n        require(\r\n            registryEntry != address(0) && registryEntry != address(this), \r\n            REASON_MUST_REGISTERED_CFD\r\n        );\r\n\r\n        ContractForDifference existingCfd = ContractForDifference(cfdAddr);\r\n        require(existingCfd.upgradeable(), REASON_UPGRADEABLE_FLAG_NOT_SET);\r\n\r\n        newCfd = ContractForDifference(\r\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\r\n        );\r\n\r\n        // Register in the CFD registry before calling createByUpgrade as\r\n        // createByUpgrade requires this to registerParty().\r\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(\r\n            address(newCfd),\r\n            existingCfd.buyer()\r\n        );\r\n\r\n        newCfd.createByUpgrade(\r\n            cfdAddr,\r\n            address(registry),\r\n            cfdRegistry,\r\n            feeds\r\n        );\r\n\r\n        // Put the CFD in the main Registry\r\n        registry.addCFD(address(newCfd));\r\n\r\n        // replicate logging for an ordinary create so queries will get this to\r\n        emit LogCFDFactoryNew(newCfd.market(), newCfd.buyer(), address(newCfd));\r\n        emit LogCFDFactoryNewByUpgrade(address(newCfd), address(existingCfd));\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\cfd\\ContractForDifferenceFactory.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-16T06:11:23.302Z",
  "devdoc": {
    "methods": {
      "createByUpgrade()": {
        "return": "address of new contract\r"
      },
      "createContract(bytes32,uint256,uint256,bool,uint256)": {
        "params": {
          "_isBuyer": "If the caller is to be the buyer, else they will be the seller\r",
          "_marketId": "Contract for this market (see Feeds.sol markets)\r",
          "_notionalAmountDai": "Contract notional amount\r",
          "_strikePrice": "Contact strike price\r",
          "_value": "Amount of DAI to deposit\r "
        },
        "return": "address of new contract\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createByUpgrade()": {
        "notice": "Upgrade a CFD at a different set of contracts to this set of contracts.\r The old CFD itself will invoke this function to do the upgrade.\r"
      },
      "createContract(bytes32,uint256,uint256,bool,uint256)": {
        "notice": "Create a new ContractForDifference instance\r "
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}