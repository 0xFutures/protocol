{
  "contractName": "ContractForDifferenceFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "forwardFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdModel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeds",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_cfdModel",
          "type": "address"
        },
        {
          "name": "_forwardFactory",
          "type": "address"
        },
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNew",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCFDAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oldCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNewByUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdModel",
          "type": "address"
        }
      ],
      "name": "setCFDModel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdRegistry",
          "type": "address"
        }
      ],
      "name": "setCFDRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_forwardFactory",
          "type": "address"
        }
      ],
      "name": "setForwardFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "name": "setFeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createByUpgrade",
      "outputs": [
        {
          "name": "newCfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "253:4884:5:-;;;1163:277;8:9:-1;5:2;;;30:1;27;20:12;5:2;1163:277:5;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1163:277:5;;;;;;;;;;;;;;;;515:6:19;:19;;-1:-1:-1;;;;;;515:19:19;524:10;515:19;;;;549:40;;1163:277:5;;;;;;-1:-1:-1;;;;;582:6:19;;549:40;;515:6;;549:40;1309:22:5;1321:9;1309:11;;;;:22;:::i;:::-;1341;1353:9;1341:11;;;;:22;:::i;:::-;1373:34;1391:15;1373:17;;;;:34;:::i;:::-;1417:16;1426:6;1417:8;;;;:16;:::i;:::-;1163:277;;;;253:4884;;1446:104;863:9:19;:7;;;;:9;:::i;:::-;855:18;;;;;;;;1513:8:5;:30;;-1:-1:-1;;;;;;1513:30:5;-1:-1:-1;;;;;1513:30:5;;;;;;;;;;1446:104::o;1556:94::-;863:9:19;:7;;;;:9;:::i;:::-;855:18;;;;;;;;1623:8:5;:20;;-1:-1:-1;;;;;;1623:20:5;-1:-1:-1;;;;;1623:20:5;;;;;;;;;;1556:94::o;1768:118::-;863:9:19;:7;;;;:9;:::i;:::-;855:18;;;;;;;;1847:14:5;:32;;-1:-1:-1;;;;;;1847:32:5;-1:-1:-1;;;;;1847:32:5;;;;;;;;;;1768:118::o;1892:82::-;863:9:19;:7;;;;:9;:::i;:::-;855:18;;;;;;;;1953:5:5;:14;;-1:-1:-1;;;;;;1953:14:5;-1:-1:-1;;;;;1953:14:5;;;;;;;;;;1892:82::o;979:90:19:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;253:4884:5:-;;;;;;;",
  "deployedSourceMap": "253:4884:5:-;;;;;;;;;-1:-1:-1;;;253:4884:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3723:1411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3723:1411:5;;;;;;;;-1:-1:-1;;;;;3723:1411:5;;;;;;;;;;;;;;1101:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1101:29:5;;;;2411:1100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2411:1100:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2411:1100:5;;;;;;;;;;;;;;;;;;;;;;;;;1069:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1069:26:5;;;;1347:137:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:19;;;;;;1040:23:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1040:23:5;;;;1010:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1010:24:5;;;;1892:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1892:82:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1892:82:5;-1:-1:-1;;;;;1892:82:5;;;659:77:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:19;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:19;;;;;;;;;;;;;;;;;;;;;;1656:106:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1656:106:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1656:106:5;-1:-1:-1;;;;;1656:106:5;;;1446:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1446:104:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1446:104:5;-1:-1:-1;;;;;1446:104:5;;;1556:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1556:94:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1556:94:5;-1:-1:-1;;;;;1556:94:5;;;1768:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1768:118:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1768:118:5;-1:-1:-1;;;;;1768:118:5;;;1136:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1136:20:5;;;;1655:107:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:19;-1:-1:-1;;;;;1655:107:19;;;3723:1411:5;3784:28;3944:4;-1:-1:-1;;;;;3902:47:5;:8;;;;;;;;;-1:-1:-1;;;;;3902:8:5;-1:-1:-1;;;;;3902:28:5;;:30;;;;;-1:-1:-1;;;3902:30:5;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3902:30:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3902:30:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3902:30:5;3951:21;;;;;;;;;;;;3902:30;3951:21;;;;;;;;;;;;-1:-1:-1;;;;;3902:47:5;;;;3894:79;;;;-1:-1:-1;;;;;3894:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3894:79:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4126:8:5;;:25;;;;;;4002:10;4126:25;;;;;;;;4002:10;;3984:15;;-1:-1:-1;;;;;4126:8:5;;;;:16;;:25;;;;;;;;;;;;;;:8;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;4126:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4126:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4126:25:5;;-1:-1:-1;;;;;;4182:27:5;;;;;;:61;;-1:-1:-1;;;;;;4213:30:5;;4238:4;4213:30;;4182:61;4258:26;;;;;;;;;;;;;;;;;;4161:133;;;;;;-1:-1:-1;;;;;4161:133:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4161:133:5;;4305:33;4363:7;4305:66;;4389:11;-1:-1:-1;;;;;4389:23:5;;:25;;;;;-1:-1:-1;;;4389:25:5;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4389:25:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4389:25:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4389:25:5;4416:31;;;;;;;;;;;;4389:25;4416:31;;;;;;;;;;;;4381:67;;;;;;-1:-1:-1;;;;;4381:67:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;4381:67:5;-1:-1:-1;4518:14:5;;;4550:8;;4503:56;;;;;;-1:-1:-1;;;;;4550:8:5;;;4503:56;;;;;;;;4518:14;;;4503:46;;:56;;;;;;;;;;;;;;4518:14;;4503:56;;;5:2:-1;;;;30:1;27;20:12;5:2;4503:56:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4503:56:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4503:56:5;4609:11;;4676:19;;;;;;;;4503:56;;-1:-1:-1;;;;;;4609:11:5;;;;4579:54;;4503:56;;4676:17;;;;;;:19;;;;;4503:56;;4676:19;;;;;;;;:17;:19;;;5:2:-1;;;;30:1;27;20:12;5:2;4676:19:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4676:19:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4676:19:5;4579:126;;;-1:-1:-1;;;4579:126:5;;;;;;-1:-1:-1;;;;;4579:126:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4579:126:5;;;;;;;-1:-1:-1;4579:126:5;;;;5:2:-1;;;;30:1;27;20:12;5:2;4579:126:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4781:8:5;;4804:11;;4829:5;;4716:128;;;;;;-1:-1:-1;;;;;4716:128:5;;;;;;;4781:8;;;4716:128;;;;4804:11;;;4716:128;;;;4829:5;;;4716:128;;;;;:22;;;;-1:-1:-1;4716:22:5;;-1:-1:-1;4716:128:5;;;;;4781:8;;4716:128;;;;;;;;4781:8;4716:22;:128;;;5:2:-1;;;;30:1;27;20:12;5:2;4716:128:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4854:8:5;;:32;;;;;;-1:-1:-1;;;;;4854:32:5;;;;;;;;;:8;;;;;-1:-1:-1;4854:15:5;;-1:-1:-1;4854:32:5;;;;;:8;;:32;;;;;;;:8;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;4854:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4854:32:5;;;;5016:6;-1:-1:-1;;;;;5016:12:5;;:14;;;;;-1:-1:-1;;;5016:14:5;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5016:14:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5016:14:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5016:14:5;4999:15;;;;;;;;-1:-1:-1;;;;;4982:66:5;;;;4999:13;;;;;:15;;;;;5016:14;;4999:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;4999:15:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4999:15:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4999:15:5;4982:66;;;-1:-1:-1;;;;;4982:66:5;;;;;;;;;;;4999:15;4982:66;;;5063:64;;;-1:-1:-1;;;;;5063:64:5;;;;;;;;;;;;;;;;;;;;3723:1411;;;;:::o;1101:29::-;;;-1:-1:-1;;;;;1101:29:5;;:::o;2411:1100::-;2754:25;2677:6;2619:8;;;;;;;;;-1:-1:-1;;;;;2619:8:5;-1:-1:-1;;;;;2619:15:5;;:17;;;;;-1:-1:-1;;;2619:17:5;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2619:17:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2619:17:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2619:17:5;:54;;;;;;2647:10;2619:54;;;;2667:4;2619:54;;;;;;-1:-1:-1;;;;;2619:27:5;;;;;;:54;;;;;:17;;:54;;;;;;;;:27;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;2619:54:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2619:54:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2619:54:5;2698:28;;;;;;;;;;;;2619:54;2698:28;;;;;;;;;;;2619:64;-1:-1:-1;2619:64:5;;2698:28;2619:64;285:26:0;;;;-1:-1:-1;;;;;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;285:26:0;-1:-1:-1;2890:14:5;;;2922:8;;2875:56;;;;;;-1:-1:-1;;;;;2922:8:5;;;2875:56;;;;;;;;2813:10;;2890:14;;;;;2875:46;;:56;;;;;;;;;;;;;;;2795:15;2890:14;2875:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2875:56:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2875:56:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2875:56:5;2972:8;;:17;;;;;;;;2875:56;;-1:-1:-1;;;;;;2972:8:5;;;;:15;;:17;;;;;2875:56;;2972:17;;;;;;;;:8;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;2972:17:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2972:17:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2972:17:5;:61;;;;;;-1:-1:-1;;;;;2972:61:5;;;;;;;;;;;;;;;;;;;;;;:30;;;;;;;:61;;;;;:17;;:61;;;;;;;-1:-1:-1;2972:30:5;:61;;;5:2:-1;;;;30:1;27;20:12;5:2;2972:61:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2972:61:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2972:61:5;3047:26;;;;;;;;;;;;2972:61;3047:26;;;;;;;;;;;;2951:132;;;;;;-1:-1:-1;;;;;2951:132:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2951:132:5;-1:-1:-1;3125:8:5;;3148:11;;3173:5;;3093:219;;;;;;-1:-1:-1;;;;;3125:8:5;;;3093:219;;;;3148:11;;;3093:219;;;;3173:5;;;3093:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;;;;;:219;;;;;3125:8;;3093:219;;;;;;;;3125:8;3093:10;:219;;;5:2:-1;;;;30:1;27;20:12;5:2;3093:219:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3323:8:5;;:29;;;;;;-1:-1:-1;;;;;3323:29:5;;;;;;;;;:8;;;;;-1:-1:-1;3323:15:5;;-1:-1:-1;3323:29:5;;;;;:8;;:29;;;;;;;:8;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;3323:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3367:50:5;;;-1:-1:-1;;;;;3367:50:5;;;;;;;;;;;-1:-1:-1;3384:9:5;;-1:-1:-1;3367:50:5;;;;;;;;;;3457:11;;3427:77;;;;;;-1:-1:-1;;;;;3427:77:5;;;;;;;;;;;;;;;;3457:11;;;;;3427:54;;:77;;;;;3457:11;;3427:77;;;;;;;3457:11;;3427:77;;;5:2:-1;;;;30:1;27;20:12;5:2;3427:77:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3427:77:5;;;;321:1:0;2411:1100:5;;;;;;;;;:::o;1069:26::-;;;-1:-1:-1;;;;;1069:26:5;;:::o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:19;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:19;;;1347:137::o;1040:23:5:-;;;-1:-1:-1;;;;;1040:23:5;;:::o;1010:24::-;;;-1:-1:-1;;;;;1010:24:5;;:::o;1892:82::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;;;1953:5:5;:14;;-1:-1:-1;;;;;;1953:14:5;-1:-1:-1;;;;;1953:14:5;;;;;;;;;;1892:82::o;659:77:19:-;697:7;723:6;-1:-1:-1;;;;;723:6:19;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;1656:106:5:-;863:9:19;:7;:9::i;:::-;855:18;;;;;;;;1729:11:5;:26;;-1:-1:-1;;;;;;1729:26:5;-1:-1:-1;;;;;1729:26:5;;;;;;;;;;1656:106::o;1446:104::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;;;1513:8:5;:30;;-1:-1:-1;;;;;;1513:30:5;-1:-1:-1;;;;;1513:30:5;;;;;;;;;;1446:104::o;1556:94::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;;;1623:8:5;:20;;-1:-1:-1;;;;;;1623:20:5;-1:-1:-1;;;;;1623:20:5;;;;;;;;;;1556:94::o;1768:118::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;;;1847:14:5;:32;;-1:-1:-1;;;;;;1847:32:5;-1:-1:-1;;;;;1847:32:5;;;;;;;;;;1768:118::o;1136:20::-;;;-1:-1:-1;;;;;1136:20:5;;:::o;1655:107:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:19;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:19;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:19;-1:-1:-1;;;;;2065:17:19;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../DBC.sol\";\nimport \"../Registry.sol\";\nimport \"../ForwardFactory.sol\";\nimport \"./ContractForDifference.sol\";\nimport \"./ContractForDifferenceRegistry.sol\";\n\ncontract ContractForDifferenceFactory is DBC, Ownable {\n    event LogCFDFactoryNew(\n        bytes32 indexed marketId,\n        address indexed creator,\n        address newCFDAddr\n    );\n    event LogCFDFactoryNewByUpgrade(\n        address indexed newCFDAddr,\n        address oldCFDAddr\n    );\n\n    string constant REASON_MUST_BE_LATEST = \"Can only upgrade on a factory that is the latest\";\n    string constant REASON_MUST_REGISTERED_CFD = \"Caller must be a registered CFD\";\n    string constant REASON_UPGRADEABLE_FLAG_NOT_SET = \"upgradeable is not set in the CFD\";\n    string constant REASON_DAI_TRANSFER_FAILED = \"Failure transfering ownership of DAI tokens\";\n    string constant REASON_DAI_ALLOWANCE_TOO_LOW = \"DAI allowance is less than the _value\";\n\n    Registry public registry;\n    address public cfdModel;\n    address public cfdRegistry;\n    address public forwardFactory;\n    address public feeds;\n\n    constructor(\n        address _registry,\n        address _cfdModel,\n        address _forwardFactory,\n        address _feeds\n    ) public {\n        setRegistry(_registry);\n        setCFDModel(_cfdModel);\n        setForwardFactory(_forwardFactory);\n        setFeeds(_feeds);\n    }\n\n    function setRegistry(address _registry) public onlyOwner {\n        registry = Registry(_registry);\n    }\n\n    function setCFDModel(address _cfdModel) public onlyOwner {\n        cfdModel = _cfdModel;\n    }\n\n    function setCFDRegistry(address _cfdRegistry) public onlyOwner {\n        cfdRegistry = _cfdRegistry;\n    }\n\n    function setForwardFactory(address _forwardFactory) public onlyOwner {\n        forwardFactory = _forwardFactory;\n    }\n\n    function setFeeds(address _feeds) public onlyOwner {\n        feeds = _feeds;\n    }\n\n    /**\n     * Create a new ContractForDifference instance\n     *\n     * @param _marketId Contract for this market (see Feeds.sol markets)\n     * @param _strikePrice Contact strike price\n     * @param _notionalAmountDai Contract notional amount\n     * @param _isBuyer If the caller is to be the buyer, else they will be the seller\n     * @param _value Amount of DAI to deposit\n     *\n     * @return address of new contract\n     */\n    function createContract(\n        bytes32 _marketId,\n        uint _strikePrice,\n        uint _notionalAmountDai,\n        bool _isBuyer,\n        uint _value\n    )\n        external\n        pre_cond(\n            registry.getDAI().allowance(msg.sender, address(this)) >= _value, \n            REASON_DAI_ALLOWANCE_TOO_LOW\n        )\n        returns (ContractForDifference cfd)\n    {\n        address creator = msg.sender;\n\n        cfd = ContractForDifference(\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\n        );\n        require(\n            registry.getDAI().transferFrom(creator, address(cfd), _value),\n            REASON_DAI_TRANSFER_FAILED\n        );\n        cfd.create(\n            address(registry),\n            cfdRegistry,\n            feeds,\n            creator,\n            _marketId,\n            _strikePrice,\n            _notionalAmountDai,\n            _isBuyer\n        );\n\n        registry.addCFD(address(cfd));\n        emit LogCFDFactoryNew(_marketId, creator, address(cfd));\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(address(cfd), creator);\n    }\n\n    /**\n     * Upgrade a CFD at a different set of contracts to this set of contracts.\n     * The old CFD itself will invoke this function to do the upgrade.\n\n     * @return address of new contract\n     */\n    function createByUpgrade()\n        external\n        returns (ContractForDifference newCfd)\n    {\n        // can only upgrade this if factory is the latest version\n        require(registry.getCFDFactoryLatest() == address(this), REASON_MUST_BE_LATEST);\n\n        address cfdAddr = msg.sender;\n\n        // can only upgrade if cfd registered and not with this latest version\n        address registryEntry = registry.allCFDs(cfdAddr);\n        require(\n            registryEntry != address(0) && registryEntry != address(this), \n            REASON_MUST_REGISTERED_CFD\n        );\n\n        ContractForDifference existingCfd = ContractForDifference(cfdAddr);\n        require(existingCfd.upgradeable(), REASON_UPGRADEABLE_FLAG_NOT_SET);\n\n        newCfd = ContractForDifference(\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\n        );\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(\n            address(newCfd),\n            existingCfd.buyer()\n        );\n\n        newCfd.createByUpgrade(\n            cfdAddr,\n            address(registry),\n            cfdRegistry,\n            feeds\n        );\n        registry.addCFD(address(newCfd));\n\n        // replicate logging for an ordinary create so queries will get this to\n        emit LogCFDFactoryNew(newCfd.market(), newCfd.buyer(), address(newCfd));\n        emit LogCFDFactoryNewByUpgrade(address(newCfd), address(existingCfd));\n    }\n\n}\n",
  "sourcePath": "/home/hatch/projects/0xfutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-22T01:42:08.689Z",
  "devdoc": {
    "methods": {
      "createByUpgrade()": {
        "return": "address of new contract"
      },
      "createContract(bytes32,uint256,uint256,bool,uint256)": {
        "params": {
          "_isBuyer": "If the caller is to be the buyer, else they will be the seller",
          "_marketId": "Contract for this market (see Feeds.sol markets)",
          "_notionalAmountDai": "Contract notional amount",
          "_strikePrice": "Contact strike price",
          "_value": "Amount of DAI to deposit"
        },
        "return": "address of new contract"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createByUpgrade()": {
        "notice": "Upgrade a CFD at a different set of contracts to this set of contracts. The old CFD itself will invoke this function to do the upgrade."
      },
      "createContract(bytes32,uint256,uint256,bool,uint256)": {
        "notice": "Create a new ContractForDifference instance"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}