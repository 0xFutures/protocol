{
  "contractName": "ContractForDifferenceFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "forwardFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfdModel",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeds",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_cfdModel",
          "type": "address"
        },
        {
          "name": "_forwardFactory",
          "type": "address"
        },
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNew",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newCFDAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "oldCFDAddr",
          "type": "address"
        }
      ],
      "name": "LogCFDFactoryNewByUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdModel",
          "type": "address"
        }
      ],
      "name": "setCFDModel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdRegistry",
          "type": "address"
        }
      ],
      "name": "setCFDRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_forwardFactory",
          "type": "address"
        }
      ],
      "name": "setForwardFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_feeds",
          "type": "address"
        }
      ],
      "name": "setFeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountWei",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createByUpgrade",
      "outputs": [
        {
          "name": "newCfd",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "284:4280:6:-;;;1006:277;8:9:-1;5:2;;;30:1;27;20:12;5:2;1006:277:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:5:10;:18;;-1:-1:-1;;;;;;567:18:10;575:10;567:18;;;1006:277:6;;;1152:22;1006:277;1152:11;;;;:22;:::i;:::-;1184;1196:9;1184:11;;;;:22;:::i;:::-;1216:34;1234:15;1216:17;;;;:34;:::i;:::-;1260:16;1269:6;1260:8;;;;:16;:::i;:::-;1006:277;;;;284:4280;;1289:104;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1356:8:6;:30;;-1:-1:-1;;;;;;1356:30:6;-1:-1:-1;;;;;1356:30:6;;;;;;;;;;1289:104::o;1399:94::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1466:8:6;:20;;-1:-1:-1;;;;;;1466:20:6;-1:-1:-1;;;;;1466:20:6;;;;;;;;;;1399:94::o;1611:118::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1690:14:6;:32;;-1:-1:-1;;;;;;1690:32:6;-1:-1:-1;;;;;1690:32:6;;;;;;;;;;1611:118::o;1735:82::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1796:5:6;:14;;-1:-1:-1;;;;;;1796:14:6;-1:-1:-1;;;;;1796:14:6;;;;;;;;;;1735:82::o;284:4280::-;;;;;;;",
  "deployedSourceMap": "284:4280:6:-;;;;;;;;;-1:-1:-1;;;284:4280:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:784;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2208:784:6;;;;;;;;;;;;;;3204:1357;;;;944:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;944:29:6;;;;912:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;912:26:6;;;;1001:111:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:10;;;;;;883:23:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;883:23:6;;;;853:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;853:24:6;;;;1735:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1735:82:6;-1:-1:-1;;;;;1735:82:6;;;;;238:20:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:10;;;;1499:106:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1499:106:6;-1:-1:-1;;;;;1499:106:6;;;;;1289:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1289:104:6;-1:-1:-1;;;;;1289:104:6;;;;;1399:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1399:94:6;-1:-1:-1;;;;;1399:94:6;;;;;1611:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1611:118:6;-1:-1:-1;;;;;1611:118:6;;;;;979:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:20:6;;;;1274:103:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:10;-1:-1:-1;;;;;1274:103:10;;;;;2208:784:6;2533:14;;;2565:8;;2518:56;;;;;;-1:-1:-1;;;;;2565:8:6;;;2518:56;;;;;;;;2398:25;;2457:10;;2533:14;;;;;2518:46;;:56;;;;;;;;;;;;;;2398:25;2533:14;2518:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2518:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2518:56:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2518:56:6;2635:8;;2657:11;;2682:5;;2594:227;;;;;;-1:-1:-1;;;;;2635:8:6;;;2594:227;;;;2657:11;;;2594:227;;;;2682:5;;;2594:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:56;;-1:-1:-1;2594:10:6;;;;;;2611:9;;2594:227;;;;;2635:8;;2594:227;;;;;;;2611:9;2594:10;:227;;;5:2:-1;;;;30:1;27;20:12;5:2;2594:227:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2831:8:6;;:20;;;;;;-1:-1:-1;;;;;2831:20:6;;;;;;;;;:8;;;;;-1:-1:-1;2831:15:6;;-1:-1:-1;2831:20:6;;;;;-1:-1:-1;2831:8:6;;:20;;;;;:8;;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;2831:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2866:41:6;;;-1:-1:-1;;;;;2866:41:6;;;;;;;;;;;-1:-1:-1;2883:9:6;;-1:-1:-1;2866:41:6;;;;;;;;;;2947:11;;2917:68;;;;;;-1:-1:-1;;;;;2917:68:6;;;;;;;;;;;;;;;;2947:11;;;;;2917:54;;:68;;;;;2947:11;;2917:68;;;;;;;2947:11;;2917:68;;;5:2:-1;;;;30:1;27;20:12;5:2;2917:68:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2917:68:6;;;;2208:784;;;;;;;:::o;3204:1357::-;3281:28;3481:15;3599:21;3760:33;3441:4;-1:-1:-1;;;;;3399:47:6;:8;;;;;;;;;-1:-1:-1;;;;;3399:8:6;-1:-1:-1;;;;;3399:28:6;;:30;;;;;-1:-1:-1;;;3399:30:6;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3399:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3399:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3399:30:6;3448:21;;;;;;;;;;;;3399:30;3448:21;;;;;;;;;;;;-1:-1:-1;;;;;3399:47:6;;;;3391:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3391:79:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3623:8:6;;:25;;;;;;3499:10;3623:25;;;;;;;;3499:10;;-1:-1:-1;;;;;;3623:8:6;;;;:16;;:25;;;;;;;;;;;;;;:8;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;3623:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3623:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3623:25:6;;-1:-1:-1;;;;;;3666:20:6;;;;;;:54;;-1:-1:-1;;;;;;3690:30:6;;3715:4;3690:30;;3666:54;3722:26;;;;;;;;;;;;;;;;;;3658:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3658:91:6;;3818:7;3760:66;;3844:11;-1:-1:-1;;;;;3844:23:6;;:25;;;;;-1:-1:-1;;;3844:25:6;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3844:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3844:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3844:25:6;3871:31;;;;;;;;;;;;3844:25;3871:31;;;;;;;;;;;;3836:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3836:67:6;-1:-1:-1;3973:14:6;;;4005:8;;3958:56;;;;;;-1:-1:-1;;;;;4005:8:6;;;3958:56;;;;;;;;3973:14;;;3958:46;;:56;;;;;;;;;;;;;;3973:14;;3958:56;;;5:2:-1;;;;30:1;27;20:12;5:2;3958:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3958:56:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3958:56:6;4064:11;;4122:19;;;;;;;;3958:56;;-1:-1:-1;;;;;;4064:11:6;;;;4034:54;;3958:56;;4122:17;;;;;;:19;;;;;3958:56;;4122:19;;;;;;;;:17;:19;;;5:2:-1;;;;30:1;27;20:12;5:2;4122:19:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4122:19:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4122:19:6;4034:117;;;-1:-1:-1;;;4034:117:6;;;;;;-1:-1:-1;;;;;4034:117:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4034:117:6;;;;;;;-1:-1:-1;4034:117:6;;;;5:2:-1;;;;30:1;27;20:12;5:2;4034:117:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4244:8:6;;4267:11;;4292:5;;4162:145;;;;;;-1:-1:-1;;;;;4162:145:6;;;;;;;4244:8;;;4162:145;;;;4267:11;;;4162:145;;;;4292:5;;;4162:145;;;;;:22;;;;-1:-1:-1;4162:22:6;;-1:-1:-1;4191:9:6;;4162:145;;;;;4244:8;;4162:145;;;;;;;4191:9;4162:22;:145;;;5:2:-1;;;;30:1;27;20:12;5:2;4162:145:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4317:8:6;;:23;;;;;;-1:-1:-1;;;;;4317:23:6;;;;;;;;;:8;;;;;-1:-1:-1;4317:15:6;;-1:-1:-1;4317:23:6;;;;;-1:-1:-1;4317:8:6;;:23;;;;;:8;;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;4317:23:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4317:23:6;;;;4470:6;-1:-1:-1;;;;;4470:12:6;;:14;;;;;-1:-1:-1;;;4470:14:6;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4470:14:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4470:14:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4470:14:6;4453:15;;;;;;;;-1:-1:-1;;;;;4436:57:6;;;;4453:13;;;;;:15;;;;;4470:14;;4453:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;4453:15:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4453:15:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4453:15:6;4436:57;;;-1:-1:-1;;;;;4436:57:6;;;;;;;;;;;4453:15;4436:57;;;4508:46;;;-1:-1:-1;;;;;4508:46:6;;;;;;;;;;;;;;;;;;;;3204:1357;;;;:::o;944:29::-;;;-1:-1:-1;;;;;944:29:6;;:::o;912:26::-;;;-1:-1:-1;;;;;912:26:6;;:::o;1001:111:10:-;719:5;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:10;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;;;;;1089:18:10;;;1001:111::o;883:23:6:-;;;-1:-1:-1;;;;;883:23:6;;:::o;853:24::-;;;-1:-1:-1;;;;;853:24:6;;:::o;1735:82::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1796:5:6;:14;;-1:-1:-1;;;;;;1796:14:6;-1:-1:-1;;;;;1796:14:6;;;;;;;;;;1735:82::o;238:20:10:-;;;-1:-1:-1;;;;;238:20:10;;:::o;1499:106:6:-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1572:11:6;:26;;-1:-1:-1;;;;;;1572:26:6;-1:-1:-1;;;;;1572:26:6;;;;;;;;;;1499:106::o;1289:104::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1356:8:6;:30;;-1:-1:-1;;;;;;1356:30:6;-1:-1:-1;;;;;1356:30:6;;;;;;;;;;1289:104::o;1399:94::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1466:8:6;:20;;-1:-1:-1;;;;;;1466:20:6;-1:-1:-1;;;;;1466:20:6;;;;;;;;;;1399:94::o;1611:118::-;719:5:10;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1690:14:6;:32;;-1:-1:-1;;;;;;1690:32:6;-1:-1:-1;;;;;1690:32:6;;;;;;;;;;1611:118::o;979:20::-;;;-1:-1:-1;;;;;979:20:6;;:::o;1274:103:10:-;719:5;;-1:-1:-1;;;;;719:5:10;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;-1:-1:-1;;;;;1582:23:10;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:10;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;;;;;1661:17:10;-1:-1:-1;;;;;1661:17:10;;;;;;;;;;1512:171::o",
  "source": "pragma solidity ^0.4.23;\npragma experimental \"v0.5.0\";\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../DBC.sol\";\nimport \"../Registry.sol\";\nimport \"../ForwardFactory.sol\";\nimport \"./ContractForDifference.sol\";\nimport \"./ContractForDifferenceRegistry.sol\";\n\ncontract ContractForDifferenceFactory is DBC, Ownable {\n    event LogCFDFactoryNew(\n        bytes32 indexed marketId,\n        address indexed creator,\n        address newCFDAddr\n    );\n    event LogCFDFactoryNewByUpgrade(\n        address indexed newCFDAddr,\n        address oldCFDAddr\n    );\n\n    string constant REASON_MUST_BE_LATEST = \"Can only upgrade on a factory that is the latest\";\n    string constant REASON_MUST_REGISTERED_CFD = \"Caller must be a registered CFD\";\n    string constant REASON_UPGRADEABLE_FLAG_NOT_SET = \"upgradeable is not set in the CFD\";\n\n    Registry public registry;\n    address public cfdModel;\n    address public cfdRegistry;\n    address public forwardFactory;\n    address public feeds;\n\n    constructor(\n        address _registry,\n        address _cfdModel,\n        address _forwardFactory,\n        address _feeds\n    ) public {\n        setRegistry(_registry);\n        setCFDModel(_cfdModel);\n        setForwardFactory(_forwardFactory);\n        setFeeds(_feeds);\n    }\n\n    function setRegistry(address _registry) public onlyOwner {\n        registry = Registry(_registry);\n    }\n\n    function setCFDModel(address _cfdModel) public onlyOwner {\n        cfdModel = _cfdModel;\n    }\n\n    function setCFDRegistry(address _cfdRegistry) public onlyOwner {\n        cfdRegistry = _cfdRegistry;\n    }\n\n    function setForwardFactory(address _forwardFactory) public onlyOwner {\n        forwardFactory = _forwardFactory;\n    }\n\n    function setFeeds(address _feeds) public onlyOwner {\n        feeds = _feeds;\n    }\n\n    /**\n     * Create a new ContractForDifference instance\n     *\n     * @param _marketId Contract for this market (see Feeds.sol markets)\n     * @param _strikePrice Contact strike price\n     * @param _notionalAmountWei Contract notional amount\n     * @param _isBuyer If the caller is to be the buyer, else they will be the seller\n     *\n     * @return address of new contract\n     */\n    function createContract(\n        bytes32 _marketId,\n        uint _strikePrice,\n        uint _notionalAmountWei,\n        bool _isBuyer\n    )\n        external\n        payable\n        returns (ContractForDifference cfd)\n    {\n        address creator = msg.sender;\n        cfd = ContractForDifference(\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\n        );\n        cfd.create.value(msg.value)(\n            registry,\n            cfdRegistry,\n            feeds,\n            creator,\n            _marketId,\n            _strikePrice,\n            _notionalAmountWei,\n            _isBuyer\n        );\n        registry.addCFD(cfd);\n        emit LogCFDFactoryNew(_marketId, creator, cfd);\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(cfd, creator);\n    }\n\n    /**\n     * Upgrade a CFD at a different set of contracts to this set of contracts.\n     * The old CFD itself will invoke this function to do the upgrade.\n\n     * @return address of new contract\n     */\n    function createByUpgrade()\n        external\n        payable\n        returns (ContractForDifference newCfd)\n    {\n        // can only upgrade this if factory is the latest version\n        require(registry.getCFDFactoryLatest() == address(this), REASON_MUST_BE_LATEST);\n\n        address cfdAddr = msg.sender;\n\n        // can only upgrade if cfd registered and not with this latest version\n        address registryEntry = registry.allCFDs(cfdAddr);\n        require(registryEntry != 0x0 && registryEntry != address(this), REASON_MUST_REGISTERED_CFD);\n\n        ContractForDifference existingCfd = ContractForDifference(cfdAddr);\n        require(existingCfd.upgradeable(), REASON_UPGRADEABLE_FLAG_NOT_SET);\n\n        newCfd = ContractForDifference(\n            ForwardFactory(forwardFactory).createForwarder(cfdModel)\n        );\n        ContractForDifferenceRegistry(cfdRegistry).registerNew(\n            newCfd,\n            existingCfd.buyer()\n        );\n\n        newCfd.createByUpgrade.value(msg.value)(\n            cfdAddr,\n            address(registry),\n            cfdRegistry,\n            feeds\n        );\n        registry.addCFD(newCfd);\n\n        // replicate logging for an ordinary create so queries will get this to\n        emit LogCFDFactoryNew(newCfd.market(), newCfd.buyer(), newCfd);\n        emit LogCFDFactoryNewByUpgrade(newCfd, existingCfd);\n    }\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-03T10:01:36.071Z"
}