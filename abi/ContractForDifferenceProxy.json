{
  "contractName": "ContractForDifferenceProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_desiredStrikePrice",
          "type": "uint256"
        },
        {
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "sellPrepare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "sellUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "sellCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_buyBuyerSide",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "topup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "transferPosition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "forceTerminate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "cancelNew",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061110e806100206000396000f3fe6080604052600436106100a05763ffffffff60e060020a60003504166303257f7481146100a55780630900f010146100e05780631e2a9d4c146101135780632cbaf35a1461015657806349f386a4146101955780638340f549146101e0578063ae113bf414610223578063c128d52f14610256578063d9aa0aab146102cf578063df2b13031461030a578063f3fef3a31461033d578063fdb1087714610376575b600080fd5b3480156100b157600080fd5b506100de600480360360408110156100c857600080fd5b50600160a060020a0381351690602001356103a9565b005b3480156100ec57600080fd5b506100de6004803603602081101561010357600080fd5b5035600160a060020a031661040e565b34801561011f57600080fd5b506100de6004803603606081101561013657600080fd5b50600160a060020a03813581169160208101359091169060400135610467565b34801561016257600080fd5b506100de6004803603606081101561017957600080fd5b50600160a060020a038135169060208101359060400135610721565b3480156101a157600080fd5b506100de600480360360808110156101b857600080fd5b50600160a060020a038135811691602081013590911690604081013515159060600135610772565b3480156101ec57600080fd5b506100de6004803603606081101561020357600080fd5b50600160a060020a03813581169160208101359091169060400135610a11565b34801561022f57600080fd5b506100de6004803603602081101561024657600080fd5b5035600160a060020a0316610c72565b34801561026257600080fd5b506102b3600480360360e081101561027957600080fd5b50600160a060020a03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610cb0565b60408051600160a060020a039092168252519081900360200190f35b3480156102db57600080fd5b506100de600480360360408110156102f257600080fd5b50600160a060020a0381358116916020013516610f82565b34801561031657600080fd5b506100de6004803603602081101561032d57600080fd5b5035600160a060020a0316610fdd565b34801561034957600080fd5b506100de6004803603604081101561036057600080fd5b50600160a060020a03813516906020013561101b565b34801561038257600080fd5b506100de6004803603602081101561039957600080fd5b5035600160a060020a0316611064565b81600160a060020a0316631a9fddf2826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156103f257600080fd5b505af1158015610406573d6000803e3d6000fd5b505050505050565b80600160a060020a031663d55ec6976040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b5050505050565b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600160a060020a038416916323b872dd9160648083019260209291908290030181600087803b1580156104bf57600080fd5b505af11580156104d3573d6000803e3d6000fd5b505050506040513d60208110156104e957600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c3833981519152918101919091529015156105b15760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561057657818101518382015260200161055e565b50505050905090810190601f1680156105a35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506040805160e160020a636eb1769f028152306004820152600160a060020a0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b505110156106bb576040805160e060020a63095ea7b3028152600160a060020a038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b505050506040513d60208110156106b857600080fd5b50505b82600160a060020a03166330db555f826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b50505050505050565b82600160a060020a031663818197ea83836040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b15801561070457600080fd5b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600160a060020a038516916323b872dd9160648083019260209291908290030181600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c3833981519152918101919091529015156108805760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561057657818101518382015260200161055e565b506040805160e160020a636eb1769f028152306004820152600160a060020a0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d60208110156108fe57600080fd5b5051101561098a576040805160e060020a63095ea7b3028152600160a060020a038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b15801561095d57600080fd5b505af1158015610971573d6000803e3d6000fd5b505050506040513d602081101561098757600080fd5b50505b604080517fe24c469b0000000000000000000000000000000000000000000000000000000081528315156004820152602481018390529051600160a060020a0386169163e24c469b91604480830192600092919082900301818387803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b5050505050505050565b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600160a060020a038416916323b872dd9160648083019260209291908290030181600087803b158015610a6957600080fd5b505af1158015610a7d573d6000803e3d6000fd5b505050506040513d6020811015610a9357600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c383398151915291810191909152901515610b1f5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561057657818101518382015260200161055e565b506040805160e160020a636eb1769f028152306004820152600160a060020a0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d6020811015610b9d57600080fd5b50511015610c29576040805160e060020a63095ea7b3028152600160a060020a038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b505050506040513d6020811015610c2657600080fd5b50505b82600160a060020a031663b6b55f25826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b15801561070457600080fd5b80600160a060020a031663497b13d36040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fd5b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600091600160a060020a038916916323b872dd9160648082019260209290919082900301818787803b158015610d0b57600080fd5b505af1158015610d1f573d6000803e3d6000fd5b505050506040513d6020811015610d3557600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c383398151915291810191909152901515610dc15760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561057657818101518382015260200161055e565b506040805160e160020a636eb1769f028152306004820152600160a060020a038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610e1557600080fd5b505afa158015610e29573d6000803e3d6000fd5b505050506040513d6020811015610e3f57600080fd5b50511015610ecb576040805160e060020a63095ea7b3028152600160a060020a038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610e9e57600080fd5b505af1158015610eb2573d6000803e3d6000fd5b505050506040513d6020811015610ec857600080fd5b50505b604080517f44a1e6180000000000000000000000000000000000000000000000000000000081526004810188905260248101879052604481018690528415156064820152608481018490529051600160a060020a038a16916344a1e6189160a48083019260209291908290030181600087803b158015610f4a57600080fd5b505af1158015610f5e573d6000803e3d6000fd5b505050506040513d6020811015610f7457600080fd5b505198975050505050505050565b81600160a060020a0316635e24e35d826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b1580156103f257600080fd5b80600160a060020a03166393a965126040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fd5b81600160a060020a0316632e1a7d4d826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156103f257600080fd5b80600160a060020a031663f797efda6040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e6465720000000000000000000000000000000000000000a165627a7a72305820ac86badde4b0d9a39069873baa87d72bfcc74f27b6775acf79094969815840af0029",
  "deployedBytecode": "0x6080604052600436106100a05763ffffffff60e060020a60003504166303257f7481146100a55780630900f010146100e05780631e2a9d4c146101135780632cbaf35a1461015657806349f386a4146101955780638340f549146101e0578063ae113bf414610223578063c128d52f14610256578063d9aa0aab146102cf578063df2b13031461030a578063f3fef3a31461033d578063fdb1087714610376575b600080fd5b3480156100b157600080fd5b506100de600480360360408110156100c857600080fd5b50600160a060020a0381351690602001356103a9565b005b3480156100ec57600080fd5b506100de6004803603602081101561010357600080fd5b5035600160a060020a031661040e565b34801561011f57600080fd5b506100de6004803603606081101561013657600080fd5b50600160a060020a03813581169160208101359091169060400135610467565b34801561016257600080fd5b506100de6004803603606081101561017957600080fd5b50600160a060020a038135169060208101359060400135610721565b3480156101a157600080fd5b506100de600480360360808110156101b857600080fd5b50600160a060020a038135811691602081013590911690604081013515159060600135610772565b3480156101ec57600080fd5b506100de6004803603606081101561020357600080fd5b50600160a060020a03813581169160208101359091169060400135610a11565b34801561022f57600080fd5b506100de6004803603602081101561024657600080fd5b5035600160a060020a0316610c72565b34801561026257600080fd5b506102b3600480360360e081101561027957600080fd5b50600160a060020a03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610cb0565b60408051600160a060020a039092168252519081900360200190f35b3480156102db57600080fd5b506100de600480360360408110156102f257600080fd5b50600160a060020a0381358116916020013516610f82565b34801561031657600080fd5b506100de6004803603602081101561032d57600080fd5b5035600160a060020a0316610fdd565b34801561034957600080fd5b506100de6004803603604081101561036057600080fd5b50600160a060020a03813516906020013561101b565b34801561038257600080fd5b506100de6004803603602081101561039957600080fd5b5035600160a060020a0316611064565b81600160a060020a0316631a9fddf2826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156103f257600080fd5b505af1158015610406573d6000803e3d6000fd5b505050505050565b80600160a060020a031663d55ec6976040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fd5b505af1158015610460573d6000803e3d6000fd5b5050505050565b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600160a060020a038416916323b872dd9160648083019260209291908290030181600087803b1580156104bf57600080fd5b505af11580156104d3573d6000803e3d6000fd5b505050506040513d60208110156104e957600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c3833981519152918101919091529015156105b15760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561057657818101518382015260200161055e565b50505050905090810190601f1680156105a35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506040805160e160020a636eb1769f028152306004820152600160a060020a0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561060557600080fd5b505afa158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b505110156106bb576040805160e060020a63095ea7b3028152600160a060020a038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b505050506040513d60208110156106b857600080fd5b50505b82600160a060020a03166330db555f826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b50505050505050565b82600160a060020a031663818197ea83836040518363ffffffff1660e060020a0281526004018083815260200182815260200192505050600060405180830381600087803b15801561070457600080fd5b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600160a060020a038516916323b872dd9160648083019260209291908290030181600087803b1580156107ca57600080fd5b505af11580156107de573d6000803e3d6000fd5b505050506040513d60208110156107f457600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c3833981519152918101919091529015156108805760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561057657818101518382015260200161055e565b506040805160e160020a636eb1769f028152306004820152600160a060020a0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d60208110156108fe57600080fd5b5051101561098a576040805160e060020a63095ea7b3028152600160a060020a038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b15801561095d57600080fd5b505af1158015610971573d6000803e3d6000fd5b505050506040513d602081101561098757600080fd5b50505b604080517fe24c469b0000000000000000000000000000000000000000000000000000000081528315156004820152602481018390529051600160a060020a0386169163e24c469b91604480830192600092919082900301818387803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b5050505050505050565b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600160a060020a038416916323b872dd9160648083019260209291908290030181600087803b158015610a6957600080fd5b505af1158015610a7d573d6000803e3d6000fd5b505050506040513d6020811015610a9357600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c383398151915291810191909152901515610b1f5760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561057657818101518382015260200161055e565b506040805160e160020a636eb1769f028152306004820152600160a060020a0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d6020811015610b9d57600080fd5b50511015610c29576040805160e060020a63095ea7b3028152600160a060020a038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b505050506040513d6020811015610c2657600080fd5b50505b82600160a060020a031663b6b55f25826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b15801561070457600080fd5b80600160a060020a031663497b13d36040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fd5b6040805160e060020a6323b872dd028152336004820152306024820152604481018390529051600091600160a060020a038916916323b872dd9160648082019260209290919082900301818787803b158015610d0b57600080fd5b505af1158015610d1f573d6000803e3d6000fd5b505050506040513d6020811015610d3557600080fd5b505160408051606081018252602c81526000805160206110a383398151915260208201526000805160206110c383398151915291810191909152901515610dc15760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360008381101561057657818101518382015260200161055e565b506040805160e160020a636eb1769f028152306004820152600160a060020a038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610e1557600080fd5b505afa158015610e29573d6000803e3d6000fd5b505050506040513d6020811015610e3f57600080fd5b50511015610ecb576040805160e060020a63095ea7b3028152600160a060020a038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610e9e57600080fd5b505af1158015610eb2573d6000803e3d6000fd5b505050506040513d6020811015610ec857600080fd5b50505b604080517f44a1e6180000000000000000000000000000000000000000000000000000000081526004810188905260248101879052604481018690528415156064820152608481018490529051600160a060020a038a16916344a1e6189160a48083019260209291908290030181600087803b158015610f4a57600080fd5b505af1158015610f5e573d6000803e3d6000fd5b505050506040513d6020811015610f7457600080fd5b505198975050505050505050565b81600160a060020a0316635e24e35d826040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b1580156103f257600080fd5b80600160a060020a03166393a965126040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fd5b81600160a060020a0316632e1a7d4d826040518263ffffffff1660e060020a02815260040180828152602001915050600060405180830381600087803b1580156103f257600080fd5b80600160a060020a031663f797efda6040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561044c57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e6465720000000000000000000000000000000000000000a165627a7a72305820ac86badde4b0d9a39069873baa87d72bfcc74f27b6775acf79094969815840af0029",
  "sourceMap": "174:3916:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:3916:7;;;;;;;",
  "deployedSourceMap": "174:3916:7:-;;;;;;;;;-1:-1:-1;;;174:3916:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1967:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1967:116:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1967:116:7;;;;;;;;;;;3484:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3484:85:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3484:85:7;-1:-1:-1;;;;;3484:85:7;;;2823:436;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2823:436:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2823:436:7;;;;;;;;;;;;;;;;;;1696:209;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1696:209:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1696:209:7;;;;;;;;;;;;;;2291:475;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2291:475:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2291:475:7;;;;;;;;;;;;;;;;;;;;;;;;;1193:440;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:440:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1193:440:7;;;;;;;;;;;;;;;;;;3998:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3998:89:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3998:89:7;-1:-1:-1;;;;;3998:89:7;;;380:754;;8:9:-1;5:2;;;30:1;27;20:12;5:2;380:754:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;380:754:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;380:754:7;;;;;;;;;;;;;;3637:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3637:135:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3637:135:7;;;;;;;;;;;3838:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3838:99:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3838:99:7;-1:-1:-1;;;;;3838:99:7;;;3319:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3319:106:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3319:106:7;;;;;;;;;2145:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2145:91:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2145:91:7;-1:-1:-1;;;;;2145:91:7;;;1967:116;2050:4;-1:-1:-1;;;;;2050:15:7;;2066:9;2050:26;;;;;-1:-1:-1;;;2050:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2050:26:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2050:26:7;;;;1967:116;;:::o;3484:85::-;3548:4;-1:-1:-1;;;;;3548:12:7;;:14;;;;;-1:-1:-1;;;3548:14:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3548:14:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3548:14:7;;;;3484:85;:::o;2823:436::-;2978:57;;;-1:-1:-1;;;;;2978:57:7;;3001:10;2978:57;;;;3021:4;2978:57;;;;;;;;;;;;-1:-1:-1;;;;;2978:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;2978:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;2978:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2978:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2978:57:7;3050:24;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2978:57:7;3050:24;;;-1:-1:-1;;;;;;;;;;;3050:24:7;;;;;;;;2957:127;;;;;;-1:-1:-1;;;;;2957:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2957:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3098:49:7;;;-1:-1:-1;;;;;3098:49:7;;3126:4;3098:49;;;;-1:-1:-1;;;;;3098:49:7;;;;;;;;;3150:6;;3098:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3098:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3098:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3098:49:7;:58;3094:131;;;3172:42;;;-1:-1:-1;;;;;3172:42:7;;-1:-1:-1;;;;;3172:42:7;;;;;;;-1:-1:-1;;3172:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3172:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3172:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3172:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3094:131:7;3234:4;-1:-1:-1;;;;;3234:10:7;;3245:6;3234:18;;;;;-1:-1:-1;;;3234:18:7;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3234:18:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3234:18:7;;;;2823:436;;;:::o;1696:209::-;1849:4;-1:-1:-1;;;;;1849:16:7;;1866:19;1887:10;1849:49;;;;;-1:-1:-1;;;1849:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2291:475:7;2472:57;;;-1:-1:-1;;;;;2472:57:7;;2495:10;2472:57;;;;2515:4;2472:57;;;;;;;;;;;;-1:-1:-1;;;;;2472:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;2472:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;2472:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2472:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2472:57:7;2544:24;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2472:57:7;2544:24;;;-1:-1:-1;;;;;;;;;;;2544:24:7;;;;;;;;2451:127;;;;;;-1:-1:-1;;;;;2451:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2451:127:7;-1:-1:-1;2592:49:7;;;-1:-1:-1;;;;;2592:49:7;;2620:4;2592:49;;;;-1:-1:-1;;;;;2592:49:7;;;;;;;;;2644:6;;2592:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;2592:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2592:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2592:49:7;:58;2588:131;;;2666:42;;;-1:-1:-1;;;;;2666:42:7;;-1:-1:-1;;;;;2666:42:7;;;;;;;-1:-1:-1;;2666:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2666:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2666:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2666:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2588:131:7;2728:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2728:8:7;;;;;:31;;;;;-1:-1:-1;;2728:31:7;;;;;;;-1:-1:-1;2728:8:7;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2728:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2728:31:7;;;;2291:475;;;;:::o;1193:440::-;1350:57;;;-1:-1:-1;;;;;1350:57:7;;1373:10;1350:57;;;;1393:4;1350:57;;;;;;;;;;;;-1:-1:-1;;;;;1350:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;1350:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;1350:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1350:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1350:57:7;1422:24;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1350:57:7;1422:24;;;-1:-1:-1;;;;;;;;;;;1422:24:7;;;;;;;;1329:127;;;;;;-1:-1:-1;;;;;1329:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1329:127:7;-1:-1:-1;1470:49:7;;;-1:-1:-1;;;;;1470:49:7;;1498:4;1470:49;;;;-1:-1:-1;;;;;1470:49:7;;;;;;;;;1522:6;;1470:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1470:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1470:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1470:49:7;:58;1466:131;;;1544:42;;;-1:-1:-1;;;;;1544:42:7;;-1:-1:-1;;;;;1544:42:7;;;;;;;-1:-1:-1;;1544:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;1544:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;1544:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1544:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1466:131:7;1606:4;-1:-1:-1;;;;;1606:12:7;;1619:6;1606:20;;;;;-1:-1:-1;;;1606:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3998:89:7;4064:4;-1:-1:-1;;;;;4064:14:7;;:16;;;;;-1:-1:-1;;;4064:16:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;380:754:7;706:57;;;-1:-1:-1;;;;;706:57:7;;729:10;706:57;;;;749:4;706:57;;;;;;;;;;;;644:25;;-1:-1:-1;;;;;706:22:7;;;;;:57;;;;;;;;;;;;;;;644:25;706:22;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;706:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;706:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;706:57:7;778:24;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;706:57:7;778:24;;;-1:-1:-1;;;;;;;;;;;778:24:7;;;;;;;;685:127;;;;;;-1:-1:-1;;;;;685:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;685:127:7;-1:-1:-1;826:50:7;;;-1:-1:-1;;;;;826:50:7;;854:4;826:50;;;;-1:-1:-1;;;;;826:50:7;;;;;;;;;879:6;;826:19;;;;;:50;;;;;;;;;;;;;;:19;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;826:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;826:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;826:50:7;:59;822:133;;;901:43;;;-1:-1:-1;;;;;901:43:7;;-1:-1:-1;;;;;901:43:7;;;;;;;-1:-1:-1;;901:43:7;;;;;;:17;;;;;;:43;;;;;;;;;;;;;;;-1:-1:-1;901:17:7;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;901:43:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;901:43:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;822:133:7;970:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;970:20:7;;;;;:157;;;;;;;;;;;;;;-1:-1:-1;970:20:7;:157;;;5:2:-1;;;;30:1;27;20:12;5:2;970:157:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;970:157:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;970:157:7;;380:754;-1:-1:-1;;;;;;;;380:754:7:o;3637:135::-;3731:4;-1:-1:-1;;;;;3731:21:7;;3753:11;3731:34;;;;;-1:-1:-1;;;3731:34:7;;;;;;;-1:-1:-1;;;;;3731:34:7;-1:-1:-1;;;;;3731:34:7;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3838:99:7;3909:4;-1:-1:-1;;;;;3909:19:7;;:21;;;;;-1:-1:-1;;;3909:21:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3319:106:7;3397:4;-1:-1:-1;;;;;3397:13:7;;3411:6;3397:21;;;;;-1:-1:-1;;;3397:21:7;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2145:91:7;2212:4;-1:-1:-1;;;;;2212:15:7;;:17;;;;;-1:-1:-1;;;2212:17:7;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./ContractForDifference.sol\";\nimport \"./ContractForDifferenceFactory.sol\";\n\n\ncontract ContractForDifferenceProxy {\n\n    string constant REASON_PROXY_NEEDS_FUNDS = \"Proxy needs to obtain amount from the sender\";\n\n    /**\n     * ContractForDifferenceFactory.createContract\n     */\n    function createContract(\n        ContractForDifferenceFactory _cfdf,\n        ERC20 _daiToken,\n        bytes32 _marketId,\n        uint _strikePrice,\n        uint _notionalAmountDai,\n        bool _isBuyer,\n        uint _value\n    )\n        external\n        returns (ContractForDifference cfd)\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value), \n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfdf)) < _value) {\n            _daiToken.approve(address(_cfdf), uint(-1));\n        }\n        cfd = _cfdf.createContract(\n            _marketId, \n            _strikePrice, \n            _notionalAmountDai, \n            _isBuyer, \n            _value\n        );\n    }\n\n    /**\n     * ContractForDifference.deposit\n     */\n    function deposit(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value), \n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.deposit(_value);\n    }\n\n    /**\n     * ContractForDifference.sellPrepare\n     */\n    function sellPrepare(\n        ContractForDifference _cfd,\n        uint _desiredStrikePrice,\n        uint _timeLimit\n    )\n        external\n    {\n        _cfd.sellPrepare(_desiredStrikePrice, _timeLimit);\n    }\n\n    /**\n     * ContractForDifference.sellUpdate\n     */\n    function sellUpdate(ContractForDifference _cfd, uint _newPrice) external {\n        _cfd.sellUpdate(_newPrice);\n    }\n\n    /**\n     * ContractForDifference.sellCancel\n     */\n    function sellCancel(ContractForDifference _cfd) external {\n        _cfd.sellCancel();\n    }\n\n    /**\n     * ContractForDifference.buy\n     */\n    function buy(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        bool _buyBuyerSide,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value), \n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.buy(_buyBuyerSide, _value);\n    }\n\n    /**\n     * ContractForDifference.topup\n     */\n    function topup(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value), \n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.topup(_value);\n    }\n\n    /**\n     * ContractForDifference.withdraw\n     */\n    function withdraw(ContractForDifference _cfd, uint _value) external {\n        _cfd.withdraw(_value);\n    }\n\n    /**\n     * ContractForDifference.upgrade\n     */\n    function upgrade(ContractForDifference _cfd) external {\n        _cfd.upgrade();\n    }\n\n    /**\n     * ContractForDifference.transferPosition\n     */\n    function transferPosition(ContractForDifference _cfd, address _newAddress) external {\n        _cfd.transferPosition(_newAddress);\n    }\n\n    /**\n     * ContractForDifference.forceTerminate\n     */\n    function forceTerminate(ContractForDifference _cfd) external {\n        _cfd.forceTerminate();\n    }\n\n    /**\n     * ContractForDifference.cancelNew\n     */\n    function cancelNew(ContractForDifference _cfd) external {\n        _cfd.cancelNew();\n    }\n\n}\n",
  "sourcePath": "/home/hatch/projects/0xfutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-22T01:42:08.692Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "buy(address,address,bool,uint256)": {
        "notice": "ContractForDifference.buy"
      },
      "cancelNew(address)": {
        "notice": "ContractForDifference.cancelNew"
      },
      "createContract(address,address,bytes32,uint256,uint256,bool,uint256)": {
        "notice": "ContractForDifferenceFactory.createContract"
      },
      "deposit(address,address,uint256)": {
        "notice": "ContractForDifference.deposit"
      },
      "forceTerminate(address)": {
        "notice": "ContractForDifference.forceTerminate"
      },
      "sellCancel(address)": {
        "notice": "ContractForDifference.sellCancel"
      },
      "sellPrepare(address,uint256,uint256)": {
        "notice": "ContractForDifference.sellPrepare"
      },
      "sellUpdate(address,uint256)": {
        "notice": "ContractForDifference.sellUpdate"
      },
      "topup(address,address,uint256)": {
        "notice": "ContractForDifference.topup"
      },
      "transferPosition(address,address)": {
        "notice": "ContractForDifference.transferPosition"
      },
      "upgrade(address)": {
        "notice": "ContractForDifference.upgrade"
      },
      "withdraw(address,uint256)": {
        "notice": "ContractForDifference.withdraw"
      }
    }
  }
}