{
  "contractName": "ContractForDifferenceProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_desiredStrikePrice",
          "type": "uint256"
        },
        {
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "sellPrepare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "sellUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "sellCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_buyBuyerSide",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "topup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "transferPosition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "liquidateMutual",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "liquidateMutualCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "forceTerminate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "cancelNew",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "changeStrikePrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeStrikePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"sellUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"topup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_desiredStrikePrice\",\"type\":\"uint256\"},{\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"sellPrepare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_buyBuyerSide\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"liquidateMutual\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"cancelNew\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdf\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createContract\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"transferPosition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"liquidateMutualCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"forceTerminate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"sellCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"buy(address,address,bool,uint256)\":{\"notice\":\"ContractForDifference.buy\"},\"cancelNew(address)\":{\"notice\":\"ContractForDifference.cancelNew\"},\"changeStrikePrice(address,uint256)\":{\"notice\":\"ContractForDifference.changeStrikePrice\"},\"createContract(address,address,bytes32,uint256,uint256,bool,uint256)\":{\"notice\":\"ContractForDifferenceFactory.createContract\"},\"deposit(address,address,uint256)\":{\"notice\":\"ContractForDifference.deposit\"},\"forceTerminate(address)\":{\"notice\":\"ContractForDifference.forceTerminate\"},\"liquidateMutual(address)\":{\"notice\":\"ContractForDifference.liquidateMutual\"},\"liquidateMutualCancel(address)\":{\"notice\":\"ContractForDifference.liquidateMutualCancel\"},\"sellCancel(address)\":{\"notice\":\"ContractForDifference.sellCancel\"},\"sellPrepare(address,uint256,uint256)\":{\"notice\":\"ContractForDifference.sellPrepare\"},\"sellUpdate(address,uint256)\":{\"notice\":\"ContractForDifference.sellUpdate\"},\"topup(address,address,uint256)\":{\"notice\":\"ContractForDifference.topup\"},\"transferPosition(address,address)\":{\"notice\":\"ContractForDifference.transferPosition\"},\"upgrade(address)\":{\"notice\":\"ContractForDifference.upgrade\"},\"withdraw(address,uint256)\":{\"notice\":\"ContractForDifference.withdraw\"}}}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":\"ContractForDifferenceProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/ForwardFactory.sol\":{\"keccak256\":\"0x658664b425aa52f40007ac2f1be1a1da9ec2239c4a42c3864b5cac108f002e0c\",\"urls\":[\"bzzr://6514d98ab20cd063f94b0d29810df5d212dd80dd09471f24de909f4fb07c6f36\"]},\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x0986731682c3e9c4285e19fce2168034132597a8a426d70464b938faf3afb712\",\"urls\":[\"bzzr://cf6d6ba19a296b6852d2172a35acf18859d7e5d458d55fa9b3c2af91f93e734c\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifference.sol\":{\"keccak256\":\"0x5b0dc299c1931021417d33b16b412c66a6ced7770b81f5a5ca009eef650c0fe6\",\"urls\":[\"bzzr://cd57c29b5ba4a7fcd7e86aa4385302383ade9e3f37e95b847ddc043b3dcec601\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol\":{\"keccak256\":\"0xa000093f46ae67b001560a6e19ae6fd39d4bf5484e189bfbb6377476670c1f48\",\"urls\":[\"bzzr://6f2f83e4d732654dc427b12462ca58c5cdc24698b3d7da6949944fd57618c60a\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceLibrary.sol\":{\"keccak256\":\"0x7d8b4fae4675864c273b85f2b8a7ed8bc8f504b49f2955b0f69b694c30ec2771\",\"urls\":[\"bzzr://47e963e227389af89263baa271e1ec5c54c192883ec2697801807c3827110952\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":{\"keccak256\":\"0xcf61eb0bd76cca7617b2ecdc356427b3f9a376982d48efa4be4c2c984cb16be5\",\"urls\":[\"bzzr://644d718c926818e1383ae4d9dfbe497ac3814e95058f53efa345010e63039c45\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceRegistry.sol\":{\"keccak256\":\"0x95e4f89bfe51d9891bacc827672920154e2ed3987907acc99e9b42b75267063f\",\"urls\":[\"bzzr://af86789feedb2e75d3cc5620db2f00b19d255b00b5586f3a9fb6ca0cff1219f6\"]},\"/home/julien/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0xefd635b916e651d7387fccc160bee8ccf5b762be676f085763cd5d6b0a2b1f43\",\"urls\":[\"bzzr://86c89f916c5d48d60e405a2a1031628e4ac700e40e092b4a4259258a08823323\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0x5ad3a6c629e76f46ec7ddea114cfcf0e1c52634c781b649e9379e30e2a9a61e8\",\"urls\":[\"bzzr://c75cbead25acede9b84b8bfe2931123261330773d91a13be0c1aa72049c4d26a\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsExternal.sol\":{\"keccak256\":\"0x374448d9bd3cd9d4d6def94590d3d43fd5b8084422aadc78b46db3d4f21b6edd\",\"urls\":[\"bzzr://a199b155f1e17b792066dc195376ebc3c0a7a886997f751ba312a9e98d1feef9\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsInternal.sol\":{\"keccak256\":\"0x73a923b47d0ef1f81948e6e24b94ca6b27a5b704c5aa3bd79559697cc8c3e11e\",\"urls\":[\"bzzr://6772987070a1b03eafefba2b04ffa09acbbd7f144edb2aac5b75bc5785e9ecbe\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611112806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638340f54911610097578063da055fb711610066578063da055fb71461033c578063df2b130314610362578063f3fef3a314610388578063fdb10877146103b4576100f5565b80638340f54914610246578063ae113bf41461027c578063c128d52f146102a2578063d9aa0aab1461030e576100f5565b80631e2a9d4c116100d35780631e2a9d4c1461017a5780632cbaf35a146101b057806349f386a4146101e257806382cdc16e14610220576100f5565b8063011cae19146100fa57806303257f74146101285780630900f01014610154575b600080fd5b6101266004803603604081101561011057600080fd5b506001600160a01b0381351690602001356103da565b005b6101266004803603604081101561013e57600080fd5b506001600160a01b03813516906020013561043c565b6101266004803603602081101561016a57600080fd5b50356001600160a01b0316610482565b6101266004803603606081101561019057600080fd5b506001600160a01b038135811691602081013590911690604001356104d8565b610126600480360360608110156101c657600080fd5b506001600160a01b03813516906020810135906040013561076d565b610126600480360360808110156101f857600080fd5b506001600160a01b0381358116916020810135909116906040810135151590606001356107bb565b6101266004803603602081101561023657600080fd5b50356001600160a01b0316610a21565b6101266004803603606081101561025c57600080fd5b506001600160a01b03813581169160208101359091169060400135610a5c565b6101266004803603602081101561029257600080fd5b50356001600160a01b0316610c97565b6102f2600480360360e08110156102b857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610cd2565b604080516001600160a01b039092168252519081900360200190f35b6101266004803603604081101561032457600080fd5b506001600160a01b0381358116916020013516610f6b565b6101266004803603602081101561035257600080fd5b50356001600160a01b0316610fc3565b6101266004803603602081101561037857600080fd5b50356001600160a01b0316610ffe565b6101266004803603604081101561039e57600080fd5b506001600160a01b038135169060200135611039565b610126600480360360208110156103ca57600080fd5b50356001600160a01b031661107f565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042057600080fd5b505af1158015610434573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042057600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b15801561053057600080fd5b505af1158015610544573d6000803e3d6000fd5b505050506040513d602081101561055a57600080fd5b50516040805160608101909152602c8082526110bb60208301399061060057604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105c55781810151838201526020016105ad565b50505050905090810190601f1680156105f25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d602081101561067e57600080fd5b5051101561070a5760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b1580156106dd57600080fd5b505af11580156106f1573d6000803e3d6000fd5b505050506040513d602081101561070757600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561075057600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d602081101561083d57600080fd5b50516040805160608101909152602c8082526110bb6020830139906108a657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156105c55781810151838201526020016105ad565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d602081101561092457600080fd5b505110156109b05760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505050506040513d60208110156109ad57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b5050505050505050565b806001600160a01b03166379bf47966040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610ab457600080fd5b505af1158015610ac8573d6000803e3d6000fd5b505050506040513d6020811015610ade57600080fd5b50516040805160608101909152602c8082526110bb602083013990610b4757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156105c55781810151838201526020016105ad565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610b9b57600080fd5b505afa158015610baf573d6000803e3d6000fd5b505050506040513d6020811015610bc557600080fd5b50511015610c515760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050506040513d6020811015610c4e57600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561075057600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610d2d57600080fd5b505af1158015610d41573d6000803e3d6000fd5b505050506040513d6020811015610d5757600080fd5b50516040805160608101909152602c8082526110bb602083013990610dc057604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156105c55781810151838201526020016105ad565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610e1457600080fd5b505afa158015610e28573d6000803e3d6000fd5b505050506040513d6020811015610e3e57600080fd5b50511015610eca5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610e9d57600080fd5b505af1158015610eb1573d6000803e3d6000fd5b505050506040513d6020811015610ec757600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b158015610f3357600080fd5b505af1158015610f47573d6000803e3d6000fd5b505050506040513d6020811015610f5d57600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561042057600080fd5b806001600160a01b031663ddac6d646040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042057600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a723058205f906c985bdc318a2c9bb7eea44abf2b523d0052dbef2d94e0859dede28e8be70029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80638340f54911610097578063da055fb711610066578063da055fb71461033c578063df2b130314610362578063f3fef3a314610388578063fdb10877146103b4576100f5565b80638340f54914610246578063ae113bf41461027c578063c128d52f146102a2578063d9aa0aab1461030e576100f5565b80631e2a9d4c116100d35780631e2a9d4c1461017a5780632cbaf35a146101b057806349f386a4146101e257806382cdc16e14610220576100f5565b8063011cae19146100fa57806303257f74146101285780630900f01014610154575b600080fd5b6101266004803603604081101561011057600080fd5b506001600160a01b0381351690602001356103da565b005b6101266004803603604081101561013e57600080fd5b506001600160a01b03813516906020013561043c565b6101266004803603602081101561016a57600080fd5b50356001600160a01b0316610482565b6101266004803603606081101561019057600080fd5b506001600160a01b038135811691602081013590911690604001356104d8565b610126600480360360608110156101c657600080fd5b506001600160a01b03813516906020810135906040013561076d565b610126600480360360808110156101f857600080fd5b506001600160a01b0381358116916020810135909116906040810135151590606001356107bb565b6101266004803603602081101561023657600080fd5b50356001600160a01b0316610a21565b6101266004803603606081101561025c57600080fd5b506001600160a01b03813581169160208101359091169060400135610a5c565b6101266004803603602081101561029257600080fd5b50356001600160a01b0316610c97565b6102f2600480360360e08110156102b857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610cd2565b604080516001600160a01b039092168252519081900360200190f35b6101266004803603604081101561032457600080fd5b506001600160a01b0381358116916020013516610f6b565b6101266004803603602081101561035257600080fd5b50356001600160a01b0316610fc3565b6101266004803603602081101561037857600080fd5b50356001600160a01b0316610ffe565b6101266004803603604081101561039e57600080fd5b506001600160a01b038135169060200135611039565b610126600480360360208110156103ca57600080fd5b50356001600160a01b031661107f565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042057600080fd5b505af1158015610434573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042057600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b15801561053057600080fd5b505af1158015610544573d6000803e3d6000fd5b505050506040513d602081101561055a57600080fd5b50516040805160608101909152602c8082526110bb60208301399061060057604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105c55781810151838201526020016105ad565b50505050905090810190601f1680156105f25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561065457600080fd5b505afa158015610668573d6000803e3d6000fd5b505050506040513d602081101561067e57600080fd5b5051101561070a5760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b1580156106dd57600080fd5b505af11580156106f1573d6000803e3d6000fd5b505050506040513d602081101561070757600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561075057600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d602081101561083d57600080fd5b50516040805160608101909152602c8082526110bb6020830139906108a657604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156105c55781810151838201526020016105ad565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d602081101561092457600080fd5b505110156109b05760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505050506040513d60208110156109ad57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b5050505050505050565b806001600160a01b03166379bf47966040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610ab457600080fd5b505af1158015610ac8573d6000803e3d6000fd5b505050506040513d6020811015610ade57600080fd5b50516040805160608101909152602c8082526110bb602083013990610b4757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156105c55781810151838201526020016105ad565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610b9b57600080fd5b505afa158015610baf573d6000803e3d6000fd5b505050506040513d6020811015610bc557600080fd5b50511015610c515760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b505050506040513d6020811015610c4e57600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561075057600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610d2d57600080fd5b505af1158015610d41573d6000803e3d6000fd5b505050506040513d6020811015610d5757600080fd5b50516040805160608101909152602c8082526110bb602083013990610dc057604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156105c55781810151838201526020016105ad565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610e1457600080fd5b505afa158015610e28573d6000803e3d6000fd5b505050506040513d6020811015610e3e57600080fd5b50511015610eca5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610e9d57600080fd5b505af1158015610eb1573d6000803e3d6000fd5b505050506040513d6020811015610ec757600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b158015610f3357600080fd5b505af1158015610f47573d6000803e3d6000fd5b505050506040513d6020811015610f5d57600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561042057600080fd5b806001600160a01b031663ddac6d646040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fd5b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042057600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104bd57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a723058205f906c985bdc318a2c9bb7eea44abf2b523d0052dbef2d94e0859dede28e8be70029",
  "sourceMap": "174:4462:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:4462:7;;;;;;;",
  "deployedSourceMap": "174:4462:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:4462:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4503:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4503:130:7;;;;;;;;:::i;:::-;;1961:116;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1961:116:7;;;;;;;;:::i;3476:85::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3476:85:7;-1:-1:-1;;;;;3476:85:7;;:::i;2816:435::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2816:435:7;;;;;;;;;;;;;;;;;:::i;1690:209::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1690:209:7;;;;;;;;;;;;;:::i;2285:474::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2285:474:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;3831:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3831:101:7;-1:-1:-1;;;;;3831:101:7;;:::i;1188:439::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1188:439:7;;;;;;;;;;;;;;;;;:::i;4344:89::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4344:89:7;-1:-1:-1;;;;;4344:89:7;;:::i;380:749::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;380:749:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;380:749:7;;;;;;;;;;;;;;3629:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3629:135:7;;;;;;;;;;:::i;4005:113::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4005:113:7;-1:-1:-1;;;;;4005:113:7;;:::i;4184:99::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4184:99:7;-1:-1:-1;;;;;4184:99:7;;:::i;3311:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3311:106:7;;;;;;;;:::i;2139:91::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2139:91:7;-1:-1:-1;;;;;2139:91:7;;:::i;4503:130::-;4593:4;-1:-1:-1;;;;;4593:22:7;;4616:9;4593:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4593:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4593:33:7;;;;4503:130;;:::o;1961:116::-;2044:4;-1:-1:-1;;;;;2044:15:7;;2060:9;2044:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3476:85:7;3540:4;-1:-1:-1;;;;;3540:12:7;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3540:14:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3540:14:7;;;;3476:85;:::o;2816:435::-;2971:57;;;-1:-1:-1;;;;;2971:57:7;;2994:10;2971:57;;;;3014:4;2971:57;;;;;;;;;;;;-1:-1:-1;;;;;2971:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;2971:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;2971:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2971:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2971:57:7;3042:24;;;;;;;;;;;;;;2971:57;3042:24;;;2950:126;;;;;-1:-1:-1;;;;;2950:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2950:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3090:49:7;;;-1:-1:-1;;;;;3090:49:7;;3118:4;3090:49;;;;-1:-1:-1;;;;;3090:49:7;;;;;;;;;3142:6;;3090:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3090:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3090:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3090:49:7;:58;3086:131;;;3164:42;;;-1:-1:-1;;;;;3164:42:7;;-1:-1:-1;;;;;3164:42:7;;;;;;;-1:-1:-1;;3164:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3164:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3164:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3164:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3086:131:7;3226:4;-1:-1:-1;;;;;3226:10:7;;3237:6;3226:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3226:18:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3226:18:7;;;;2816:435;;;:::o;1690:209::-;1843:4;-1:-1:-1;;;;;1843:16:7;;1860:19;1881:10;1843:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2285:474:7;2466:57;;;-1:-1:-1;;;;;2466:57:7;;2489:10;2466:57;;;;2509:4;2466:57;;;;;;;;;;;;-1:-1:-1;;;;;2466:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;2466:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;2466:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2466:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2466:57:7;2537:24;;;;;;;;;;;;;;2466:57;2537:24;;;2445:126;;;;;-1:-1:-1;;;;;2445:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2445:126:7;-1:-1:-1;2585:49:7;;;-1:-1:-1;;;;;2585:49:7;;2613:4;2585:49;;;;-1:-1:-1;;;;;2585:49:7;;;;;;;;;2637:6;;2585:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;2585:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2585:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2585:49:7;:58;2581:131;;;2659:42;;;-1:-1:-1;;;;;2659:42:7;;-1:-1:-1;;;;;2659:42:7;;;;;;;-1:-1:-1;;2659:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2659:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2659:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2659:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2581:131:7;2721:31;;;-1:-1:-1;;;;;2721:31:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2721:8:7;;;;;:31;;;;;-1:-1:-1;;2721:31:7;;;;;;;-1:-1:-1;2721:8:7;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2721:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2721:31:7;;;;2285:474;;;;:::o;3831:101::-;3903:4;-1:-1:-1;;;;;3903:20:7;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1188:439:7;1345:57;;;-1:-1:-1;;;;;1345:57:7;;1368:10;1345:57;;;;1388:4;1345:57;;;;;;;;;;;;-1:-1:-1;;;;;1345:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;1345:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;1345:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1345:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1345:57:7;1416:24;;;;;;;;;;;;;;1345:57;1416:24;;;1324:126;;;;;-1:-1:-1;;;;;1324:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1324:126:7;-1:-1:-1;1464:49:7;;;-1:-1:-1;;;;;1464:49:7;;1492:4;1464:49;;;;-1:-1:-1;;;;;1464:49:7;;;;;;;;;1516:6;;1464:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1464:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1464:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1464:49:7;:58;1460:131;;;1538:42;;;-1:-1:-1;;;;;1538:42:7;;-1:-1:-1;;;;;1538:42:7;;;;;;;-1:-1:-1;;1538:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;1538:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;1538:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1538:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1460:131:7;1600:4;-1:-1:-1;;;;;1600:12:7;;1613:6;1600:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4344:89:7;4410:4;-1:-1:-1;;;;;4410:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;380:749:7;706:57;;;-1:-1:-1;;;;;706:57:7;;729:10;706:57;;;;749:4;706:57;;;;;;;;;;;;644:25;;-1:-1:-1;;;;;706:22:7;;;;;:57;;;;;;;;;;;;;;;644:25;706:22;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;706:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;706:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;706:57:7;777:24;;;;;;;;;;;;;;706:57;777:24;;;685:126;;;;;-1:-1:-1;;;;;685:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;685:126:7;-1:-1:-1;825:50:7;;;-1:-1:-1;;;;;825:50:7;;853:4;825:50;;;;-1:-1:-1;;;;;825:50:7;;;;;;;;;878:6;;825:19;;;;;:50;;;;;;;;;;;;;;:19;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;825:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;825:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;825:50:7;:59;821:133;;;900:43;;;-1:-1:-1;;;;;900:43:7;;-1:-1:-1;;;;;900:43:7;;;;;;;-1:-1:-1;;900:43:7;;;;;;:17;;;;;;:43;;;;;;;;;;;;;;;-1:-1:-1;900:17:7;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;900:43:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;900:43:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;821:133:7;969:153;;;-1:-1:-1;;;;;969:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;969:20:7;;;;;:153;;;;;;;;;;;;;;-1:-1:-1;969:20:7;:153;;;5:2:-1;;;;30:1;27;20:12;5:2;969:153:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;969:153:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;969:153:7;;380:749;-1:-1:-1;;;;;;;;380:749:7:o;3629:135::-;3723:4;-1:-1:-1;;;;;3723:21:7;;3745:11;3723:34;;;;;;;;;;;;;-1:-1:-1;;;;;3723:34:7;-1:-1:-1;;;;;3723:34:7;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4005:113:7;4083:4;-1:-1:-1;;;;;4083:26:7;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4184:99:7;4255:4;-1:-1:-1;;;;;4255:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3311:106:7;3389:4;-1:-1:-1;;;;;3389:13:7;;3403:6;3389:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2139:91:7;2206:4;-1:-1:-1;;;;;2206:15:7;;:17;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./ContractForDifference.sol\";\nimport \"./ContractForDifferenceFactory.sol\";\n\n\ncontract ContractForDifferenceProxy {\n\n    string constant REASON_PROXY_NEEDS_FUNDS = \"Proxy needs to obtain amount from the sender\";\n\n    /**\n     * ContractForDifferenceFactory.createContract\n     */\n    function createContract(\n        ContractForDifferenceFactory _cfdf,\n        ERC20 _daiToken,\n        bytes32 _marketId,\n        uint _strikePrice,\n        uint _notionalAmountDai,\n        bool _isBuyer,\n        uint _value\n    )\n        external\n        returns (ContractForDifference cfd)\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfdf)) < _value) {\n            _daiToken.approve(address(_cfdf), uint(-1));\n        }\n        cfd = _cfdf.createContract(\n            _marketId,\n            _strikePrice,\n            _notionalAmountDai,\n            _isBuyer,\n            _value\n        );\n    }\n\n    /**\n     * ContractForDifference.deposit\n     */\n    function deposit(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.deposit(_value);\n    }\n\n    /**\n     * ContractForDifference.sellPrepare\n     */\n    function sellPrepare(\n        ContractForDifference _cfd,\n        uint _desiredStrikePrice,\n        uint _timeLimit\n    )\n        external\n    {\n        _cfd.sellPrepare(_desiredStrikePrice, _timeLimit);\n    }\n\n    /**\n     * ContractForDifference.sellUpdate\n     */\n    function sellUpdate(ContractForDifference _cfd, uint _newPrice) external {\n        _cfd.sellUpdate(_newPrice);\n    }\n\n    /**\n     * ContractForDifference.sellCancel\n     */\n    function sellCancel(ContractForDifference _cfd) external {\n        _cfd.sellCancel();\n    }\n\n    /**\n     * ContractForDifference.buy\n     */\n    function buy(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        bool _buyBuyerSide,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.buy(_buyBuyerSide, _value);\n    }\n\n    /**\n     * ContractForDifference.topup\n     */\n    function topup(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.topup(_value);\n    }\n\n    /**\n     * ContractForDifference.withdraw\n     */\n    function withdraw(ContractForDifference _cfd, uint _value) external {\n        _cfd.withdraw(_value);\n    }\n\n    /**\n     * ContractForDifference.upgrade\n     */\n    function upgrade(ContractForDifference _cfd) external {\n        _cfd.upgrade();\n    }\n\n    /**\n     * ContractForDifference.transferPosition\n     */\n    function transferPosition(ContractForDifference _cfd, address _newAddress) external {\n        _cfd.transferPosition(_newAddress);\n    }\n\n    /**\n     * ContractForDifference.liquidateMutual\n     */\n    function liquidateMutual(ContractForDifference _cfd) external {\n        _cfd.liquidateMutual();\n    }\n\n    /**\n     * ContractForDifference.liquidateMutualCancel\n     */\n    function liquidateMutualCancel(ContractForDifference _cfd) external {\n        _cfd.liquidateMutualCancel();\n    }\n\n    /**\n     * ContractForDifference.forceTerminate\n     */\n    function forceTerminate(ContractForDifference _cfd) external {\n        _cfd.forceTerminate();\n    }\n\n    /**\n     * ContractForDifference.cancelNew\n     */\n    function cancelNew(ContractForDifference _cfd) external {\n        _cfd.cancelNew();\n    }\n\n\n    /**\n     * ContractForDifference.changeStrikePrice\n     */\n    function changeStrikePrice(ContractForDifference _cfd, uint _newPrice) external {\n        _cfd.changeStrikePrice(_newPrice);\n    }\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-07-03T21:06:50.889Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "buy(address,address,bool,uint256)": {
        "notice": "ContractForDifference.buy"
      },
      "cancelNew(address)": {
        "notice": "ContractForDifference.cancelNew"
      },
      "changeStrikePrice(address,uint256)": {
        "notice": "ContractForDifference.changeStrikePrice"
      },
      "createContract(address,address,bytes32,uint256,uint256,bool,uint256)": {
        "notice": "ContractForDifferenceFactory.createContract"
      },
      "deposit(address,address,uint256)": {
        "notice": "ContractForDifference.deposit"
      },
      "forceTerminate(address)": {
        "notice": "ContractForDifference.forceTerminate"
      },
      "liquidateMutual(address)": {
        "notice": "ContractForDifference.liquidateMutual"
      },
      "liquidateMutualCancel(address)": {
        "notice": "ContractForDifference.liquidateMutualCancel"
      },
      "sellCancel(address)": {
        "notice": "ContractForDifference.sellCancel"
      },
      "sellPrepare(address,uint256,uint256)": {
        "notice": "ContractForDifference.sellPrepare"
      },
      "sellUpdate(address,uint256)": {
        "notice": "ContractForDifference.sellUpdate"
      },
      "topup(address,address,uint256)": {
        "notice": "ContractForDifference.topup"
      },
      "transferPosition(address,address)": {
        "notice": "ContractForDifference.transferPosition"
      },
      "upgrade(address)": {
        "notice": "ContractForDifference.upgrade"
      },
      "withdraw(address,uint256)": {
        "notice": "ContractForDifference.withdraw"
      }
    }
  }
}