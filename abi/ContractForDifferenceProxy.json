{
  "contractName": "ContractForDifferenceProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_desiredStrikePrice",
          "type": "uint256"
        },
        {
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "sellPrepare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "sellUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "sellCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_buyBuyerSide",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "topup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "transferPosition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "forceTerminate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "cancelNew",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "changeStrikePrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeStrikePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"sellUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"topup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_desiredStrikePrice\",\"type\":\"uint256\"},{\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"sellPrepare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_buyBuyerSide\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"cancelNew\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdf\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createContract\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"transferPosition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"forceTerminate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"sellCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"buy(address,address,bool,uint256)\":{\"notice\":\"ContractForDifference.buy\\r\"},\"cancelNew(address)\":{\"notice\":\"ContractForDifference.cancelNew\\r\"},\"changeStrikePrice(address,uint256)\":{\"notice\":\"ContractForDifference.changeStrikePrice\\r\"},\"createContract(address,address,bytes32,uint256,uint256,bool,uint256)\":{\"notice\":\"ContractForDifferenceFactory.createContract\\r\"},\"deposit(address,address,uint256)\":{\"notice\":\"ContractForDifference.deposit\\r\"},\"forceTerminate(address)\":{\"notice\":\"ContractForDifference.forceTerminate\\r\"},\"sellCancel(address)\":{\"notice\":\"ContractForDifference.sellCancel\\r\"},\"sellPrepare(address,uint256,uint256)\":{\"notice\":\"ContractForDifference.sellPrepare\\r\"},\"sellUpdate(address,uint256)\":{\"notice\":\"ContractForDifference.sellUpdate\\r\"},\"topup(address,address,uint256)\":{\"notice\":\"ContractForDifference.topup\\r\"},\"transferPosition(address,address)\":{\"notice\":\"ContractForDifference.transferPosition\\r\"},\"upgrade(address)\":{\"notice\":\"ContractForDifference.upgrade\\r\"},\"withdraw(address,uint256)\":{\"notice\":\"ContractForDifference.withdraw\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":\"ContractForDifferenceProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0x3fcf0d97ad97399402274b04b62f704f714bd84e0cf8d173337cdc983f1e8608\",\"urls\":[\"bzzr://30f2233a4e3d87dc3a395f921d8aed6139f911bbfb1677fa696a39639bcd005b\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/ForwardFactory.sol\":{\"keccak256\":\"0xb0c15f958b92ff2327342353a45d44fa7d67a9e5aeacfcf7cef27aa08aad8161\",\"urls\":[\"bzzr://443d355e483c722b1a4ea53f94359066d3f7900abc27e872fbdc76c69fc776f2\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0xdd2e58003fe5316c50270a769a76b396fe6ed20aa388a607e725c74eb1d6c834\",\"urls\":[\"bzzr://2dde9105930aaadc93693bacba7f6c07fda48cf17bda63e4c0d97d8c4d3018c6\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifference.sol\":{\"keccak256\":\"0x63f22328e932f62dd7d18a2148b14d5cf4ef4a1c4e87730990181cd5bd611595\",\"urls\":[\"bzzr://225589f86bbcc96c81785112d71e7750343fc7140929616f4896c9952f89ffae\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol\":{\"keccak256\":\"0x7fc93dcccbd5476f38c36fc13cdc2e9b57e1d57d5eef9e9d720f0c9ead6fd430\",\"urls\":[\"bzzr://e44ff01b84aad1b17535932c7669f663b879eb3fd8ba053db668e3185c831487\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceLibrary.sol\":{\"keccak256\":\"0xd21632a219bd5c99c5a02621f9f9053b122b8fa73a7da35bec9eb1db44b4dbcd\",\"urls\":[\"bzzr://a3a125dd74eed530fdbcf87a06902ab039c4e333d2231ce61616234d8d718a17\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":{\"keccak256\":\"0x507df5cf9a76b9bf5cac2edbbf930b7e6b379d491d7b68ac4694dcd27e19666d\",\"urls\":[\"bzzr://3403363b4ef846f1d319131732b2f30feb90425affccc195ce3d047bd58396e4\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceRegistry.sol\":{\"keccak256\":\"0xc2242bd19e73177d32e95c3cbad2e99c48825722eebcbe12c3c60dd033674773\",\"urls\":[\"bzzr://041ea968045af40b538d2e91a72c636269bd82a610cc83c761b1c39967b52345\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/auth.sol\":{\"keccak256\":\"0xd79120d413ebb735b8f007b490f48e017b155bb3c958cc63ffda7b62d0dc7430\",\"urls\":[\"bzzr://0edb6e7092e44a153ddfc0625a0bb7e43a87565bddb5dba1d1200a239d1aeb35\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/note.sol\":{\"keccak256\":\"0x01cdc75fcd89273bebf0990ba2308ea73c44a63ef0b474cb7c649dff38a94b68\",\"urls\":[\"bzzr://fa6444a1ae294441ab8de30833036b810a7fbab8661f376fa58ed4e2844734a1\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0x163b6d661fe625052411fb4e6d4e676066215ec363f747ff4d10bc6675283f01\",\"urls\":[\"bzzr://08acac2533ffb50581b8776fe7ee4e8d34c58707ae8bfa7fb5ab4b69a21ca99c\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0xf01dc763fb887a782d5423789b9ff56889cea67765352d06733bbf83a0da369f\",\"urls\":[\"bzzr://c58ef6b2675aad3950367786073213c0f124705ef567bbf3c058db3f384a1071\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsExternal.sol\":{\"keccak256\":\"0x153fd7aee60aceadae0f9184f5bd9c5da754717271422cb9fcd865e4ee0259e1\",\"urls\":[\"bzzr://5aae071063b61ff9c9b419415a1e62540225d9929f2284d6648044bb7d8d5724\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsInternal.sol\":{\"keccak256\":\"0x89902441c5dd11a546d38c0e8ccbf4e163dc10a609cd3c0ab4b021e9b2a90c0d\",\"urls\":[\"bzzr://5679d5873d793e9103648639e1fb62a7b6bba7f187ac0f7762ec178294353f00\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061102a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638340f5491161008c578063d9aa0aab11610066578063d9aa0aab146102c2578063df2b1303146102f0578063f3fef3a314610316578063fdb1087714610342576100cf565b80638340f549146101fa578063ae113bf414610230578063c128d52f14610256576100cf565b8063011cae19146100d457806303257f74146101025780630900f0101461012e5780631e2a9d4c146101545780632cbaf35a1461018a57806349f386a4146101bc575b600080fd5b610100600480360360408110156100ea57600080fd5b506001600160a01b038135169060200135610368565b005b6101006004803603604081101561011857600080fd5b506001600160a01b0381351690602001356103ca565b6101006004803603602081101561014457600080fd5b50356001600160a01b0316610410565b6101006004803603606081101561016a57600080fd5b506001600160a01b03813581169160208101359091169060400135610466565b610100600480360360608110156101a057600080fd5b506001600160a01b0381351690602081013590604001356106fb565b610100600480360360808110156101d257600080fd5b506001600160a01b038135811691602081013590911690604081013515159060600135610749565b6101006004803603606081101561021057600080fd5b506001600160a01b038135811691602081013590911690604001356109af565b6101006004803603602081101561024657600080fd5b50356001600160a01b0316610bea565b6102a6600480360360e081101561026c57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610c25565b604080516001600160a01b039092168252519081900360200190f35b610100600480360360408110156102d857600080fd5b506001600160a01b0381358116916020013516610ebe565b6101006004803603602081101561030657600080fd5b50356001600160a01b0316610f16565b6101006004803603604081101561032c57600080fd5b506001600160a01b038135169060200135610f51565b6101006004803603602081101561035857600080fd5b50356001600160a01b0316610f97565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103ae57600080fd5b505af11580156103c2573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103ae57600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d60208110156104e857600080fd5b50516040805160608101909152602c808252610fd360208301399061058e57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561055357818101518382015260200161053b565b50505050905090810190601f1680156105805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b1580156105e257600080fd5b505afa1580156105f6573d6000803e3d6000fd5b505050506040513d602081101561060c57600080fd5b505110156106985760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b505050506040513d602081101561069557600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156106de57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050506040513d60208110156107cb57600080fd5b50516040805160608101909152602c808252610fd360208301399061083457604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561055357818101518382015260200161053b565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b15801561088857600080fd5b505afa15801561089c573d6000803e3d6000fd5b505050506040513d60208110156108b257600080fd5b5051101561093e5760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506040513d602081101561093b57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b5050505050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b50516040805160608101909152602c808252610fd3602083013990610a9a57604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561055357818101518382015260200161053b565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610aee57600080fd5b505afa158015610b02573d6000803e3d6000fd5b505050506040513d6020811015610b1857600080fd5b50511015610ba45760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610b7757600080fd5b505af1158015610b8b573d6000803e3d6000fd5b505050506040513d6020811015610ba157600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156106de57600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610c8057600080fd5b505af1158015610c94573d6000803e3d6000fd5b505050506040513d6020811015610caa57600080fd5b50516040805160608101909152602c808252610fd3602083013990610d1357604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561055357818101518382015260200161053b565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610d6757600080fd5b505afa158015610d7b573d6000803e3d6000fd5b505050506040513d6020811015610d9157600080fd5b50511015610e1d5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610df057600080fd5b505af1158015610e04573d6000803e3d6000fd5b505050506040513d6020811015610e1a57600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b158015610e8657600080fd5b505af1158015610e9a573d6000803e3d6000fd5b505050506040513d6020811015610eb057600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156103ae57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fd5b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103ae57600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a723058207a84acc1401a945e0c99c51be4b551f81f558031c3c55e9ae9f45175ccbd32850029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638340f5491161008c578063d9aa0aab11610066578063d9aa0aab146102c2578063df2b1303146102f0578063f3fef3a314610316578063fdb1087714610342576100cf565b80638340f549146101fa578063ae113bf414610230578063c128d52f14610256576100cf565b8063011cae19146100d457806303257f74146101025780630900f0101461012e5780631e2a9d4c146101545780632cbaf35a1461018a57806349f386a4146101bc575b600080fd5b610100600480360360408110156100ea57600080fd5b506001600160a01b038135169060200135610368565b005b6101006004803603604081101561011857600080fd5b506001600160a01b0381351690602001356103ca565b6101006004803603602081101561014457600080fd5b50356001600160a01b0316610410565b6101006004803603606081101561016a57600080fd5b506001600160a01b03813581169160208101359091169060400135610466565b610100600480360360608110156101a057600080fd5b506001600160a01b0381351690602081013590604001356106fb565b610100600480360360808110156101d257600080fd5b506001600160a01b038135811691602081013590911690604081013515159060600135610749565b6101006004803603606081101561021057600080fd5b506001600160a01b038135811691602081013590911690604001356109af565b6101006004803603602081101561024657600080fd5b50356001600160a01b0316610bea565b6102a6600480360360e081101561026c57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610c25565b604080516001600160a01b039092168252519081900360200190f35b610100600480360360408110156102d857600080fd5b506001600160a01b0381358116916020013516610ebe565b6101006004803603602081101561030657600080fd5b50356001600160a01b0316610f16565b6101006004803603604081101561032c57600080fd5b506001600160a01b038135169060200135610f51565b6101006004803603602081101561035857600080fd5b50356001600160a01b0316610f97565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103ae57600080fd5b505af11580156103c2573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103ae57600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d60208110156104e857600080fd5b50516040805160608101909152602c808252610fd360208301399061058e57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561055357818101518382015260200161053b565b50505050905090810190601f1680156105805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b1580156105e257600080fd5b505afa1580156105f6573d6000803e3d6000fd5b505050506040513d602081101561060c57600080fd5b505110156106985760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b15801561066b57600080fd5b505af115801561067f573d6000803e3d6000fd5b505050506040513d602081101561069557600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156106de57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050506040513d60208110156107cb57600080fd5b50516040805160608101909152602c808252610fd360208301399061083457604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561055357818101518382015260200161053b565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b15801561088857600080fd5b505afa15801561089c573d6000803e3d6000fd5b505050506040513d60208110156108b257600080fd5b5051101561093e5760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b505050506040513d602081101561093b57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b5050505050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b50516040805160608101909152602c808252610fd3602083013990610a9a57604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561055357818101518382015260200161053b565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610aee57600080fd5b505afa158015610b02573d6000803e3d6000fd5b505050506040513d6020811015610b1857600080fd5b50511015610ba45760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610b7757600080fd5b505af1158015610b8b573d6000803e3d6000fd5b505050506040513d6020811015610ba157600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156106de57600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610c8057600080fd5b505af1158015610c94573d6000803e3d6000fd5b505050506040513d6020811015610caa57600080fd5b50516040805160608101909152602c808252610fd3602083013990610d1357604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561055357818101518382015260200161053b565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610d6757600080fd5b505afa158015610d7b573d6000803e3d6000fd5b505050506040513d6020811015610d9157600080fd5b50511015610e1d5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610df057600080fd5b505af1158015610e04573d6000803e3d6000fd5b505050506040513d6020811015610e1a57600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b158015610e8657600080fd5b505af1158015610e9a573d6000803e3d6000fd5b505050506040513d6020811015610eb057600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b1580156103ae57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fd5b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103ae57600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561044b57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a723058207a84acc1401a945e0c99c51be4b551f81f558031c3c55e9ae9f45175ccbd32850029",
  "sourceMap": "181:4274:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:4274:7;;;;;;;",
  "deployedSourceMap": "181:4274:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:4274:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4318:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4318:132:7;;;;;;;;:::i;:::-;;2039:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2039:118:7;;;;;;;;:::i;3616:87::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3616:87:7;-1:-1:-1;;;;;3616:87:7;;:::i;2929:450::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2929:450:7;;;;;;;;;;;;;;;;;:::i;1755:217::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1755:217:7;;;;;;;;;;;;;:::i;2377:490::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2377:490:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;1233:454::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1233:454:7;;;;;;;;;;;;;;;;;:::i;4151:91::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4151:91:7;-1:-1:-1;;;;;4151:91:7;;:::i;394:775::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;394:775:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;394:775:7;;;;;;;;;;;;;;3776:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3776:137:7;;;;;;;;;;:::i;3984:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3984:101:7;-1:-1:-1;;;;;3984:101:7;;:::i;3444:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3444:108:7;;;;;;;;:::i;2224:93::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2224:93:7;-1:-1:-1;;;;;2224:93:7;;:::i;4318:132::-;4409:4;-1:-1:-1;;;;;4409:22:7;;4432:9;4409:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4409:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4409:33:7;;;;4318:132;;:::o;2039:118::-;2123:4;-1:-1:-1;;;;;2123:15:7;;2139:9;2123:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3616:87:7;3681:4;-1:-1:-1;;;;;3681:12:7;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3681:14:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3681:14:7;;;;3616:87;:::o;2929:450::-;3092:57;;;-1:-1:-1;;;;;3092:57:7;;3115:10;3092:57;;;;3135:4;3092:57;;;;;;;;;;;;-1:-1:-1;;;;;3092:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;3092:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;3092:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3092:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3092:57:7;3164:24;;;;;;;;;;;;;;3092:57;3164:24;;;3070:129;;;;;-1:-1:-1;;;;;3070:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3070:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3214:49:7;;;-1:-1:-1;;;;;3214:49:7;;3242:4;3214:49;;;;-1:-1:-1;;;;;3214:49:7;;;;;;;;;3266:6;;3214:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3214:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3214:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3214:49:7;:58;3210:133;;;3289:42;;;-1:-1:-1;;;;;3289:42:7;;-1:-1:-1;;;;;3289:42:7;;;;;;;-1:-1:-1;;3289:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3289:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3289:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3289:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3210:133:7;3353:4;-1:-1:-1;;;;;3353:10:7;;3364:6;3353:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3353:18:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3353:18:7;;;;2929:450;;;:::o;1755:217::-;1915:4;-1:-1:-1;;;;;1915:16:7;;1932:19;1953:10;1915:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2377:490:7;2567:57;;;-1:-1:-1;;;;;2567:57:7;;2590:10;2567:57;;;;2610:4;2567:57;;;;;;;;;;;;-1:-1:-1;;;;;2567:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;2567:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;2567:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2567:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2567:57:7;2639:24;;;;;;;;;;;;;;2567:57;2639:24;;;2545:129;;;;;-1:-1:-1;;;;;2545:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2545:129:7;-1:-1:-1;2689:49:7;;;-1:-1:-1;;;;;2689:49:7;;2717:4;2689:49;;;;-1:-1:-1;;;;;2689:49:7;;;;;;;;;2741:6;;2689:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;2689:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2689:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2689:49:7;:58;2685:133;;;2764:42;;;-1:-1:-1;;;;;2764:42:7;;-1:-1:-1;;;;;2764:42:7;;;;;;;-1:-1:-1;;2764:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2764:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2764:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2764:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2685:133:7;2828:31;;;-1:-1:-1;;;;;2828:31:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2828:8:7;;;;;:31;;;;;-1:-1:-1;;2828:31:7;;;;;;;-1:-1:-1;2828:8:7;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2828:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2828:31:7;;;;2377:490;;;;:::o;1233:454::-;1398:57;;;-1:-1:-1;;;;;1398:57:7;;1421:10;1398:57;;;;1441:4;1398:57;;;;;;;;;;;;-1:-1:-1;;;;;1398:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;1398:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;1398:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1398:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1398:57:7;1470:24;;;;;;;;;;;;;;1398:57;1470:24;;;1376:129;;;;;-1:-1:-1;;;;;1376:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1376:129:7;-1:-1:-1;1520:49:7;;;-1:-1:-1;;;;;1520:49:7;;1548:4;1520:49;;;;-1:-1:-1;;;;;1520:49:7;;;;;;;;;1572:6;;1520:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1520:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1520:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1520:49:7;:58;1516:133;;;1595:42;;;-1:-1:-1;;;;;1595:42:7;;-1:-1:-1;;;;;1595:42:7;;;;;;;-1:-1:-1;;1595:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;1595:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;1595:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1595:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1516:133:7;1659:4;-1:-1:-1;;;;;1659:12:7;;1672:6;1659:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4151:91:7;4218:4;-1:-1:-1;;;;;4218:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;394:775:7;733:57;;;-1:-1:-1;;;;;733:57:7;;756:10;733:57;;;;776:4;733:57;;;;;;;;;;;;668:25;;-1:-1:-1;;;;;733:22:7;;;;;:57;;;;;;;;;;;;;;;668:25;733:22;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;733:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;733:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;733:57:7;805:24;;;;;;;;;;;;;;733:57;805:24;;;711:129;;;;;-1:-1:-1;;;;;711:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;711:129:7;-1:-1:-1;855:50:7;;;-1:-1:-1;;;;;855:50:7;;883:4;855:50;;;;-1:-1:-1;;;;;855:50:7;;;;;;;;;908:6;;855:19;;;;;:50;;;;;;;;;;;;;;:19;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;855:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;855:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;855:50:7;:59;851:135;;;931:43;;;-1:-1:-1;;;;;931:43:7;;-1:-1:-1;;;;;931:43:7;;;;;;;-1:-1:-1;;931:43:7;;;;;;:17;;;;;;:43;;;;;;;;;;;;;;;-1:-1:-1;931:17:7;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;931:43:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;931:43:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;851:135:7;1002:159;;;-1:-1:-1;;;;;1002:159:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1002:20:7;;;;;:159;;;;;;;;;;;;;;-1:-1:-1;1002:20:7;:159;;;5:2:-1;;;;30:1;27;20:12;5:2;1002:159:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1002:159:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1002:159:7;;394:775;-1:-1:-1;;;;;;;;394:775:7:o;3776:137::-;3871:4;-1:-1:-1;;;;;3871:21:7;;3893:11;3871:34;;;;;;;;;;;;;-1:-1:-1;;;;;3871:34:7;-1:-1:-1;;;;;3871:34:7;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3984:101:7;4056:4;-1:-1:-1;;;;;4056:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;3444:108:7;3523:4;-1:-1:-1;;;;;3523:13:7;;3537:6;3523:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2224:93:7;2292:4;-1:-1:-1;;;;;2292:15:7;;:17;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./ContractForDifference.sol\";\r\nimport \"./ContractForDifferenceFactory.sol\";\r\n\r\n\r\ncontract ContractForDifferenceProxy {\r\n\r\n    string constant REASON_PROXY_NEEDS_FUNDS = \"Proxy needs to obtain amount from the sender\";\r\n\r\n    /**\r\n     * ContractForDifferenceFactory.createContract\r\n     */\r\n    function createContract(\r\n        ContractForDifferenceFactory _cfdf,\r\n        ERC20 _daiToken,\r\n        bytes32 _marketId,\r\n        uint _strikePrice,\r\n        uint _notionalAmountDai,\r\n        bool _isBuyer,\r\n        uint _value\r\n    )\r\n        external\r\n        returns (ContractForDifference cfd)\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfdf)) < _value) {\r\n            _daiToken.approve(address(_cfdf), uint(-1));\r\n        }\r\n        cfd = _cfdf.createContract(\r\n            _marketId,\r\n            _strikePrice,\r\n            _notionalAmountDai,\r\n            _isBuyer,\r\n            _value\r\n        );\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.deposit\r\n     */\r\n    function deposit(\r\n        ContractForDifference _cfd,\r\n        ERC20 _daiToken,\r\n        uint _value\r\n    )\r\n        external\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\r\n            _daiToken.approve(address(_cfd), uint(-1));\r\n        }\r\n        _cfd.deposit(_value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.sellPrepare\r\n     */\r\n    function sellPrepare(\r\n        ContractForDifference _cfd,\r\n        uint _desiredStrikePrice,\r\n        uint _timeLimit\r\n    )\r\n        external\r\n    {\r\n        _cfd.sellPrepare(_desiredStrikePrice, _timeLimit);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.sellUpdate\r\n     */\r\n    function sellUpdate(ContractForDifference _cfd, uint _newPrice) external {\r\n        _cfd.sellUpdate(_newPrice);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.sellCancel\r\n     */\r\n    function sellCancel(ContractForDifference _cfd) external {\r\n        _cfd.sellCancel();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.buy\r\n     */\r\n    function buy(\r\n        ContractForDifference _cfd,\r\n        ERC20 _daiToken,\r\n        bool _buyBuyerSide,\r\n        uint _value\r\n    )\r\n        external\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\r\n            _daiToken.approve(address(_cfd), uint(-1));\r\n        }\r\n        _cfd.buy(_buyBuyerSide, _value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.topup\r\n     */\r\n    function topup(\r\n        ContractForDifference _cfd,\r\n        ERC20 _daiToken,\r\n        uint _value\r\n    )\r\n        external\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\r\n            _daiToken.approve(address(_cfd), uint(-1));\r\n        }\r\n        _cfd.topup(_value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.withdraw\r\n     */\r\n    function withdraw(ContractForDifference _cfd, uint _value) external {\r\n        _cfd.withdraw(_value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.upgrade\r\n     */\r\n    function upgrade(ContractForDifference _cfd) external {\r\n        _cfd.upgrade();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.transferPosition\r\n     */\r\n    function transferPosition(ContractForDifference _cfd, address _newAddress) external {\r\n        _cfd.transferPosition(_newAddress);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.forceTerminate\r\n     */\r\n    function forceTerminate(ContractForDifference _cfd) external {\r\n        _cfd.forceTerminate();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.cancelNew\r\n     */\r\n    function cancelNew(ContractForDifference _cfd) external {\r\n        _cfd.cancelNew();\r\n    }\r\n\r\n\r\n    /**\r\n     * ContractForDifference.changeStrikePrice\r\n     */\r\n    function changeStrikePrice(ContractForDifference _cfd, uint _newPrice) external {\r\n        _cfd.changeStrikePrice(_newPrice);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-16T06:11:23.311Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "buy(address,address,bool,uint256)": {
        "notice": "ContractForDifference.buy\r"
      },
      "cancelNew(address)": {
        "notice": "ContractForDifference.cancelNew\r"
      },
      "changeStrikePrice(address,uint256)": {
        "notice": "ContractForDifference.changeStrikePrice\r"
      },
      "createContract(address,address,bytes32,uint256,uint256,bool,uint256)": {
        "notice": "ContractForDifferenceFactory.createContract\r"
      },
      "deposit(address,address,uint256)": {
        "notice": "ContractForDifference.deposit\r"
      },
      "forceTerminate(address)": {
        "notice": "ContractForDifference.forceTerminate\r"
      },
      "sellCancel(address)": {
        "notice": "ContractForDifference.sellCancel\r"
      },
      "sellPrepare(address,uint256,uint256)": {
        "notice": "ContractForDifference.sellPrepare\r"
      },
      "sellUpdate(address,uint256)": {
        "notice": "ContractForDifference.sellUpdate\r"
      },
      "topup(address,address,uint256)": {
        "notice": "ContractForDifference.topup\r"
      },
      "transferPosition(address,address)": {
        "notice": "ContractForDifference.transferPosition\r"
      },
      "upgrade(address)": {
        "notice": "ContractForDifference.upgrade\r"
      },
      "withdraw(address,uint256)": {
        "notice": "ContractForDifference.withdraw\r"
      }
    }
  }
}