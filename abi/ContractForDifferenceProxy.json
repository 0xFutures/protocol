{
  "contractName": "ContractForDifferenceProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        }
      ],
      "name": "createContractWithETH",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_desiredStrikePrice",
          "type": "uint256"
        },
        {
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "sellPrepare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "sellUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "sellCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_buyBuyerSide",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "topup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "transferPosition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "liquidateMutual",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "liquidateMutualCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "forceTerminate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "cancelNew",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "changeStrikePrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeStrikePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"sellUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"topup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_desiredStrikePrice\",\"type\":\"uint256\"},{\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"sellPrepare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_buyBuyerSide\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"liquidateMutual\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"cancelNew\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdf\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createContract\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"transferPosition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"liquidateMutualCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"forceTerminate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdf\",\"type\":\"address\"},{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"}],\"name\":\"createContractWithETH\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"sellCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"buy(address,address,bool,uint256)\":{\"notice\":\"ContractForDifference.buy\"},\"cancelNew(address)\":{\"notice\":\"ContractForDifference.cancelNew\"},\"changeStrikePrice(address,uint256)\":{\"notice\":\"ContractForDifference.changeStrikePrice\"},\"createContract(address,address,bytes32,uint256,uint256,bool,uint256)\":{\"notice\":\"ContractForDifferenceFactory.createContract\"},\"createContractWithETH(address,bytes32,uint256,uint256,bool)\":{\"notice\":\"ContractForDifferenceFactory.createContractWithETH\"},\"deposit(address,address,uint256)\":{\"notice\":\"ContractForDifference.deposit\"},\"forceTerminate(address)\":{\"notice\":\"ContractForDifference.forceTerminate\"},\"liquidateMutual(address)\":{\"notice\":\"ContractForDifference.liquidateMutual\"},\"liquidateMutualCancel(address)\":{\"notice\":\"ContractForDifference.liquidateMutualCancel\"},\"sellCancel(address)\":{\"notice\":\"ContractForDifference.sellCancel\"},\"sellPrepare(address,uint256,uint256)\":{\"notice\":\"ContractForDifference.sellPrepare\"},\"sellUpdate(address,uint256)\":{\"notice\":\"ContractForDifference.sellUpdate\"},\"topup(address,address,uint256)\":{\"notice\":\"ContractForDifference.topup\"},\"transferPosition(address,address)\":{\"notice\":\"ContractForDifference.transferPosition\"},\"upgrade(address)\":{\"notice\":\"ContractForDifference.upgrade\"},\"withdraw(address,uint256)\":{\"notice\":\"ContractForDifference.withdraw\"}}}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":\"ContractForDifferenceProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/ForwardFactory.sol\":{\"keccak256\":\"0x658664b425aa52f40007ac2f1be1a1da9ec2239c4a42c3864b5cac108f002e0c\",\"urls\":[\"bzzr://6514d98ab20cd063f94b0d29810df5d212dd80dd09471f24de909f4fb07c6f36\"]},\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x2703d1c87ddd66da66c110570d5e896848f21d3fea0a860ab3ac7cac007a1755\",\"urls\":[\"bzzr://df2ab637255c3194b717f3c9a857bc8d55ba4dddd4605621b48f75e9bb4fcd94\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifference.sol\":{\"keccak256\":\"0x557fa882f55167d499b04d728301c37523fee1ae2555ae40344c4b63ee0a134a\",\"urls\":[\"bzzr://39e07675937a3640d375c73f703b537f7f071913f1cd303502672d25cdf3c65e\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol\":{\"keccak256\":\"0x8fc6d2010a612362e6999696c08621fd76245edc7dc2affc0e449513038baf15\",\"urls\":[\"bzzr://481bcf05025c32c9f6b887d34ab85af5cc1f1b475f347df9bb9ca80e4f8e2496\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceLibrary.sol\":{\"keccak256\":\"0x7d8b4fae4675864c273b85f2b8a7ed8bc8f504b49f2955b0f69b694c30ec2771\",\"urls\":[\"bzzr://47e963e227389af89263baa271e1ec5c54c192883ec2697801807c3827110952\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":{\"keccak256\":\"0x3087b9c38e2ef3759b7257adac817f75b64c8667660e6165a3e176ffc1b7a85d\",\"urls\":[\"bzzr://978635eccf0f4ad108e7942f29a1b0561ceeda4dd4ffdc97a0212e8c6808a471\"]},\"/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceRegistry.sol\":{\"keccak256\":\"0xdb72ba28920116724194b8ed9320a1bdf09837236d972ed8b975bf2a27c3ac5f\",\"urls\":[\"bzzr://ae02629dd3df0bbbe65a6f0ca63281111db7ae546ee4cc8dcbd7a276d31cc203\"]},\"/home/julien/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0xe002251a6b856a3a65e81102bb10ad1ad2e62a270a07a021630afc6093096079\",\"urls\":[\"bzzr://fea23195db1c273eafecfb23d929ddaa3f499880c4d7b1b31ae10163300e23f0\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0x00c9d8e6f006d8e178c6a56d8a8864481a4109d19139eb03601a8d788f998120\",\"urls\":[\"bzzr://24924fad42842a7daba8fe711f82b43daca6b36228a2fa53d2a4c6251cdcd4fd\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":{\"keccak256\":\"0x4750060cd8551fe66c2778a477138fe32bd2882a6a0df95ebc87345cf5c67947\",\"urls\":[\"bzzr://80864cd9216f1a1f569ee047a204e6072da5c224e3d02c42a32640b1611c84c9\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberFacade.sol\":{\"keccak256\":\"0x61224fefecee1d501cbe250e851678fca5c7cf33d284a89102194380856a2c86\",\"urls\":[\"bzzr://8f48e7321136871f5d7bb183a1a1d798b9fd0b688b885684608d90578d66a4b4\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x0e3fe90852ca500af9457df99c1aec660ae2bdddb170c444881b1f6f796ce91c\",\"urls\":[\"bzzr://8c7ac792da4b76214844068529a0fcdb6bc821e866e0711786958e4ba7a69374\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112b0806100206000396000f3fe6080604052600436106100f35760003560e01c8063ae113bf41161008a578063df2b130311610059578063df2b1303146103fc578063f3de10da1461042f578063f3fef3a31461046f578063fdb10877146104a8576100f3565b8063ae113bf4146102e2578063c128d52f14610315578063d9aa0aab1461038e578063da055fb7146103c9576100f3565b80632cbaf35a116100c65780632cbaf35a146101e257806349f386a41461022157806382cdc16e1461026c5780638340f5491461029f576100f3565b8063011cae19146100f857806303257f74146101335780630900f0101461016c5780631e2a9d4c1461019f575b600080fd5b34801561010457600080fd5b506101316004803603604081101561011b57600080fd5b506001600160a01b0381351690602001356104db565b005b34801561013f57600080fd5b506101316004803603604081101561015657600080fd5b506001600160a01b03813516906020013561053d565b34801561017857600080fd5b506101316004803603602081101561018f57600080fd5b50356001600160a01b0316610583565b3480156101ab57600080fd5b50610131600480360360608110156101c257600080fd5b506001600160a01b038135811691602081013590911690604001356105d9565b3480156101ee57600080fd5b506101316004803603606081101561020557600080fd5b506001600160a01b03813516906020810135906040013561086e565b34801561022d57600080fd5b506101316004803603608081101561024457600080fd5b506001600160a01b0381358116916020810135909116906040810135151590606001356108bc565b34801561027857600080fd5b506101316004803603602081101561028f57600080fd5b50356001600160a01b0316610b22565b3480156102ab57600080fd5b50610131600480360360608110156102c257600080fd5b506001600160a01b03813581169160208101359091169060400135610b5d565b3480156102ee57600080fd5b506101316004803603602081101561030557600080fd5b50356001600160a01b0316610d98565b34801561032157600080fd5b50610372600480360360e081101561033857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610dd3565b604080516001600160a01b039092168252519081900360200190f35b34801561039a57600080fd5b50610131600480360360408110156103b157600080fd5b506001600160a01b038135811691602001351661106c565b3480156103d557600080fd5b50610131600480360360208110156103ec57600080fd5b50356001600160a01b03166110c4565b34801561040857600080fd5b506101316004803603602081101561041f57600080fd5b50356001600160a01b03166110ff565b610372600480360360a081101561044557600080fd5b506001600160a01b038135169060208101359060408101359060608101359060800135151561113a565b34801561047b57600080fd5b506101316004803603604081101561049257600080fd5b506001600160a01b0381351690602001356111d7565b3480156104b457600080fd5b50610131600480360360208110156104cb57600080fd5b50356001600160a01b031661121d565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d602081101561065b57600080fd5b50516040805160608101909152602c80825261125960208301399061070157604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106c65781810151838201526020016106ae565b50505050905090810190601f1680156106f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b5051101561080b5760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b505050506040513d602081101561080857600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561085157600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b15801561091457600080fd5b505af1158015610928573d6000803e3d6000fd5b505050506040513d602081101561093e57600080fd5b50516040805160608101909152602c8082526112596020830139906109a757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156109fb57600080fd5b505afa158015610a0f573d6000803e3d6000fd5b505050506040513d6020811015610a2557600080fd5b50511015610ab15760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b158015610a8457600080fd5b505af1158015610a98573d6000803e3d6000fd5b505050506040513d6020811015610aae57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b5050505050505050565b806001600160a01b03166379bf47966040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d6020811015610bdf57600080fd5b50516040805160608101909152602c808252611259602083013990610c4857604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610c9c57600080fd5b505afa158015610cb0573d6000803e3d6000fd5b505050506040513d6020811015610cc657600080fd5b50511015610d525760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b505050506040513d6020811015610d4f57600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b505050506040513d6020811015610e5857600080fd5b50516040805160608101909152602c808252611259602083013990610ec157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b50511015610fcb5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610f9e57600080fd5b505af1158015610fb2573d6000803e3d6000fd5b505050506040513d6020811015610fc857600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663ddac6d646040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e11b633dcf17e1028152600481018690526024810185905260448101849052821515606482015290516000916001600160a01b03881691637b9e2fc2913491608480830192602092919082900301818588803b1580156111a057600080fd5b505af11580156111b4573d6000803e3d6000fd5b50505050506040513d60208110156111cb57600080fd5b50519695505050505050565b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a72305820bb901acc40e3061fd3a0d217e92b1209eaff877f07d4819e4f01b2cbc9b7d6d70029",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063ae113bf41161008a578063df2b130311610059578063df2b1303146103fc578063f3de10da1461042f578063f3fef3a31461046f578063fdb10877146104a8576100f3565b8063ae113bf4146102e2578063c128d52f14610315578063d9aa0aab1461038e578063da055fb7146103c9576100f3565b80632cbaf35a116100c65780632cbaf35a146101e257806349f386a41461022157806382cdc16e1461026c5780638340f5491461029f576100f3565b8063011cae19146100f857806303257f74146101335780630900f0101461016c5780631e2a9d4c1461019f575b600080fd5b34801561010457600080fd5b506101316004803603604081101561011b57600080fd5b506001600160a01b0381351690602001356104db565b005b34801561013f57600080fd5b506101316004803603604081101561015657600080fd5b506001600160a01b03813516906020013561053d565b34801561017857600080fd5b506101316004803603602081101561018f57600080fd5b50356001600160a01b0316610583565b3480156101ab57600080fd5b50610131600480360360608110156101c257600080fd5b506001600160a01b038135811691602081013590911690604001356105d9565b3480156101ee57600080fd5b506101316004803603606081101561020557600080fd5b506001600160a01b03813516906020810135906040013561086e565b34801561022d57600080fd5b506101316004803603608081101561024457600080fd5b506001600160a01b0381358116916020810135909116906040810135151590606001356108bc565b34801561027857600080fd5b506101316004803603602081101561028f57600080fd5b50356001600160a01b0316610b22565b3480156102ab57600080fd5b50610131600480360360608110156102c257600080fd5b506001600160a01b03813581169160208101359091169060400135610b5d565b3480156102ee57600080fd5b506101316004803603602081101561030557600080fd5b50356001600160a01b0316610d98565b34801561032157600080fd5b50610372600480360360e081101561033857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610dd3565b604080516001600160a01b039092168252519081900360200190f35b34801561039a57600080fd5b50610131600480360360408110156103b157600080fd5b506001600160a01b038135811691602001351661106c565b3480156103d557600080fd5b50610131600480360360208110156103ec57600080fd5b50356001600160a01b03166110c4565b34801561040857600080fd5b506101316004803603602081101561041f57600080fd5b50356001600160a01b03166110ff565b610372600480360360a081101561044557600080fd5b506001600160a01b038135169060208101359060408101359060608101359060800135151561113a565b34801561047b57600080fd5b506101316004803603604081101561049257600080fd5b506001600160a01b0381351690602001356111d7565b3480156104b457600080fd5b50610131600480360360208110156104cb57600080fd5b50356001600160a01b031661121d565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d602081101561065b57600080fd5b50516040805160608101909152602c80825261125960208301399061070157604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106c65781810151838201526020016106ae565b50505050905090810190601f1680156106f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b5051101561080b5760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b505050506040513d602081101561080857600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561085157600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b15801561091457600080fd5b505af1158015610928573d6000803e3d6000fd5b505050506040513d602081101561093e57600080fd5b50516040805160608101909152602c8082526112596020830139906109a757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156109fb57600080fd5b505afa158015610a0f573d6000803e3d6000fd5b505050506040513d6020811015610a2557600080fd5b50511015610ab15760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b158015610a8457600080fd5b505af1158015610a98573d6000803e3d6000fd5b505050506040513d6020811015610aae57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b5050505050505050565b806001600160a01b03166379bf47966040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d6020811015610bdf57600080fd5b50516040805160608101909152602c808252611259602083013990610c4857604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610c9c57600080fd5b505afa158015610cb0573d6000803e3d6000fd5b505050506040513d6020811015610cc657600080fd5b50511015610d525760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b505050506040513d6020811015610d4f57600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b505050506040513d6020811015610e5857600080fd5b50516040805160608101909152602c808252611259602083013990610ec157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b50511015610fcb5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610f9e57600080fd5b505af1158015610fb2573d6000803e3d6000fd5b505050506040513d6020811015610fc857600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663ddac6d646040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e11b633dcf17e1028152600481018690526024810185905260448101849052821515606482015290516000916001600160a01b03881691637b9e2fc2913491608480830192602092919082900301818588803b1580156111a057600080fd5b505af11580156111b4573d6000803e3d6000fd5b50505050506040513d60208110156111cb57600080fd5b50519695505050505050565b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a72305820bb901acc40e3061fd3a0d217e92b1209eaff877f07d4819e4f01b2cbc9b7d6d70029",
  "sourceMap": "174:4994:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:4994:7;;;;;;;",
  "deployedSourceMap": "174:4994:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5035:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5035:130:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5035:130:7;;;;;;;;:::i;:::-;;2493:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2493:116:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2493:116:7;;;;;;;;:::i;4008:85::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4008:85:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4008:85:7;-1:-1:-1;;;;;4008:85:7;;:::i;3348:435::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3348:435:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3348:435:7;;;;;;;;;;;;;;;;;:::i;2222:209::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2222:209:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2222:209:7;;;;;;;;;;;;;:::i;2817:474::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2817:474:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2817:474:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;4363:101::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4363:101:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4363:101:7;-1:-1:-1;;;;;4363:101:7;;:::i;1720:439::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1720:439:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1720:439:7;;;;;;;;;;;;;;;;;:::i;4876:89::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4876:89:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4876:89:7;-1:-1:-1;;;;;4876:89:7;;:::i;380:749::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;380:749:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;380:749:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;380:749:7;;;;;;;;;;;;;;4161:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4161:135:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4161:135:7;;;;;;;;;;:::i;4537:113::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4537:113:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4537:113:7;-1:-1:-1;;;;;4537:113:7;;:::i;4716:99::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4716:99:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4716:99:7;-1:-1:-1;;;;;4716:99:7;;:::i;1209:452::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;1209:452:7;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3843:106::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3843:106:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3843:106:7;;;;;;;;:::i;2671:91::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2671:91:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2671:91:7;-1:-1:-1;;;;;2671:91:7;;:::i;5035:130::-;5125:4;-1:-1:-1;;;;;5125:22:7;;5148:9;5125:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5125:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5125:33:7;;;;5035:130;;:::o;2493:116::-;2576:4;-1:-1:-1;;;;;2576:15:7;;2592:9;2576:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4008:85:7;4072:4;-1:-1:-1;;;;;4072:12:7;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4072:14:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4072:14:7;;;;4008:85;:::o;3348:435::-;3503:57;;;-1:-1:-1;;;;;3503:57:7;;3526:10;3503:57;;;;3546:4;3503:57;;;;;;;;;;;;-1:-1:-1;;;;;3503:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;3503:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;3503:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3503:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3503:57:7;3574:24;;;;;;;;;;;;;;3503:57;3574:24;;;3482:126;;;;;-1:-1:-1;;;;;3482:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3482:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3622:49:7;;;-1:-1:-1;;;;;3622:49:7;;3650:4;3622:49;;;;-1:-1:-1;;;;;3622:49:7;;;;;;;;;3674:6;;3622:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3622:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3622:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3622:49:7;:58;3618:131;;;3696:42;;;-1:-1:-1;;;;;3696:42:7;;-1:-1:-1;;;;;3696:42:7;;;;;;;-1:-1:-1;;3696:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3696:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3696:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3696:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3618:131:7;3758:4;-1:-1:-1;;;;;3758:10:7;;3769:6;3758:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3758:18:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3758:18:7;;;;3348:435;;;:::o;2222:209::-;2375:4;-1:-1:-1;;;;;2375:16:7;;2392:19;2413:10;2375:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2817:474:7;2998:57;;;-1:-1:-1;;;;;2998:57:7;;3021:10;2998:57;;;;3041:4;2998:57;;;;;;;;;;;;-1:-1:-1;;;;;2998:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;2998:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;2998:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2998:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2998:57:7;3069:24;;;;;;;;;;;;;;2998:57;3069:24;;;2977:126;;;;;-1:-1:-1;;;;;2977:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2977:126:7;-1:-1:-1;3117:49:7;;;-1:-1:-1;;;;;3117:49:7;;3145:4;3117:49;;;;-1:-1:-1;;;;;3117:49:7;;;;;;;;;3169:6;;3117:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3117:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3117:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3117:49:7;:58;3113:131;;;3191:42;;;-1:-1:-1;;;;;3191:42:7;;-1:-1:-1;;;;;3191:42:7;;;;;;;-1:-1:-1;;3191:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3191:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3191:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3191:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3113:131:7;3253:31;;;-1:-1:-1;;;;;3253:31:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3253:8:7;;;;;:31;;;;;-1:-1:-1;;3253:31:7;;;;;;;-1:-1:-1;3253:8:7;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3253:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3253:31:7;;;;2817:474;;;;:::o;4363:101::-;4435:4;-1:-1:-1;;;;;4435:20:7;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1720:439:7;1877:57;;;-1:-1:-1;;;;;1877:57:7;;1900:10;1877:57;;;;1920:4;1877:57;;;;;;;;;;;;-1:-1:-1;;;;;1877:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;1877:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;1877:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1877:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1877:57:7;1948:24;;;;;;;;;;;;;;1877:57;1948:24;;;1856:126;;;;;-1:-1:-1;;;;;1856:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1856:126:7;-1:-1:-1;1996:49:7;;;-1:-1:-1;;;;;1996:49:7;;2024:4;1996:49;;;;-1:-1:-1;;;;;1996:49:7;;;;;;;;;2048:6;;1996:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;1996:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1996:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1996:49:7;:58;1992:131;;;2070:42;;;-1:-1:-1;;;;;2070:42:7;;-1:-1:-1;;;;;2070:42:7;;;;;;;-1:-1:-1;;2070:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2070:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2070:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2070:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;1992:131:7;2132:4;-1:-1:-1;;;;;2132:12:7;;2145:6;2132:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4876:89:7;4942:4;-1:-1:-1;;;;;4942:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;380:749:7;706:57;;;-1:-1:-1;;;;;706:57:7;;729:10;706:57;;;;749:4;706:57;;;;;;;;;;;;644:25;;-1:-1:-1;;;;;706:22:7;;;;;:57;;;;;;;;;;;;;;;644:25;706:22;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;706:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;706:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;706:57:7;777:24;;;;;;;;;;;;;;706:57;777:24;;;685:126;;;;;-1:-1:-1;;;;;685:126:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;685:126:7;-1:-1:-1;825:50:7;;;-1:-1:-1;;;;;825:50:7;;853:4;825:50;;;;-1:-1:-1;;;;;825:50:7;;;;;;;;;878:6;;825:19;;;;;:50;;;;;;;;;;;;;;:19;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;825:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;825:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;825:50:7;:59;821:133;;;900:43;;;-1:-1:-1;;;;;900:43:7;;-1:-1:-1;;;;;900:43:7;;;;;;;-1:-1:-1;;900:43:7;;;;;;:17;;;;;;:43;;;;;;;;;;;;;;;-1:-1:-1;900:17:7;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;900:43:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;900:43:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;821:133:7;969:153;;;-1:-1:-1;;;;;969:153:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;969:20:7;;;;;:153;;;;;;;;;;;;;;-1:-1:-1;969:20:7;:153;;;5:2:-1;;;;30:1;27;20:12;5:2;969:153:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;969:153:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;969:153:7;;380:749;-1:-1:-1;;;;;;;;380:749:7:o;4161:135::-;4255:4;-1:-1:-1;;;;;4255:21:7;;4277:11;4255:34;;;;;;;;;;;;;-1:-1:-1;;;;;4255:34:7;-1:-1:-1;;;;;4255:34:7;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4537:113:7;4615:4;-1:-1:-1;;;;;4615:26:7;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4716:99:7;4787:4;-1:-1:-1;;;;;4787:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1209:452:7;1497:157;;;-1:-1:-1;;;;;1497:157:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:25;;-1:-1:-1;;;;;1497:27:7;;;;;1531:9;;1497:157;;;;;;;;;;;;;;1531:9;1497:27;:157;;;5:2:-1;;;;30:1;27;20:12;5:2;1497:157:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1497:157:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1497:157:7;;1209:452;-1:-1:-1;;;;;;1209:452:7:o;3843:106::-;3921:4;-1:-1:-1;;;;;3921:13:7;;3935:6;3921:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2671:91:7;2738:4;-1:-1:-1;;;;;2738:15:7;;:17;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./ContractForDifference.sol\";\nimport \"./ContractForDifferenceFactory.sol\";\n\n\ncontract ContractForDifferenceProxy {\n\n    string constant REASON_PROXY_NEEDS_FUNDS = \"Proxy needs to obtain amount from the sender\";\n\n    /**\n     * ContractForDifferenceFactory.createContract\n     */\n    function createContract(\n        ContractForDifferenceFactory _cfdf,\n        ERC20 _daiToken,\n        bytes32 _marketId,\n        uint _strikePrice,\n        uint _notionalAmountDai,\n        bool _isBuyer,\n        uint _value\n    )\n        external\n        returns (ContractForDifference cfd)\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfdf)) < _value) {\n            _daiToken.approve(address(_cfdf), uint(-1));\n        }\n        cfd = _cfdf.createContract(\n            _marketId,\n            _strikePrice,\n            _notionalAmountDai,\n            _isBuyer,\n            _value\n        );\n    }\n\n    /**\n     * ContractForDifferenceFactory.createContractWithETH\n     */\n    function createContractWithETH(\n        ContractForDifferenceFactory _cfdf,\n        bytes32 _marketId,\n        uint _strikePrice,\n        uint _notionalAmountDai,\n        bool _isBuyer\n    )\n        external\n        payable\n        returns (ContractForDifference cfd)\n    {\n        cfd = _cfdf.createContractWithETH.value(msg.value)(\n            _marketId,\n            _strikePrice,\n            _notionalAmountDai,\n            _isBuyer\n        );\n    }\n\n    /**\n     * ContractForDifference.deposit\n     */\n    function deposit(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.deposit(_value);\n    }\n\n    /**\n     * ContractForDifference.sellPrepare\n     */\n    function sellPrepare(\n        ContractForDifference _cfd,\n        uint _desiredStrikePrice,\n        uint _timeLimit\n    )\n        external\n    {\n        _cfd.sellPrepare(_desiredStrikePrice, _timeLimit);\n    }\n\n    /**\n     * ContractForDifference.sellUpdate\n     */\n    function sellUpdate(ContractForDifference _cfd, uint _newPrice) external {\n        _cfd.sellUpdate(_newPrice);\n    }\n\n    /**\n     * ContractForDifference.sellCancel\n     */\n    function sellCancel(ContractForDifference _cfd) external {\n        _cfd.sellCancel();\n    }\n\n    /**\n     * ContractForDifference.buy\n     */\n    function buy(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        bool _buyBuyerSide,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.buy(_buyBuyerSide, _value);\n    }\n\n    /**\n     * ContractForDifference.topup\n     */\n    function topup(\n        ContractForDifference _cfd,\n        ERC20 _daiToken,\n        uint _value\n    )\n        external\n    {\n        require(\n            _daiToken.transferFrom(msg.sender, address(this), _value),\n            REASON_PROXY_NEEDS_FUNDS\n        );\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\n            _daiToken.approve(address(_cfd), uint(-1));\n        }\n        _cfd.topup(_value);\n    }\n\n    /**\n     * ContractForDifference.withdraw\n     */\n    function withdraw(ContractForDifference _cfd, uint _value) external {\n        _cfd.withdraw(_value);\n    }\n\n    /**\n     * ContractForDifference.upgrade\n     */\n    function upgrade(ContractForDifference _cfd) external {\n        _cfd.upgrade();\n    }\n\n    /**\n     * ContractForDifference.transferPosition\n     */\n    function transferPosition(ContractForDifference _cfd, address _newAddress) external {\n        _cfd.transferPosition(_newAddress);\n    }\n\n    /**\n     * ContractForDifference.liquidateMutual\n     */\n    function liquidateMutual(ContractForDifference _cfd) external {\n        _cfd.liquidateMutual();\n    }\n\n    /**\n     * ContractForDifference.liquidateMutualCancel\n     */\n    function liquidateMutualCancel(ContractForDifference _cfd) external {\n        _cfd.liquidateMutualCancel();\n    }\n\n    /**\n     * ContractForDifference.forceTerminate\n     */\n    function forceTerminate(ContractForDifference _cfd) external {\n        _cfd.forceTerminate();\n    }\n\n    /**\n     * ContractForDifference.cancelNew\n     */\n    function cancelNew(ContractForDifference _cfd) external {\n        _cfd.cancelNew();\n    }\n\n\n    /**\n     * ContractForDifference.changeStrikePrice\n     */\n    function changeStrikePrice(ContractForDifference _cfd, uint _newPrice) external {\n        _cfd.changeStrikePrice(_newPrice);\n    }\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-07-22T21:58:55.856Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "buy(address,address,bool,uint256)": {
        "notice": "ContractForDifference.buy"
      },
      "cancelNew(address)": {
        "notice": "ContractForDifference.cancelNew"
      },
      "changeStrikePrice(address,uint256)": {
        "notice": "ContractForDifference.changeStrikePrice"
      },
      "createContract(address,address,bytes32,uint256,uint256,bool,uint256)": {
        "notice": "ContractForDifferenceFactory.createContract"
      },
      "createContractWithETH(address,bytes32,uint256,uint256,bool)": {
        "notice": "ContractForDifferenceFactory.createContractWithETH"
      },
      "deposit(address,address,uint256)": {
        "notice": "ContractForDifference.deposit"
      },
      "forceTerminate(address)": {
        "notice": "ContractForDifference.forceTerminate"
      },
      "liquidateMutual(address)": {
        "notice": "ContractForDifference.liquidateMutual"
      },
      "liquidateMutualCancel(address)": {
        "notice": "ContractForDifference.liquidateMutualCancel"
      },
      "sellCancel(address)": {
        "notice": "ContractForDifference.sellCancel"
      },
      "sellPrepare(address,uint256,uint256)": {
        "notice": "ContractForDifference.sellPrepare"
      },
      "sellUpdate(address,uint256)": {
        "notice": "ContractForDifference.sellUpdate"
      },
      "topup(address,address,uint256)": {
        "notice": "ContractForDifference.topup"
      },
      "transferPosition(address,address)": {
        "notice": "ContractForDifference.transferPosition"
      },
      "upgrade(address)": {
        "notice": "ContractForDifference.upgrade"
      },
      "withdraw(address,uint256)": {
        "notice": "ContractForDifference.withdraw"
      }
    }
  }
}