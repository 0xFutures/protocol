{
  "contractName": "ContractForDifferenceProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "createContract",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdf",
          "type": "address"
        },
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "name": "_notionalAmountDai",
          "type": "uint256"
        },
        {
          "name": "_isBuyer",
          "type": "bool"
        }
      ],
      "name": "createContractWithETH",
      "outputs": [
        {
          "name": "cfd",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_desiredStrikePrice",
          "type": "uint256"
        },
        {
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "sellPrepare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "sellUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "sellCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_buyBuyerSide",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "topup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "transferPosition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "liquidateMutual",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "liquidateMutualCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "forceTerminate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        }
      ],
      "name": "cancelNew",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfd",
          "type": "address"
        },
        {
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "changeStrikePrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeStrikePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"sellUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"topup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_desiredStrikePrice\",\"type\":\"uint256\"},{\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"sellPrepare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_buyBuyerSide\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"liquidateMutual\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"cancelNew\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdf\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"},{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"createContract\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"transferPosition\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"liquidateMutualCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"forceTerminate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdf\",\"type\":\"address\"},{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"name\":\"_notionalAmountDai\",\"type\":\"uint256\"},{\"name\":\"_isBuyer\",\"type\":\"bool\"}],\"name\":\"createContractWithETH\",\"outputs\":[{\"name\":\"cfd\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfd\",\"type\":\"address\"}],\"name\":\"sellCancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"buy(address,address,bool,uint256)\":{\"notice\":\"ContractForDifference.buy\\r\"},\"cancelNew(address)\":{\"notice\":\"ContractForDifference.cancelNew\\r\"},\"changeStrikePrice(address,uint256)\":{\"notice\":\"ContractForDifference.changeStrikePrice\\r\"},\"createContract(address,address,bytes32,uint256,uint256,bool,uint256)\":{\"notice\":\"ContractForDifferenceFactory.createContract\\r\"},\"createContractWithETH(address,bytes32,uint256,uint256,bool)\":{\"notice\":\"ContractForDifferenceFactory.createContractWithETH\\r\"},\"deposit(address,address,uint256)\":{\"notice\":\"ContractForDifference.deposit\\r\"},\"forceTerminate(address)\":{\"notice\":\"ContractForDifference.forceTerminate\\r\"},\"liquidateMutual(address)\":{\"notice\":\"ContractForDifference.liquidateMutual\\r\"},\"liquidateMutualCancel(address)\":{\"notice\":\"ContractForDifference.liquidateMutualCancel\\r\"},\"sellCancel(address)\":{\"notice\":\"ContractForDifference.sellCancel\\r\"},\"sellPrepare(address,uint256,uint256)\":{\"notice\":\"ContractForDifference.sellPrepare\\r\"},\"sellUpdate(address,uint256)\":{\"notice\":\"ContractForDifference.sellUpdate\\r\"},\"topup(address,address,uint256)\":{\"notice\":\"ContractForDifference.topup\\r\"},\"transferPosition(address,address)\":{\"notice\":\"ContractForDifference.transferPosition\\r\"},\"upgrade(address)\":{\"notice\":\"ContractForDifference.upgrade\\r\"},\"withdraw(address,uint256)\":{\"notice\":\"ContractForDifference.withdraw\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":\"ContractForDifferenceProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0x3fcf0d97ad97399402274b04b62f704f714bd84e0cf8d173337cdc983f1e8608\",\"urls\":[\"bzzr://30f2233a4e3d87dc3a395f921d8aed6139f911bbfb1677fa696a39639bcd005b\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/ForwardFactory.sol\":{\"keccak256\":\"0xb0c15f958b92ff2327342353a45d44fa7d67a9e5aeacfcf7cef27aa08aad8161\",\"urls\":[\"bzzr://443d355e483c722b1a4ea53f94359066d3f7900abc27e872fbdc76c69fc776f2\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x67d6edac57bd3f73f66d10124a85c3b31cbd2cc0cc70b8d64d0455aa9c661152\",\"urls\":[\"bzzr://728cc12165dd00b619a807f137cf605fcff6ca6884f4e60430725fcd5f573fb0\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifference.sol\":{\"keccak256\":\"0x3f43ce29b4568010915a06cddcbb5531c9a20f0e289ce05907d0d1203498788d\",\"urls\":[\"bzzr://fe271e63055d9d7436383a9cae6a6097327b698b9ba0103c3ab3daf354f8f16e\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceFactory.sol\":{\"keccak256\":\"0xbc94655382c0da2c4d978445714a6380a5f85a669363cf422db935d9678f0654\",\"urls\":[\"bzzr://76c4dd43cedd2f02f3e84eb8a88f8b4d6f9a84511f983936eacb8390763652c8\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceLibrary.sol\":{\"keccak256\":\"0x983f2da5cd51498cc9830f083631e562ab15da8a305cdf41befacbbcd58bba7c\",\"urls\":[\"bzzr://055f5800590cc397349e86c012f20d8f0ed4a60170e80b1e0398b923650a5f75\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol\":{\"keccak256\":\"0x3adde40a6a7d2f97ea93fa98dcaf2535d80a01eb5a4d85f0dafce78ad66f869e\",\"urls\":[\"bzzr://9972312c231c912d9daf10c9161669c026f200b81da021ac88a4cf12da7d9b27\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceRegistry.sol\":{\"keccak256\":\"0x46bb873f6ff66de667d60c5edeeb1b6f54dfb52ed7ca1d93370e175137c7f133\",\"urls\":[\"bzzr://8c29992e570faeeb71a303de73b0c309832f7cbf6ee5ef078fc5dfc5079ff432\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0x2b697f6d67b92929f3cd7fc53587e1e1c385e6f74e47333ff9e6fc3f29c03e52\",\"urls\":[\"bzzr://016671b899643065058f67a5b274b04f876065c081b30ffe364b59b6ffd52d74\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0x5e0f5882f1f3e0a71e3fdcb41abae9b8bf7ed1b012fd74b9dd9c810922e130dd\",\"urls\":[\"bzzr://d0d6757ec7e4a9ee4d314c1c486e16d608ec3dc671e6294c3fd567ae18733ce8\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":{\"keccak256\":\"0xead7f48b3dd784cb31d4a3af7dd30c54ec3cb40d2f990acd4226142591cb1f45\",\"urls\":[\"bzzr://5d79bec8552c59968eeefe9aa18df94d59f6f5104c46ef76d0d353d32242e537\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/kyber/KyberFacade.sol\":{\"keccak256\":\"0x8c4689200d61f6fe6a4c8f147751b67dc9693185921f72436f6e1cf76b700198\",\"urls\":[\"bzzr://c33c60ddab2181016fbd783e2a04c0e4aa72e94c1dc14eecb5d6d2ef76237df1\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x7406628e7eb5a77a8b1e0a6ef60e2940851361ad5728fff9d0cc2a92640f5284\",\"urls\":[\"bzzr://0b80b3d03b08c87f1d87e4b754d92c7b626cb56da63e64503aa75ec287888c98\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112b0806100206000396000f3fe6080604052600436106100f35760003560e01c8063ae113bf41161008a578063df2b130311610059578063df2b1303146103fc578063f3de10da1461042f578063f3fef3a31461046f578063fdb10877146104a8576100f3565b8063ae113bf4146102e2578063c128d52f14610315578063d9aa0aab1461038e578063da055fb7146103c9576100f3565b80632cbaf35a116100c65780632cbaf35a146101e257806349f386a41461022157806382cdc16e1461026c5780638340f5491461029f576100f3565b8063011cae19146100f857806303257f74146101335780630900f0101461016c5780631e2a9d4c1461019f575b600080fd5b34801561010457600080fd5b506101316004803603604081101561011b57600080fd5b506001600160a01b0381351690602001356104db565b005b34801561013f57600080fd5b506101316004803603604081101561015657600080fd5b506001600160a01b03813516906020013561053d565b34801561017857600080fd5b506101316004803603602081101561018f57600080fd5b50356001600160a01b0316610583565b3480156101ab57600080fd5b50610131600480360360608110156101c257600080fd5b506001600160a01b038135811691602081013590911690604001356105d9565b3480156101ee57600080fd5b506101316004803603606081101561020557600080fd5b506001600160a01b03813516906020810135906040013561086e565b34801561022d57600080fd5b506101316004803603608081101561024457600080fd5b506001600160a01b0381358116916020810135909116906040810135151590606001356108bc565b34801561027857600080fd5b506101316004803603602081101561028f57600080fd5b50356001600160a01b0316610b22565b3480156102ab57600080fd5b50610131600480360360608110156102c257600080fd5b506001600160a01b03813581169160208101359091169060400135610b5d565b3480156102ee57600080fd5b506101316004803603602081101561030557600080fd5b50356001600160a01b0316610d98565b34801561032157600080fd5b50610372600480360360e081101561033857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610dd3565b604080516001600160a01b039092168252519081900360200190f35b34801561039a57600080fd5b50610131600480360360408110156103b157600080fd5b506001600160a01b038135811691602001351661106c565b3480156103d557600080fd5b50610131600480360360208110156103ec57600080fd5b50356001600160a01b03166110c4565b34801561040857600080fd5b506101316004803603602081101561041f57600080fd5b50356001600160a01b03166110ff565b610372600480360360a081101561044557600080fd5b506001600160a01b038135169060208101359060408101359060608101359060800135151561113a565b34801561047b57600080fd5b506101316004803603604081101561049257600080fd5b506001600160a01b0381351690602001356111d7565b3480156104b457600080fd5b50610131600480360360208110156104cb57600080fd5b50356001600160a01b031661121d565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d602081101561065b57600080fd5b50516040805160608101909152602c80825261125960208301399061070157604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106c65781810151838201526020016106ae565b50505050905090810190601f1680156106f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b5051101561080b5760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b505050506040513d602081101561080857600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561085157600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b15801561091457600080fd5b505af1158015610928573d6000803e3d6000fd5b505050506040513d602081101561093e57600080fd5b50516040805160608101909152602c8082526112596020830139906109a757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156109fb57600080fd5b505afa158015610a0f573d6000803e3d6000fd5b505050506040513d6020811015610a2557600080fd5b50511015610ab15760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b158015610a8457600080fd5b505af1158015610a98573d6000803e3d6000fd5b505050506040513d6020811015610aae57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b5050505050505050565b806001600160a01b03166379bf47966040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d6020811015610bdf57600080fd5b50516040805160608101909152602c808252611259602083013990610c4857604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610c9c57600080fd5b505afa158015610cb0573d6000803e3d6000fd5b505050506040513d6020811015610cc657600080fd5b50511015610d525760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b505050506040513d6020811015610d4f57600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b505050506040513d6020811015610e5857600080fd5b50516040805160608101909152602c808252611259602083013990610ec157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b50511015610fcb5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610f9e57600080fd5b505af1158015610fb2573d6000803e3d6000fd5b505050506040513d6020811015610fc857600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663ddac6d646040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e11b633dcf17e1028152600481018690526024810185905260448101849052821515606482015290516000916001600160a01b03881691637b9e2fc2913491608480830192602092919082900301818588803b1580156111a057600080fd5b505af11580156111b4573d6000803e3d6000fd5b50505050506040513d60208110156111cb57600080fd5b50519695505050505050565b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a72305820abe656fd3e5cd0da155c925396a6d0ec3ca68ee72b883ccb2ff9ba457406c2460029",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063ae113bf41161008a578063df2b130311610059578063df2b1303146103fc578063f3de10da1461042f578063f3fef3a31461046f578063fdb10877146104a8576100f3565b8063ae113bf4146102e2578063c128d52f14610315578063d9aa0aab1461038e578063da055fb7146103c9576100f3565b80632cbaf35a116100c65780632cbaf35a146101e257806349f386a41461022157806382cdc16e1461026c5780638340f5491461029f576100f3565b8063011cae19146100f857806303257f74146101335780630900f0101461016c5780631e2a9d4c1461019f575b600080fd5b34801561010457600080fd5b506101316004803603604081101561011b57600080fd5b506001600160a01b0381351690602001356104db565b005b34801561013f57600080fd5b506101316004803603604081101561015657600080fd5b506001600160a01b03813516906020013561053d565b34801561017857600080fd5b506101316004803603602081101561018f57600080fd5b50356001600160a01b0316610583565b3480156101ab57600080fd5b50610131600480360360608110156101c257600080fd5b506001600160a01b038135811691602081013590911690604001356105d9565b3480156101ee57600080fd5b506101316004803603606081101561020557600080fd5b506001600160a01b03813516906020810135906040013561086e565b34801561022d57600080fd5b506101316004803603608081101561024457600080fd5b506001600160a01b0381358116916020810135909116906040810135151590606001356108bc565b34801561027857600080fd5b506101316004803603602081101561028f57600080fd5b50356001600160a01b0316610b22565b3480156102ab57600080fd5b50610131600480360360608110156102c257600080fd5b506001600160a01b03813581169160208101359091169060400135610b5d565b3480156102ee57600080fd5b506101316004803603602081101561030557600080fd5b50356001600160a01b0316610d98565b34801561032157600080fd5b50610372600480360360e081101561033857600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a081013515159060c00135610dd3565b604080516001600160a01b039092168252519081900360200190f35b34801561039a57600080fd5b50610131600480360360408110156103b157600080fd5b506001600160a01b038135811691602001351661106c565b3480156103d557600080fd5b50610131600480360360208110156103ec57600080fd5b50356001600160a01b03166110c4565b34801561040857600080fd5b506101316004803603602081101561041f57600080fd5b50356001600160a01b03166110ff565b610372600480360360a081101561044557600080fd5b506001600160a01b038135169060208101359060408101359060608101359060800135151561113a565b34801561047b57600080fd5b506101316004803603604081101561049257600080fd5b506001600160a01b0381351690602001356111d7565b3480156104b457600080fd5b50610131600480360360208110156104cb57600080fd5b50356001600160a01b031661121d565b816001600160a01b0316637028875e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505050565b816001600160a01b0316631a9fddf2826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663d55ec6976040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b5050505050565b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d602081101561065b57600080fd5b50516040805160608101909152602c80825261125960208301399061070157604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106c65781810151838201526020016106ae565b50505050905090810190601f1680156106f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b5051101561080b5760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b505050506040513d602081101561080857600080fd5b50505b826001600160a01b03166330db555f826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b505af1158015610865573d6000803e3d6000fd5b50505050505050565b826001600160a01b031663818197ea83836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561085157600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038516916323b872dd9160648083019260209291908290030181600087803b15801561091457600080fd5b505af1158015610928573d6000803e3d6000fd5b505050506040513d602081101561093e57600080fd5b50516040805160608101909152602c8082526112596020830139906109a757604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0386811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156109fb57600080fd5b505afa158015610a0f573d6000803e3d6000fd5b505050506040513d6020811015610a2557600080fd5b50511015610ab15760408051600160e01b63095ea7b30281526001600160a01b038681166004830152600019602483015291519185169163095ea7b3916044808201926020929091908290030181600087803b158015610a8457600080fd5b505af1158015610a98573d6000803e3d6000fd5b505050506040513d6020811015610aae57600080fd5b50505b60408051600160e01b63e24c469b02815283151560048201526024810183905290516001600160a01b0386169163e24c469b91604480830192600092919082900301818387803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b5050505050505050565b806001600160a01b03166379bf47966040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516001600160a01b038416916323b872dd9160648083019260209291908290030181600087803b158015610bb557600080fd5b505af1158015610bc9573d6000803e3d6000fd5b505050506040513d6020811015610bdf57600080fd5b50516040805160608101909152602c808252611259602083013990610c4857604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b0385811660248301529151839285169163dd62ed3e916044808301926020929190829003018186803b158015610c9c57600080fd5b505afa158015610cb0573d6000803e3d6000fd5b505050506040513d6020811015610cc657600080fd5b50511015610d525760408051600160e01b63095ea7b30281526001600160a01b038581166004830152600019602483015291519184169163095ea7b3916044808201926020929091908290030181600087803b158015610d2557600080fd5b505af1158015610d39573d6000803e3d6000fd5b505050506040513d6020811015610d4f57600080fd5b50505b826001600160a01b031663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561085157600080fd5b806001600160a01b031663497b13d36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e01b6323b872dd0281523360048201523060248201526044810183905290516000916001600160a01b038916916323b872dd9160648082019260209290919082900301818787803b158015610e2e57600080fd5b505af1158015610e42573d6000803e3d6000fd5b505050506040513d6020811015610e5857600080fd5b50516040805160608101909152602c808252611259602083013990610ec157604051600160e51b62461bcd0281526020600482018181528351602484015283519092839260449091019190850190808383600083156106c65781810151838201526020016106ae565b5060408051600160e11b636eb1769f0281523060048201526001600160a01b038a81166024830152915184928a169163dd62ed3e916044808301926020929190829003018186803b158015610f1557600080fd5b505afa158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b50511015610fcb5760408051600160e01b63095ea7b30281526001600160a01b038a81166004830152600019602483015291519189169163095ea7b3916044808201926020929091908290030181600087803b158015610f9e57600080fd5b505af1158015610fb2573d6000803e3d6000fd5b505050506040513d6020811015610fc857600080fd5b50505b60408051600160e31b6308943cc302815260048101889052602481018790526044810186905284151560648201526084810184905290516001600160a01b038a16916344a1e6189160a48083019260209291908290030181600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b505050506040513d602081101561105e57600080fd5b505198975050505050505050565b816001600160a01b0316635e24e35d826040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663ddac6d646040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b806001600160a01b03166393a965126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fd5b60408051600160e11b633dcf17e1028152600481018690526024810185905260448101849052821515606482015290516000916001600160a01b03881691637b9e2fc2913491608480830192602092919082900301818588803b1580156111a057600080fd5b505af11580156111b4573d6000803e3d6000fd5b50505050506040513d60208110156111cb57600080fd5b50519695505050505050565b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561052157600080fd5b806001600160a01b031663f797efda6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105be57600080fdfe50726f7879206e6565647320746f206f627461696e20616d6f756e742066726f6d207468652073656e646572a165627a7a72305820abe656fd3e5cd0da155c925396a6d0ec3ca68ee72b883ccb2ff9ba457406c2460029",
  "sourceMap": "181:5196:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:5196:7;;;;;;;",
  "deployedSourceMap": "181:5196:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5240:132:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5240:132:7;;;;;;;;:::i;:::-;;2593:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2593:118:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2593:118:7;;;;;;;;:::i;4170:87::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4170:87:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4170:87:7;-1:-1:-1;;;;;4170:87:7;;:::i;3483:450::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3483:450:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3483:450:7;;;;;;;;;;;;;;;;;:::i;2309:217::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2309:217:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2309:217:7;;;;;;;;;;;;;:::i;2931:490::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2931:490:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2931:490:7;;;;;;;;;;;;;;;;;;;;;;;;:::i;4539:103::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4539:103:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4539:103:7;-1:-1:-1;;;;;4539:103:7;;:::i;1787:454::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1787:454:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1787:454:7;;;;;;;;;;;;;;;;;:::i;5073:91::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5073:91:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5073:91:7;-1:-1:-1;;;;;5073:91:7;;:::i;394:775::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:775:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;394:775:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;394:775:7;;;;;;;;;;;;;;4330:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4330:137:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4330:137:7;;;;;;;;;;:::i;4720:115::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4720:115:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4720:115:7;-1:-1:-1;;;;;4720:115:7;;:::i;4906:101::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4906:101:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4906:101:7;-1:-1:-1;;;;;4906:101:7;;:::i;1254:469::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;1254:469:7;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3998:108::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3998:108:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3998:108:7;;;;;;;;:::i;2778:93::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2778:93:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2778:93:7;-1:-1:-1;;;;;2778:93:7;;:::i;5240:132::-;5331:4;-1:-1:-1;;;;;5331:22:7;;5354:9;5331:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5331:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5331:33:7;;;;5240:132;;:::o;2593:118::-;2677:4;-1:-1:-1;;;;;2677:15:7;;2693:9;2677:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4170:87:7;4235:4;-1:-1:-1;;;;;4235:12:7;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4235:14:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4235:14:7;;;;4170:87;:::o;3483:450::-;3646:57;;;-1:-1:-1;;;;;3646:57:7;;3669:10;3646:57;;;;3689:4;3646:57;;;;;;;;;;;;-1:-1:-1;;;;;3646:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;3646:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;3646:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3646:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3646:57:7;3718:24;;;;;;;;;;;;;;3646:57;3718:24;;;3624:129;;;;;-1:-1:-1;;;;;3624:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3624:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3768:49:7;;;-1:-1:-1;;;;;3768:49:7;;3796:4;3768:49;;;;-1:-1:-1;;;;;3768:49:7;;;;;;;;;3820:6;;3768:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3768:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3768:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3768:49:7;:58;3764:133;;;3843:42;;;-1:-1:-1;;;;;3843:42:7;;-1:-1:-1;;;;;3843:42:7;;;;;;;-1:-1:-1;;3843:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3843:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3843:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3843:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3764:133:7;3907:4;-1:-1:-1;;;;;3907:10:7;;3918:6;3907:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3907:18:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3907:18:7;;;;3483:450;;;:::o;2309:217::-;2469:4;-1:-1:-1;;;;;2469:16:7;;2486:19;2507:10;2469:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2931:490:7;3121:57;;;-1:-1:-1;;;;;3121:57:7;;3144:10;3121:57;;;;3164:4;3121:57;;;;;;;;;;;;-1:-1:-1;;;;;3121:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;3121:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;3121:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3121:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3121:57:7;3193:24;;;;;;;;;;;;;;3121:57;3193:24;;;3099:129;;;;;-1:-1:-1;;;;;3099:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3099:129:7;-1:-1:-1;3243:49:7;;;-1:-1:-1;;;;;3243:49:7;;3271:4;3243:49;;;;-1:-1:-1;;;;;3243:49:7;;;;;;;;;3295:6;;3243:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;3243:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3243:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3243:49:7;:58;3239:133;;;3318:42;;;-1:-1:-1;;;;;3318:42:7;;-1:-1:-1;;;;;3318:42:7;;;;;;;-1:-1:-1;;3318:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;3318:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;3318:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3318:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3239:133:7;3382:31;;;-1:-1:-1;;;;;3382:31:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3382:8:7;;;;;:31;;;;;-1:-1:-1;;3382:31:7;;;;;;;-1:-1:-1;3382:8:7;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3382:31:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3382:31:7;;;;2931:490;;;;:::o;4539:103::-;4612:4;-1:-1:-1;;;;;4612:20:7;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1787:454:7;1952:57;;;-1:-1:-1;;;;;1952:57:7;;1975:10;1952:57;;;;1995:4;1952:57;;;;;;;;;;;;-1:-1:-1;;;;;1952:22:7;;;;;:57;;;;;;;;;;;;;;-1:-1:-1;1952:22:7;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;1952:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1952:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1952:57:7;2024:24;;;;;;;;;;;;;;1952:57;2024:24;;;1930:129;;;;;-1:-1:-1;;;;;1930:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1930:129:7;-1:-1:-1;2074:49:7;;;-1:-1:-1;;;;;2074:49:7;;2102:4;2074:49;;;;-1:-1:-1;;;;;2074:49:7;;;;;;;;;2126:6;;2074:19;;;;;:49;;;;;;;;;;;;;;:19;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;2074:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2074:49:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2074:49:7;:58;2070:133;;;2149:42;;;-1:-1:-1;;;;;2149:42:7;;-1:-1:-1;;;;;2149:42:7;;;;;;;-1:-1:-1;;2149:42:7;;;;;;:17;;;;;;:42;;;;;;;;;;;;;;;-1:-1:-1;2149:17:7;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2149:42:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2149:42:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2070:133:7;2213:4;-1:-1:-1;;;;;2213:12:7;;2226:6;2213:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5073:91:7;5140:4;-1:-1:-1;;;;;5140:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;394:775:7;733:57;;;-1:-1:-1;;;;;733:57:7;;756:10;733:57;;;;776:4;733:57;;;;;;;;;;;;668:25;;-1:-1:-1;;;;;733:22:7;;;;;:57;;;;;;;;;;;;;;;668:25;733:22;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;733:57:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;733:57:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;733:57:7;805:24;;;;;;;;;;;;;;733:57;805:24;;;711:129;;;;;-1:-1:-1;;;;;711:129:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;711:129:7;-1:-1:-1;855:50:7;;;-1:-1:-1;;;;;855:50:7;;883:4;855:50;;;;-1:-1:-1;;;;;855:50:7;;;;;;;;;908:6;;855:19;;;;;:50;;;;;;;;;;;;;;:19;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;855:50:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;855:50:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;855:50:7;:59;851:135;;;931:43;;;-1:-1:-1;;;;;931:43:7;;-1:-1:-1;;;;;931:43:7;;;;;;;-1:-1:-1;;931:43:7;;;;;;:17;;;;;;:43;;;;;;;;;;;;;;;-1:-1:-1;931:17:7;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;931:43:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;931:43:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;851:135:7;1002:159;;;-1:-1:-1;;;;;1002:159:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1002:20:7;;;;;:159;;;;;;;;;;;;;;-1:-1:-1;1002:20:7;:159;;;5:2:-1;;;;30:1;27;20:12;5:2;1002:159:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1002:159:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1002:159:7;;394:775;-1:-1:-1;;;;;;;;394:775:7:o;4330:137::-;4425:4;-1:-1:-1;;;;;4425:21:7;;4447:11;4425:34;;;;;;;;;;;;;-1:-1:-1;;;;;4425:34:7;-1:-1:-1;;;;;4425:34:7;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4720:115:7;4799:4;-1:-1:-1;;;;;4799:26:7;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;4906:101:7;4978:4;-1:-1:-1;;;;;4978:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;1254:469:7;1553:162;;;-1:-1:-1;;;;;1553:162:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:25;;-1:-1:-1;;;;;1553:27:7;;;;;1587:9;;1553:162;;;;;;;;;;;;;;1587:9;1553:27;:162;;;5:2:-1;;;;30:1;27;20:12;5:2;1553:162:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1553:162:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1553:162:7;;1254:469;-1:-1:-1;;;;;;1254:469:7:o;3998:108::-;4077:4;-1:-1:-1;;;;;4077:13:7;;4091:6;4077:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;2778:93:7;2846:4;-1:-1:-1;;;;;2846:15:7;;:17;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./ContractForDifference.sol\";\r\nimport \"./ContractForDifferenceFactory.sol\";\r\n\r\n\r\ncontract ContractForDifferenceProxy {\r\n\r\n    string constant REASON_PROXY_NEEDS_FUNDS = \"Proxy needs to obtain amount from the sender\";\r\n\r\n    /**\r\n     * ContractForDifferenceFactory.createContract\r\n     */\r\n    function createContract(\r\n        ContractForDifferenceFactory _cfdf,\r\n        ERC20 _daiToken,\r\n        bytes32 _marketId,\r\n        uint _strikePrice,\r\n        uint _notionalAmountDai,\r\n        bool _isBuyer,\r\n        uint _value\r\n    )\r\n        external\r\n        returns (ContractForDifference cfd)\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfdf)) < _value) {\r\n            _daiToken.approve(address(_cfdf), uint(-1));\r\n        }\r\n        cfd = _cfdf.createContract(\r\n            _marketId,\r\n            _strikePrice,\r\n            _notionalAmountDai,\r\n            _isBuyer,\r\n            _value\r\n        );\r\n    }\r\n\r\n    /**\r\n     * ContractForDifferenceFactory.createContractWithETH\r\n     */\r\n    function createContractWithETH(\r\n        ContractForDifferenceFactory _cfdf,\r\n        bytes32 _marketId,\r\n        uint _strikePrice,\r\n        uint _notionalAmountDai,\r\n        bool _isBuyer\r\n    )\r\n        external\r\n        payable\r\n        returns (ContractForDifference cfd)\r\n    {\r\n        cfd = _cfdf.createContractWithETH.value(msg.value)(\r\n            _marketId,\r\n            _strikePrice,\r\n            _notionalAmountDai,\r\n            _isBuyer\r\n        );\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.deposit\r\n     */\r\n    function deposit(\r\n        ContractForDifference _cfd,\r\n        ERC20 _daiToken,\r\n        uint _value\r\n    )\r\n        external\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\r\n            _daiToken.approve(address(_cfd), uint(-1));\r\n        }\r\n        _cfd.deposit(_value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.sellPrepare\r\n     */\r\n    function sellPrepare(\r\n        ContractForDifference _cfd,\r\n        uint _desiredStrikePrice,\r\n        uint _timeLimit\r\n    )\r\n        external\r\n    {\r\n        _cfd.sellPrepare(_desiredStrikePrice, _timeLimit);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.sellUpdate\r\n     */\r\n    function sellUpdate(ContractForDifference _cfd, uint _newPrice) external {\r\n        _cfd.sellUpdate(_newPrice);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.sellCancel\r\n     */\r\n    function sellCancel(ContractForDifference _cfd) external {\r\n        _cfd.sellCancel();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.buy\r\n     */\r\n    function buy(\r\n        ContractForDifference _cfd,\r\n        ERC20 _daiToken,\r\n        bool _buyBuyerSide,\r\n        uint _value\r\n    )\r\n        external\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\r\n            _daiToken.approve(address(_cfd), uint(-1));\r\n        }\r\n        _cfd.buy(_buyBuyerSide, _value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.topup\r\n     */\r\n    function topup(\r\n        ContractForDifference _cfd,\r\n        ERC20 _daiToken,\r\n        uint _value\r\n    )\r\n        external\r\n    {\r\n        require(\r\n            _daiToken.transferFrom(msg.sender, address(this), _value),\r\n            REASON_PROXY_NEEDS_FUNDS\r\n        );\r\n        if (_daiToken.allowance(address(this), address(_cfd)) < _value) {\r\n            _daiToken.approve(address(_cfd), uint(-1));\r\n        }\r\n        _cfd.topup(_value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.withdraw\r\n     */\r\n    function withdraw(ContractForDifference _cfd, uint _value) external {\r\n        _cfd.withdraw(_value);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.upgrade\r\n     */\r\n    function upgrade(ContractForDifference _cfd) external {\r\n        _cfd.upgrade();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.transferPosition\r\n     */\r\n    function transferPosition(ContractForDifference _cfd, address _newAddress) external {\r\n        _cfd.transferPosition(_newAddress);\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.liquidateMutual\r\n     */\r\n    function liquidateMutual(ContractForDifference _cfd) external {\r\n        _cfd.liquidateMutual();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.liquidateMutualCancel\r\n     */\r\n    function liquidateMutualCancel(ContractForDifference _cfd) external {\r\n        _cfd.liquidateMutualCancel();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.forceTerminate\r\n     */\r\n    function forceTerminate(ContractForDifference _cfd) external {\r\n        _cfd.forceTerminate();\r\n    }\r\n\r\n    /**\r\n     * ContractForDifference.cancelNew\r\n     */\r\n    function cancelNew(ContractForDifference _cfd) external {\r\n        _cfd.cancelNew();\r\n    }\r\n\r\n\r\n    /**\r\n     * ContractForDifference.changeStrikePrice\r\n     */\r\n    function changeStrikePrice(ContractForDifference _cfd, uint _newPrice) external {\r\n        _cfd.changeStrikePrice(_newPrice);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/cfd/ContractForDifferenceProxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-12-29T13:29:19.619Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "buy(address,address,bool,uint256)": {
        "notice": "ContractForDifference.buy\r"
      },
      "cancelNew(address)": {
        "notice": "ContractForDifference.cancelNew\r"
      },
      "changeStrikePrice(address,uint256)": {
        "notice": "ContractForDifference.changeStrikePrice\r"
      },
      "createContract(address,address,bytes32,uint256,uint256,bool,uint256)": {
        "notice": "ContractForDifferenceFactory.createContract\r"
      },
      "createContractWithETH(address,bytes32,uint256,uint256,bool)": {
        "notice": "ContractForDifferenceFactory.createContractWithETH\r"
      },
      "deposit(address,address,uint256)": {
        "notice": "ContractForDifference.deposit\r"
      },
      "forceTerminate(address)": {
        "notice": "ContractForDifference.forceTerminate\r"
      },
      "liquidateMutual(address)": {
        "notice": "ContractForDifference.liquidateMutual\r"
      },
      "liquidateMutualCancel(address)": {
        "notice": "ContractForDifference.liquidateMutualCancel\r"
      },
      "sellCancel(address)": {
        "notice": "ContractForDifference.sellCancel\r"
      },
      "sellPrepare(address,uint256,uint256)": {
        "notice": "ContractForDifference.sellPrepare\r"
      },
      "sellUpdate(address,uint256)": {
        "notice": "ContractForDifference.sellUpdate\r"
      },
      "topup(address,address,uint256)": {
        "notice": "ContractForDifference.topup\r"
      },
      "transferPosition(address,address)": {
        "notice": "ContractForDifference.transferPosition\r"
      },
      "upgrade(address)": {
        "notice": "ContractForDifference.upgrade\r"
      },
      "withdraw(address,uint256)": {
        "notice": "ContractForDifference.withdraw\r"
      }
    }
  }
}