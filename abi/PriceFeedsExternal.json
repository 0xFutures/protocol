{
  "contractName": "PriceFeedsExternal",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "marketNames",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bytesId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "strId",
          "type": "string"
        }
      ],
      "name": "LogPriceFeedsExternalMarketAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "LogPriceFeedsExternalMarketRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketStrId",
          "type": "string"
        },
        {
          "name": "_priceContract",
          "type": "address"
        },
        {
          "name": "_callSig",
          "type": "bytes32"
        }
      ],
      "name": "addMarket",
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "removeMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "priceValue",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_marketStrId\",\"type\":\"string\"},{\"name\":\"_priceContract\",\"type\":\"address\"},{\"name\":\"_callSig\",\"type\":\"bytes32\"}],\"name\":\"addMarket\",\"outputs\":[{\"name\":\"marketId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"marketNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"removeMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"priceValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bytesId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"strId\",\"type\":\"string\"}],\"name\":\"LogPriceFeedsExternalMarketAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"LogPriceFeedsExternalMarketRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMarket(string,address,bytes32)\":{\"params\":{\"_callSig\":\"Call signature hash of the contract function to fetch                 the price from\",\"_marketStrId\":\"String id of market. eg. \\\"Poloniex_BTC_ETH\\\"\",\"_priceContract\":\"Address of contract to fetch price from\"},\"return\":\"marketId bytes32 keccak256 of the _marketStrId\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addMarket(string,address,bytes32)\":{\"notice\":\"Add a new market\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Market prices feeds coming from external sources. External here means any contract outside the 0xfutures protocol contracts. Examples: MakerDAO price feed, EtherDelta DEX price, etc.\"}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeedsExternal.sol\":\"PriceFeedsExternal\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol-master/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeedsExternal.sol\":{\"keccak256\":\"0x374448d9bd3cd9d4d6def94590d3d43fd5b8084422aadc78b46db3d4f21b6edd\",\"urls\":[\"bzzr://a199b155f1e17b792066dc195376ebc3c0a7a886997f751ba312a9e98d1feef9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36108de806100576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101f75780638da5cb5b146101ff5780638f32d59b14610223578063f2fde38b1461023f578063f4463db51461026557610093565b80630b8043d51461009857806341955214146101295780635c5212dd146101bb57806361da1439146101da575b600080fd5b610117600480360360608110156100ae57600080fd5b8101906020810181356401000000008111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111640100000000831117156100fd57600080fd5b91935091506001600160a01b038135169060200135610282565b60408051918252519081900360200190f35b6101466004803603602081101561013f57600080fd5b503561038e565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610180578181015183820152602001610168565b50505050905090810190601f1680156101ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d8600480360360208110156101d157600080fd5b5035610427565b005b610117600480360360208110156101f057600080fd5b5035610559565b6101d86106d1565b61020761072c565b604080516001600160a01b039092168252519081900360200190f35b61022b61073c565b604080519115158252519081900360200190f35b6101d86004803603602081101561025557600080fd5b50356001600160a01b031661074d565b61022b6004803603602081101561027b57600080fd5b503561076a565b600061028c61073c565b61029557600080fd5b8484604051602001808383808284376040805191909301818103601f19018252808452815160209283012081850185526001600160a01b038b811683528383018b815260008381526001808752888220955186546001600160a01b03191694169390931785559051939091019290925560029092529290922091955061032494509092508891508790506107f5565b50807fba600a88fc714ebd6a38fe64f2b502e9c06a548e4a883a2b43ac0d344be0d212868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a2949350505050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f810183900483028401830190945283835291929083018282801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505081565b61042f61073c565b61043857600080fd5b6104418161076a565b60405180606001604052806025815260200161088e6025913980826104e757604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104ac578181015183820152602001610494565b50505050905090810190601f1680156104d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051808201825260008082526020808301828152878352600191829052848320935184546001600160a01b0319166001600160a01b0390911617845551920191909155905184917f241027c30341da155be2f8d6bf3ae10bdf6083fd0ffcf36e848ae540041fff1191a2505050565b6000818152600160208181526040808420805493810154825180850191909152825180820385018152908301928390528051919486946060946001600160a01b039092169382918401908083835b602083106105c65780518252601f1990920191602091820191016105a7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610626576040519150601f19603f3d011682016040523d82523d6000602084013e61062b565b606091505b509092509050816106b157604080518082018252601a81527f45787465726e616c2070726963652063616c6c206661696c656400000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156104ac578181015183820152602001610494565b8080602001905160208110156106c657600080fd5b505195945050505050565b6106d961073c565b6106e257600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b61075561073c565b61075e57600080fd5b61076781610787565b50565b6000908152600160205260409020546001600160a01b0316151590565b6001600160a01b03811661079a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106108365782800160ff19823516178555610863565b82800160010185558215610863579182015b82811115610863578235825591602001919060010190610848565b5061086f929150610873565b5090565b61073991905b8082111561086f576000815560010161087956fe4d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a7230582014cc2011854f360c6403162ecf4d24614f7942e1539cbd001bfebf78d14cdd670029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101f75780638da5cb5b146101ff5780638f32d59b14610223578063f2fde38b1461023f578063f4463db51461026557610093565b80630b8043d51461009857806341955214146101295780635c5212dd146101bb57806361da1439146101da575b600080fd5b610117600480360360608110156100ae57600080fd5b8101906020810181356401000000008111156100c957600080fd5b8201836020820111156100db57600080fd5b803590602001918460018302840111640100000000831117156100fd57600080fd5b91935091506001600160a01b038135169060200135610282565b60408051918252519081900360200190f35b6101466004803603602081101561013f57600080fd5b503561038e565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610180578181015183820152602001610168565b50505050905090810190601f1680156101ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d8600480360360208110156101d157600080fd5b5035610427565b005b610117600480360360208110156101f057600080fd5b5035610559565b6101d86106d1565b61020761072c565b604080516001600160a01b039092168252519081900360200190f35b61022b61073c565b604080519115158252519081900360200190f35b6101d86004803603602081101561025557600080fd5b50356001600160a01b031661074d565b61022b6004803603602081101561027b57600080fd5b503561076a565b600061028c61073c565b61029557600080fd5b8484604051602001808383808284376040805191909301818103601f19018252808452815160209283012081850185526001600160a01b038b811683528383018b815260008381526001808752888220955186546001600160a01b03191694169390931785559051939091019290925560029092529290922091955061032494509092508891508790506107f5565b50807fba600a88fc714ebd6a38fe64f2b502e9c06a548e4a883a2b43ac0d344be0d212868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a2949350505050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f810183900483028401830190945283835291929083018282801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505081565b61042f61073c565b61043857600080fd5b6104418161076a565b60405180606001604052806025815260200161088e6025913980826104e757604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104ac578181015183820152602001610494565b50505050905090810190601f1680156104d95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060408051808201825260008082526020808301828152878352600191829052848320935184546001600160a01b0319166001600160a01b0390911617845551920191909155905184917f241027c30341da155be2f8d6bf3ae10bdf6083fd0ffcf36e848ae540041fff1191a2505050565b6000818152600160208181526040808420805493810154825180850191909152825180820385018152908301928390528051919486946060946001600160a01b039092169382918401908083835b602083106105c65780518252601f1990920191602091820191016105a7565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610626576040519150601f19603f3d011682016040523d82523d6000602084013e61062b565b606091505b509092509050816106b157604080518082018252601a81527f45787465726e616c2070726963652063616c6c206661696c656400000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156104ac578181015183820152602001610494565b8080602001905160208110156106c657600080fd5b505195945050505050565b6106d961073c565b6106e257600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b61075561073c565b61075e57600080fd5b61076781610787565b50565b6000908152600160205260409020546001600160a01b0316151590565b6001600160a01b03811661079a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106108365782800160ff19823516178555610863565b82800160010185558215610863579182015b82811115610863578235825591602001919060010190610848565b5061086f929150610873565b5090565b61073991905b8082111561086f576000815560010161087956fe4d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a7230582014cc2011854f360c6403162ecf4d24614f7942e1539cbd001bfebf78d14cdd670029",
  "sourceMap": "312:2385:13:-;;;;;515:6:19;:19;;-1:-1:-1;;;;;;515:19:19;524:10;515:19;;;;-1:-1:-1;;;;;582:6:19;;549:40;;515:6;;549:40;312:2385:13;;;;;;",
  "deployedSourceMap": "312:2385:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;312:2385:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1375:443;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1375:443:13;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1375:443:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1375:443:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1375:443:13;;-1:-1:-1;1375:443:13;-1:-1:-1;;;;;;1375:443:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;819:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;819:45:13;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;819:45:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:275;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1824:275:13;;:::i;:::-;;2105:590;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2105:590:13;;:::i;1347:137:19:-;;;:::i;659:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:19;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;1655:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:19;-1:-1:-1;;;;;1655:107:19;;:::i;871:140:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;871:140:13;;:::i;1375:443::-;1548:16;863:9:19;:7;:9::i;:::-;855:18;;;;;;1618:12:13;;1601:30;;;;;;;30:3:-1;22:6;14;1:33;1601:30:13;;;45:16:-1;;;;26:21;;;-1:-1;;22:32;6:49;;1601:30:13;;;1591:41;;49:4:-1;1591:41:13;;;;1662:32;;;;;-1:-1:-1;;;;;1662:32:13;;;;;;;;;;;-1:-1:-1;1642:17:13;;;:7;:17;;;;;;:52;;;;-1:-1:-1;;;;;;1642:52:13;;;;;;;;;;;;;;;;;;;1704:11;:21;;;;;;;1591:41;;-1:-1:-1;1704:36:13;;-1:-1:-1;1704:21:13;;-1:-1:-1;1728:12:13;;-1:-1:-1;1728:12:13;;-1:-1:-1;1704:36:13;:::i;:::-;;1788:8;1755:56;1798:12;;1755:56;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;1755:56:13;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;1755:56:13;;;;-1:-1:-1;1755:56:13;;-1:-1:-1;;;;1755:56:13;1375:443;;;;;;:::o;819:45::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;819:45:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1824:275::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1917:25:13;1932:9;1917:14;:25::i;:::-;1944:28;;;;;;;;;;;;;;;;;304:6:0;293:9;285:26;;;;-1:-1:-1;;;;;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2009:23:13;;;;;;;;-1:-1:-1;2009:23:13;;;;;;;;;;1988:18;;;:7;:18;;;;;;;:44;;;;-1:-1:-1;;;;;;1988:44:13;-1:-1:-1;;;;;1988:44:13;;;;;;;;;;;;;2047:45;;1988:18;;2047:45;;;883:1:19;;1824:275:13;:::o;2105:590::-;2159:15;2210:18;;;:7;:18;;;;;;;;2312:20;;2374:14;;;;2357:32;;;;;;;;;;;26:21:-1;;;22:32;;6:49;;2357:32:13;;;;;;;2312:87;;2210:18;;2159:15;;2261:20;;-1:-1:-1;;;;;2312:20:13;;;;2357:32;;2312:87;;;;2357:32;2312:87;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2312:87:13;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;2291:108:13;;-1:-1:-1;2291:108:13;-1:-1:-1;2291:108:13;2410:80;;2445:33;;;;;;;;;;;;;;;;;;;2438:41;;-1:-1:-1;;;;;2438:41:13;;;;;;;;;;;;;;;;2445:33;;2438:41;;;;;;;;2445:33;2438:41;;2445:33;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;2410:80:13;2672:7;2661:27;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2661:27:13;;2105:590;-1:-1:-1;;;;;2105:590:13:o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:19;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:19;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:19;659:77;;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;1655:107::-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;871:140:13:-;935:4;958:18;;;:7;:18;;;;;:32;-1:-1:-1;;;;;958:32:13;:46;;;871:140::o;1906:183:19:-;-1:-1:-1;;;;;1979:22:19;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:19;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:19;-1:-1:-1;;;;;2065:17:19;;;;;;;;;;1906:183::o;312:2385:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;312:2385:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;312:2385:13;;;-1:-1:-1;312:2385:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../DBC.sol\";\n\n\n/**\n * Market prices feeds coming from external sources.\n * External here means any contract outside the 0xfutures protocol contracts.\n * Examples: MakerDAO price feed, EtherDelta DEX price, etc.\n */\ncontract PriceFeedsExternal is DBC, Ownable {\n    event LogPriceFeedsExternalMarketAdded(bytes32 indexed bytesId, string strId);\n    event LogPriceFeedsExternalMarketRemoved(bytes32 indexed marketId);\n\n    string constant REASON_MUST_BE_ACTIVE_MARKET = \"Market must be active to push a value\";\n    string constant REASON_EXTERNAL_PRICE_CALL_FAILED = \"External price call failed\";\n\n    struct Market {\n        address priceContract;\n        bytes32 callSig;\n    }\n    mapping(bytes32 => Market) markets;\n    mapping(bytes32 => string) public marketNames;\n\n    function isMarketActive(bytes32 _marketId) public view returns (bool) {\n        return markets[_marketId].priceContract != address(0);\n    }\n\n    /**\n     * Add a new market\n     * @param _marketStrId String id of market. eg. \"Poloniex_BTC_ETH\"\n     * @param _priceContract Address of contract to fetch price from\n     * @param _callSig Call signature hash of the contract function to fetch\n     *                  the price from\n     * @return marketId bytes32 keccak256 of the _marketStrId\n     */\n    function addMarket(\n        string calldata _marketStrId,\n        address _priceContract,\n        bytes32 _callSig\n    )\n        external\n        onlyOwner\n        returns (bytes32 marketId)\n    {\n        marketId = keccak256(abi.encodePacked(_marketStrId));\n        markets[marketId] = Market(_priceContract, _callSig);\n        marketNames[marketId] = _marketStrId;\n        emit LogPriceFeedsExternalMarketAdded(marketId, _marketStrId);\n    }\n\n    function removeMarket(bytes32 _marketId)\n        external\n        onlyOwner\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\n    {\n        markets[_marketId] = Market(address(0x0), 0);\n        emit LogPriceFeedsExternalMarketRemoved(_marketId);\n    }\n\n    function read(bytes32 _marketId) public view returns (uint priceValue) {\n        Market storage market = markets[_marketId];\n\n        bool success;\n        bytes memory rspData;\n        (success, rspData) = market.priceContract.staticcall(\n            abi.encodePacked(market.callSig)\n        );\n\n        if (!success) {\n            revert(REASON_EXTERNAL_PRICE_CALL_FAILED);\n        }\n\n        // TODO: assuming a bytes32 return convertable to uint here\n        //   but shouldn't - generic unpack mechanism for other feeds workable?\n        priceValue = abi.decode(rspData, (uint));\n    }\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol-master/contracts/feeds/PriceFeedsExternal.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-04-30T12:16:39.548Z",
  "devdoc": {
    "methods": {
      "addMarket(string,address,bytes32)": {
        "params": {
          "_callSig": "Call signature hash of the contract function to fetch                 the price from",
          "_marketStrId": "String id of market. eg. \"Poloniex_BTC_ETH\"",
          "_priceContract": "Address of contract to fetch price from"
        },
        "return": "marketId bytes32 keccak256 of the _marketStrId"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMarket(string,address,bytes32)": {
        "notice": "Add a new market"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Market prices feeds coming from external sources. External here means any contract outside the 0xfutures protocol contracts. Examples: MakerDAO price feed, EtherDelta DEX price, etc."
  }
}