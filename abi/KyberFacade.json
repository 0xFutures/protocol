{
  "contractName": "KyberFacade",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_kyberWalletId",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kyberWalletId",
          "type": "address"
        }
      ],
      "name": "setKyberWalletId",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_destAddress",
          "type": "address"
        }
      ],
      "name": "ethToDai",
      "outputs": [
        {
          "name": "destAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ethValue",
          "type": "uint256"
        }
      ],
      "name": "daiRate",
      "outputs": [
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_kyberWalletId\",\"type\":\"address\"}],\"name\":\"setKyberWalletId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destAddress\",\"type\":\"address\"}],\"name\":\"ethToDai\",\"outputs\":[{\"name\":\"destAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"daiRate\",\"outputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_kyberWalletId\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"daiRate(uint256)\":{\"params\":{\"_ethValue\":\"An amount of ETH to get the expected rate for.\"}},\"ethToDai(address)\":{\"params\":{\"_destAddress\":\"Receiver of DAI tokens\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"daiRate(uint256)\":{\"notice\":\"Get the expected ETH to DAI rate for the next trade (see getExpectedRate for details).\"},\"ethToDai(address)\":{\"notice\":\"Trade ETH for DAI with: - only permissioned reserves - 0xfutures kyber wallet id - a maximum 2% slip from the current expected rate - an unreachable maximum destination token amount (effectively no max)\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"A facade for 0xfutures interactions with the Kyber network contracts. * Interfacing with KyberNetworkProxy: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\"}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/kyber/KyberFacade.sol\":\"KyberFacade\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x2703d1c87ddd66da66c110570d5e896848f21d3fea0a860ab3ac7cac007a1755\",\"urls\":[\"bzzr://df2ab637255c3194b717f3c9a857bc8d55ba4dddd4605621b48f75e9bb4fcd94\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberFacade.sol\":{\"keccak256\":\"0x61224fefecee1d501cbe250e851678fca5c7cf33d284a89102194380856a2c86\",\"urls\":[\"bzzr://8f48e7321136871f5d7bb183a1a1d798b9fd0b688b885684608d90578d66a4b4\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x0e3fe90852ca500af9457df99c1aec660ae2bdddb170c444881b1f6f796ce91c\",\"urls\":[\"bzzr://8c7ac792da4b76214844068529a0fcdb6bc821e866e0711786958e4ba7a69374\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051604080610a2a8339810180604052604081101561003057600080fd5b508051602090910151600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610091826100a760201b60201c565b6100a0816100e060201b60201c565b505061012a565b6100b561011960201b60201c565b6100be57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6100ee61011960201b60201c565b6100f757600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331490565b6108f1806101396000396000f3fe6080604052600436106100865760003560e01c80638f32d59b116100595780638f32d59b1461011b578063a769aa0814610144578063a91ee0dc1461017c578063f2704763146101af578063f2fde38b146101d957610086565b806354deda011461008b578063715018a6146100c05780637b103999146100d55780638da5cb5b14610106575b600080fd5b34801561009757600080fd5b506100be600480360360208110156100ae57600080fd5b50356001600160a01b031661020c565b005b3480156100cc57600080fd5b506100be61023f565b3480156100e157600080fd5b506100ea61029a565b604080516001600160a01b039092168252519081900360200190f35b34801561011257600080fd5b506100ea6102a9565b34801561012757600080fd5b506101306102b8565b604080519115158252519081900360200190f35b61016a6004803603602081101561015a57600080fd5b50356001600160a01b03166102c9565b60408051918252519081900360200190f35b34801561018857600080fd5b506100be6004803603602081101561019f57600080fd5b50356001600160a01b0316610682565b3480156101bb57600080fd5b5061016a600480360360208110156101d257600080fd5b50356106b5565b3480156101e557600080fd5b506100be600480360360208110156101fc57600080fd5b50356001600160a01b031661083a565b6102146102b8565b61021d57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102476102b8565b61025057600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316638ef855686040518163ffffffff1660e01b815260040160206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d602081101561034457600080fd5b505160015460408051600160e41b630467561902815290519293506000926001600160a01b0390921691634675619091600480820192602092909190829003018186803b15801561039457600080fd5b505afa1580156103a8573d6000803e3d6000fd5b505050506040513d60208110156103be57600080fd5b505160408051600160e01b63809a9e5502815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60048201526001600160a01b038581166024830152346044830152825193169263809a9e5592606480840193919291829003018186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d604081101561045357600080fd5b505160015460408051600160e41b630467561902815290519293506001600160a01b0390911691634675619091600480820192602092909190829003018186803b1580156104a057600080fd5b505afa1580156104b4573d6000803e3d6000fd5b505050506040513d60208110156104ca57600080fd5b50516001600160a01b03166329589f613473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8186896b033b2e3c9fd0803ce800000060648904606202600260009054906101000a90046001600160a01b0316604051806040016040528060048152602001600160e01b635045524d028152506040518a63ffffffff1660e01b815260040180896001600160a01b03166001600160a01b03168152602001888152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105fb5781810151838201526020016105e3565b50505050905090810190601f1680156106285780820380516001836020036101000a031916815260200191505b5099505050505050505050506020604051808303818588803b15801561064d57600080fd5b505af1158015610661573d6000803e3d6000fd5b50505050506040513d602081101561067857600080fd5b5051949350505050565b61068a6102b8565b61069357600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60015460408051600160e41b630467561902815290516000926001600160a01b0316916346756190916004808301926020929190829003018186803b1580156106fd57600080fd5b505afa158015610711573d6000803e3d6000fd5b505050506040513d602081101561072757600080fd5b505160015460408051600160e31b6311df0aad02815290516001600160a01b039384169363809a9e559373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee93911691638ef8556891600480820192602092909190829003018186803b15801561079057600080fd5b505afa1580156107a4573d6000803e3d6000fd5b505050506040513d60208110156107ba57600080fd5b50516040805163ffffffff851660e01b81526001600160a01b039384166004820152929091166024830152604482018690528051606480840193829003018186803b15801561080857600080fd5b505afa15801561081c573d6000803e3d6000fd5b505050506040513d604081101561083257600080fd5b505192915050565b6108426102b8565b61084b57600080fd5b61085481610857565b50565b6001600160a01b03811661086a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a72305820203ac50e5d7b1ad25f0dff6ea5d0bd71eb6c32afc0c1113b5599fd76aa7f1aab0029",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80638f32d59b116100595780638f32d59b1461011b578063a769aa0814610144578063a91ee0dc1461017c578063f2704763146101af578063f2fde38b146101d957610086565b806354deda011461008b578063715018a6146100c05780637b103999146100d55780638da5cb5b14610106575b600080fd5b34801561009757600080fd5b506100be600480360360208110156100ae57600080fd5b50356001600160a01b031661020c565b005b3480156100cc57600080fd5b506100be61023f565b3480156100e157600080fd5b506100ea61029a565b604080516001600160a01b039092168252519081900360200190f35b34801561011257600080fd5b506100ea6102a9565b34801561012757600080fd5b506101306102b8565b604080519115158252519081900360200190f35b61016a6004803603602081101561015a57600080fd5b50356001600160a01b03166102c9565b60408051918252519081900360200190f35b34801561018857600080fd5b506100be6004803603602081101561019f57600080fd5b50356001600160a01b0316610682565b3480156101bb57600080fd5b5061016a600480360360208110156101d257600080fd5b50356106b5565b3480156101e557600080fd5b506100be600480360360208110156101fc57600080fd5b50356001600160a01b031661083a565b6102146102b8565b61021d57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102476102b8565b61025057600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316638ef855686040518163ffffffff1660e01b815260040160206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d602081101561034457600080fd5b505160015460408051600160e41b630467561902815290519293506000926001600160a01b0390921691634675619091600480820192602092909190829003018186803b15801561039457600080fd5b505afa1580156103a8573d6000803e3d6000fd5b505050506040513d60208110156103be57600080fd5b505160408051600160e01b63809a9e5502815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60048201526001600160a01b038581166024830152346044830152825193169263809a9e5592606480840193919291829003018186803b15801561042957600080fd5b505afa15801561043d573d6000803e3d6000fd5b505050506040513d604081101561045357600080fd5b505160015460408051600160e41b630467561902815290519293506001600160a01b0390911691634675619091600480820192602092909190829003018186803b1580156104a057600080fd5b505afa1580156104b4573d6000803e3d6000fd5b505050506040513d60208110156104ca57600080fd5b50516001600160a01b03166329589f613473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8186896b033b2e3c9fd0803ce800000060648904606202600260009054906101000a90046001600160a01b0316604051806040016040528060048152602001600160e01b635045524d028152506040518a63ffffffff1660e01b815260040180896001600160a01b03166001600160a01b03168152602001888152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156105fb5781810151838201526020016105e3565b50505050905090810190601f1680156106285780820380516001836020036101000a031916815260200191505b5099505050505050505050506020604051808303818588803b15801561064d57600080fd5b505af1158015610661573d6000803e3d6000fd5b50505050506040513d602081101561067857600080fd5b5051949350505050565b61068a6102b8565b61069357600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60015460408051600160e41b630467561902815290516000926001600160a01b0316916346756190916004808301926020929190829003018186803b1580156106fd57600080fd5b505afa158015610711573d6000803e3d6000fd5b505050506040513d602081101561072757600080fd5b505160015460408051600160e31b6311df0aad02815290516001600160a01b039384169363809a9e559373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee93911691638ef8556891600480820192602092909190829003018186803b15801561079057600080fd5b505afa1580156107a4573d6000803e3d6000fd5b505050506040513d60208110156107ba57600080fd5b50516040805163ffffffff851660e01b81526001600160a01b039384166004820152929091166024830152604482018690528051606480840193829003018186803b15801561080857600080fd5b505afa15801561081c573d6000803e3d6000fd5b505050506040513d604081101561083257600080fd5b505192915050565b6108426102b8565b61084b57600080fd5b61085481610857565b50565b6001600160a01b03811661086a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a72305820203ac50e5d7b1ad25f0dff6ea5d0bd71eb6c32afc0c1113b5599fd76aa7f1aab0029",
  "sourceMap": "350:2567:12:-;;;958:143;8:9:-1;5:2;;;30:1;27;20:12;5:2;958:143:12;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;958:143:12;;;;;;;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;958:143:12;549:40:17;-1:-1:-1;;;;;582:6:17;;;;;515;549:40;;515:6;;549:40;1030:22:12;1042:9;1030:11;;;:22;;:::i;:::-;1062:32;1079:14;1062:16;;;:32;;:::i;:::-;958:143;;350:2567;;1107:104;863:9:17;:7;;;:9;;:::i;:::-;855:18;;;;;;1174:8:12;:30;;-1:-1:-1;;;;;;1174:30:12;-1:-1:-1;;;;;1174:30:12;;;;;;;;;;1107:104::o;1217:114::-;863:9:17;:7;;;:9;;:::i;:::-;855:18;;;;;;1294:13:12;:30;;-1:-1:-1;;;;;;1294:30:12;-1:-1:-1;;;;;1294:30:12;;;;;;;;;;1217:114::o;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;350:2567:12:-;;;;;;;",
  "deployedSourceMap": "350:2567:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:114:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1217:114:12;-1:-1:-1;;;;;1217:114:12;;:::i;:::-;;1347:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:17;;;:::i;900:24:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:24:12;;;:::i;:::-;;;;-1:-1:-1;;;;;900:24:12;;;;;;;;;;;;;;659:77:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:17;;;:::i;979:90::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;1652:805:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1652:805:12;-1:-1:-1;;;;;1652:805:12;;:::i;:::-;;;;;;;;;;;;;;;;1107:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:104:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1107:104:12;-1:-1:-1;;;;;1107:104:12;;:::i;2651:264::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2651:264:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2651:264:12;;:::i;1655:107:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;1217:114:12:-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1294:13:12;:30;;-1:-1:-1;;;;;;1294:30:12;-1:-1:-1;;;;;1294:30:12;;;;;;;;;;1217:114::o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;900:24:12:-;;;-1:-1:-1;;;;;900:24:12;;:::o;659:77:17:-;697:7;723:6;-1:-1:-1;;;;;723:6:17;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;1652:805:12:-;1740:15;1771:16;1798:8;;;;;;;;;-1:-1:-1;;;;;1798:8:12;-1:-1:-1;;;;;1798:15:12;;:17;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1798:17:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1798:17:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1798:17:12;1856:8;;:31;;;-1:-1:-1;;;;;1856:31:12;;;;1798:17;;-1:-1:-1;1827:24:12;;-1:-1:-1;;;;;1856:8:12;;;;:29;;:31;;;;;1798:17;;1856:31;;;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;1856:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1856:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1856:31:12;:126;;;-1:-1:-1;;;;;1856:126:12;;585:42;1856:126;;;;-1:-1:-1;;;;;1856:126:12;;;;;;;1963:9;1856:126;;;;;;:47;;;;;:126;;;;;;;;;;;;;:47;:126;;;5:2:-1;;;;30:1;27;20:12;5:2;1856:126:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1856:126:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1856:126:12;2005:8;;1856:126;2005:31;;-1:-1:-1;;;;;2005:31:12;;;;1856:126;;-1:-1:-1;;;;;;2005:8:12;;;;:29;;:31;;;;;1856:126;;2005:31;;;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2005:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2005:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2005:31:12;-1:-1:-1;;;;;2005:45:12;;2057:9;585:42;2057:9;2161:8;2203:12;837:10;2307:3;2285:19;:25;2313:2;2285:30;2356:13;;;;;;;;;-1:-1:-1;;;;;2356:13:12;500;;;;;;;;;;;;;-1:-1:-1;;;;;500:13:12;;;2005:445;;;;;;;;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2005:445:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2005:445:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2005:445:12;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2005:445:12;;1652:805;-1:-1:-1;;;;1652:805:12:o;1107:104::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1174:8:12;:30;;-1:-1:-1;;;;;;1174:30:12;-1:-1:-1;;;;;1174:30:12;;;;;;;;;;1107:104::o;2651:264::-;2764:8;;:31;;;-1:-1:-1;;;;;2764:31:12;;;;2729:9;;-1:-1:-1;;;;;2764:8:12;;:29;;:31;;;;;;;;;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2764:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2764:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2764:31:12;2857:8;;:17;;;-1:-1:-1;;;;;2857:17:12;;;;-1:-1:-1;;;;;2764:47:12;;;;;;585:42;;2857:8;;;:15;;:17;;;;;2764:31;;2857:17;;;;;;;;:8;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;2857:17:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2857:17:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2857:17:12;2764:144;;;;;;;;;;-1:-1:-1;;;;;2764:144:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;2764:144:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2764:144:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2764:144:12;;2651:264;-1:-1:-1;;2651:264:12:o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../Registry.sol\";\nimport \"./KyberNetworkProxyInterface.sol\";\n\n/**\n * A facade for 0xfutures interactions with the Kyber network contracts.\n *\n * Interfacing with KyberNetworkProxy:\n * https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\n */\n\ncontract KyberFacade is Ownable {\n\n    /*\n     * Constants\n     */\n\n    // Use only permissioned reserves\n    bytes constant PERMISSIONED_ONLY_HINT = bytes(\"PERM\");\n\n    // Denotes native ETH in Kyber\n    address constant NATIVE_ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n\n    // Kyber trades require a non 0 maximum destination amount. Since we don't\n    // need to restrict on a maximum set it to a very large amount that won't\n    // be hit\n    uint constant MAX_DEST_AMOUNT = 1e18 * 1e9; // 1 billion DAI\n\n    /*\n     * State\n     */\n\n    Registry public registry;\n    address kyberWalletId;\n\n    constructor(address _registry, address _kyberWalletId) public {\n        setRegistry(_registry);\n        setKyberWalletId(_kyberWalletId);\n    }\n\n    function setRegistry(address _registry) public onlyOwner {\n        registry = Registry(_registry);\n    }\n\n    function setKyberWalletId(address _kyberWalletId) public onlyOwner {\n        kyberWalletId = _kyberWalletId;\n    }\n\n    /**\n     * Trade ETH for DAI with:\n     *  - only permissioned reserves\n     *  - 0xfutures kyber wallet id\n     *  - a maximum 2% slip from the current expected rate\n     *  - an unreachable maximum destination token amount (effectively no max)\n     *\n     * @param _destAddress Receiver of DAI tokens\n     */\n    function ethToDai(address _destAddress)\n        public\n        payable\n        returns (uint destAmount)\n    {\n        address daiToken = address(registry.getDAI());\n        (uint currentExpectedRate,) = registry.getKyberNetworkProxy().getExpectedRate(\n            NATIVE_ETH,\n            daiToken,\n            msg.value\n        );\n        destAmount = registry.getKyberNetworkProxy().tradeWithHint.value(msg.value)(\n            NATIVE_ETH, // src token - ETH\n            msg.value, // ETH amount\n            daiToken, // dest token - DAI\n            _destAddress, // DAI transferred to here\n            MAX_DEST_AMOUNT,\n            currentExpectedRate / 100 * 98, // allow a maximum 2% slip\n            kyberWalletId, // will receive 30% of fees in KNC\n            PERMISSIONED_ONLY_HINT\n        );\n    }\n\n    /**\n     * Get the expected ETH to DAI rate for the next trade\n     * (see getExpectedRate for details).\n     * @param _ethValue An amount of ETH to get the expected rate for.\n     */\n    function daiRate(uint _ethValue)\n        public\n        view\n        returns (uint rate)\n    {\n        (rate,) = registry.getKyberNetworkProxy().getExpectedRate(\n            NATIVE_ETH,\n            address(registry.getDAI()),\n            _ethValue\n        );\n    }\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/kyber/KyberFacade.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-07-30T06:33:26.401Z",
  "devdoc": {
    "methods": {
      "daiRate(uint256)": {
        "params": {
          "_ethValue": "An amount of ETH to get the expected rate for."
        }
      },
      "ethToDai(address)": {
        "params": {
          "_destAddress": "Receiver of DAI tokens"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "daiRate(uint256)": {
        "notice": "Get the expected ETH to DAI rate for the next trade (see getExpectedRate for details)."
      },
      "ethToDai(address)": {
        "notice": "Trade ETH for DAI with: - only permissioned reserves - 0xfutures kyber wallet id - a maximum 2% slip from the current expected rate - an unreachable maximum destination token amount (effectively no max)"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "A facade for 0xfutures interactions with the Kyber network contracts. * Interfacing with KyberNetworkProxy: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/"
  }
}