{
  "contractName": "KyberFacade",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        },
        {
          "name": "_kyberWalletId",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kyberWalletId",
          "type": "address"
        }
      ],
      "name": "setKyberWalletId",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_destAddress",
          "type": "address"
        }
      ],
      "name": "ethToDai",
      "outputs": [
        {
          "name": "destAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_ethValue",
          "type": "uint256"
        }
      ],
      "name": "daiRate",
      "outputs": [
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_kyberWalletId\",\"type\":\"address\"}],\"name\":\"setKyberWalletId\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_destAddress\",\"type\":\"address\"}],\"name\":\"ethToDai\",\"outputs\":[{\"name\":\"destAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ethValue\",\"type\":\"uint256\"}],\"name\":\"daiRate\",\"outputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"},{\"name\":\"_kyberWalletId\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"daiRate(uint256)\":{\"params\":{\"_ethValue\":\"An amount of ETH to get the expected rate for.\"}},\"ethToDai(address)\":{\"params\":{\"_destAddress\":\"Receiver of DAI tokens\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"daiRate(uint256)\":{\"notice\":\"Get the expected ETH to DAI rate for the next trade (see getExpectedRate for details).\"},\"ethToDai(address)\":{\"notice\":\"Trade ETH for DAI with: - only permissioned reserves - 0xfutures kyber wallet id - a maximum 2% slip from the current expected rate - an unreachable maximum destination token amount (effectively no max)\"}},\"notice\":\"A facade for 0xfutures interactions with the Kyber network contracts. * Interfacing with KyberNetworkProxy: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\"}},\"settings\":{\"compilationTarget\":{\"/Users/julien/Desktop/protocol/contracts/kyber/KyberFacade.sol\":\"KyberFacade\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/julien/Desktop/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/Users/julien/Desktop/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x2703d1c87ddd66da66c110570d5e896848f21d3fea0a860ab3ac7cac007a1755\",\"urls\":[\"bzzr://df2ab637255c3194b717f3c9a857bc8d55ba4dddd4605621b48f75e9bb4fcd94\"]},\"/Users/julien/Desktop/protocol/contracts/kyber/KyberFacade.sol\":{\"keccak256\":\"0x61224fefecee1d501cbe250e851678fca5c7cf33d284a89102194380856a2c86\",\"urls\":[\"bzzr://8f48e7321136871f5d7bb183a1a1d798b9fd0b688b885684608d90578d66a4b4\"]},\"/Users/julien/Desktop/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x0e3fe90852ca500af9457df99c1aec660ae2bdddb170c444881b1f6f796ce91c\",\"urls\":[\"bzzr://8c7ac792da4b76214844068529a0fcdb6bc821e866e0711786958e4ba7a69374\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzzr://fefcc5ec4e313a66c9fd38375983b5973c528e7e19b6d37c2f1ac6745295e6e2\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051604080610c8c8339810180604052604081101561003057600080fd5b5080516020918201519091610048906100b5811b901c565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361009f826100b960201b60201c565b6100ae8161014260201b60201c565b50506101f6565b3390565b6100c76101cb60201b60201c565b61012057604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018190526024820152600080516020610c6c833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6101506101cb60201b60201c565b6101a957604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482018190526024820152600080516020610c6c833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b03166101e76100b5602090811b901c565b6001600160a01b031614905090565b610a67806102056000396000f3fe6080604052600436106100865760003560e01c80638f32d59b116100595780638f32d59b1461011b578063a769aa0814610144578063a91ee0dc1461017c578063f2704763146101af578063f2fde38b146101d957610086565b806354deda011461008b578063715018a6146100c05780637b103999146100d55780638da5cb5b14610106575b600080fd5b34801561009757600080fd5b506100be600480360360208110156100ae57600080fd5b50356001600160a01b031661020c565b005b3480156100cc57600080fd5b506100be610278565b3480156100e157600080fd5b506100ea61030c565b604080516001600160a01b039092168252519081900360200190f35b34801561011257600080fd5b506100ea61031b565b34801561012757600080fd5b5061013061032a565b604080519115158252519081900360200190f35b61016a6004803603602081101561015a57600080fd5b50356001600160a01b031661034e565b60408051918252519081900360200190f35b34801561018857600080fd5b506100be6004803603602081101561019f57600080fd5b50356001600160a01b0316610707565b3480156101bb57600080fd5b5061016a600480360360208110156101d257600080fd5b5035610773565b3480156101e557600080fd5b506100be600480360360208110156101fc57600080fd5b50356001600160a01b03166108f8565b61021461032a565b6102565760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61028061032a565b6102c25760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b6000546001600160a01b031690565b600080546001600160a01b031661033f61094e565b6001600160a01b031614905090565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316638ef855686040518163ffffffff1660e01b815260040160206040518083038186803b15801561039f57600080fd5b505afa1580156103b3573d6000803e3d6000fd5b505050506040513d60208110156103c957600080fd5b505160015460408051600160e41b630467561902815290519293506000926001600160a01b0390921691634675619091600480820192602092909190829003018186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d602081101561044357600080fd5b505160408051600160e01b63809a9e5502815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60048201526001600160a01b038581166024830152346044830152825193169263809a9e5592606480840193919291829003018186803b1580156104ae57600080fd5b505afa1580156104c2573d6000803e3d6000fd5b505050506040513d60408110156104d857600080fd5b505160015460408051600160e41b630467561902815290519293506001600160a01b0390911691634675619091600480820192602092909190829003018186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d602081101561054f57600080fd5b50516001600160a01b03166329589f613473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8186896b033b2e3c9fd0803ce800000060648904606202600260009054906101000a90046001600160a01b0316604051806040016040528060048152602001600160e01b635045524d028152506040518a63ffffffff1660e01b815260040180896001600160a01b03166001600160a01b03168152602001888152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610680578181015183820152602001610668565b50505050905090810190601f1680156106ad5780820380516001836020036101000a031916815260200191505b5099505050505050505050506020604051808303818588803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050506040513d60208110156106fd57600080fd5b5051949350505050565b61070f61032a565b6107515760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60015460408051600160e41b630467561902815290516000926001600160a01b0316916346756190916004808301926020929190829003018186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d60208110156107e557600080fd5b505160015460408051600160e31b6311df0aad02815290516001600160a01b039384169363809a9e559373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee93911691638ef8556891600480820192602092909190829003018186803b15801561084e57600080fd5b505afa158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b50516040805163ffffffff851660e01b81526001600160a01b039384166004820152929091166024830152604482018690528051606480840193829003018186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d60408110156108f057600080fd5b505192915050565b61090061032a565b6109425760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b61094b81610952565b50565b3390565b6001600160a01b03811661099a57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806109f66026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a723058209fb1f3d751cb4535007964bedfa4702e774cf5c765a9b033986bb3ec4ef15b8000294f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80638f32d59b116100595780638f32d59b1461011b578063a769aa0814610144578063a91ee0dc1461017c578063f2704763146101af578063f2fde38b146101d957610086565b806354deda011461008b578063715018a6146100c05780637b103999146100d55780638da5cb5b14610106575b600080fd5b34801561009757600080fd5b506100be600480360360208110156100ae57600080fd5b50356001600160a01b031661020c565b005b3480156100cc57600080fd5b506100be610278565b3480156100e157600080fd5b506100ea61030c565b604080516001600160a01b039092168252519081900360200190f35b34801561011257600080fd5b506100ea61031b565b34801561012757600080fd5b5061013061032a565b604080519115158252519081900360200190f35b61016a6004803603602081101561015a57600080fd5b50356001600160a01b031661034e565b60408051918252519081900360200190f35b34801561018857600080fd5b506100be6004803603602081101561019f57600080fd5b50356001600160a01b0316610707565b3480156101bb57600080fd5b5061016a600480360360208110156101d257600080fd5b5035610773565b3480156101e557600080fd5b506100be600480360360208110156101fc57600080fd5b50356001600160a01b03166108f8565b61021461032a565b6102565760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61028061032a565b6102c25760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031681565b6000546001600160a01b031690565b600080546001600160a01b031661033f61094e565b6001600160a01b031614905090565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316638ef855686040518163ffffffff1660e01b815260040160206040518083038186803b15801561039f57600080fd5b505afa1580156103b3573d6000803e3d6000fd5b505050506040513d60208110156103c957600080fd5b505160015460408051600160e41b630467561902815290519293506000926001600160a01b0390921691634675619091600480820192602092909190829003018186803b15801561041957600080fd5b505afa15801561042d573d6000803e3d6000fd5b505050506040513d602081101561044357600080fd5b505160408051600160e01b63809a9e5502815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60048201526001600160a01b038581166024830152346044830152825193169263809a9e5592606480840193919291829003018186803b1580156104ae57600080fd5b505afa1580156104c2573d6000803e3d6000fd5b505050506040513d60408110156104d857600080fd5b505160015460408051600160e41b630467561902815290519293506001600160a01b0390911691634675619091600480820192602092909190829003018186803b15801561052557600080fd5b505afa158015610539573d6000803e3d6000fd5b505050506040513d602081101561054f57600080fd5b50516001600160a01b03166329589f613473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8186896b033b2e3c9fd0803ce800000060648904606202600260009054906101000a90046001600160a01b0316604051806040016040528060048152602001600160e01b635045524d028152506040518a63ffffffff1660e01b815260040180896001600160a01b03166001600160a01b03168152602001888152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b03168152602001858152602001848152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610680578181015183820152602001610668565b50505050905090810190601f1680156106ad5780820380516001836020036101000a031916815260200191505b5099505050505050505050506020604051808303818588803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050506040513d60208110156106fd57600080fd5b5051949350505050565b61070f61032a565b6107515760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60015460408051600160e41b630467561902815290516000926001600160a01b0316916346756190916004808301926020929190829003018186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d60208110156107e557600080fd5b505160015460408051600160e31b6311df0aad02815290516001600160a01b039384169363809a9e559373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee93911691638ef8556891600480820192602092909190829003018186803b15801561084e57600080fd5b505afa158015610862573d6000803e3d6000fd5b505050506040513d602081101561087857600080fd5b50516040805163ffffffff851660e01b81526001600160a01b039384166004820152929091166024830152604482018690528051606480840193829003018186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d60408110156108f057600080fd5b505192915050565b61090061032a565b6109425760408051600160e51b62461bcd0281526020600482018190526024820152600080516020610a1c833981519152604482015290519081900360640190fd5b61094b81610952565b50565b3390565b6001600160a01b03811661099a57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806109f66026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a723058209fb1f3d751cb4535007964bedfa4702e774cf5c765a9b033986bb3ec4ef15b800029",
  "sourceMap": "350:2567:12:-;;;958:143;8:9:-1;5:2;;;30:1;27;20:12;5:2;958:143:12;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;958:143:12;;;;;;;;;707:12:18;;:10;;;:12;;:::i;:::-;698:6;:21;;-1:-1:-1;;;;;;698:21:18;-1:-1:-1;;;;;698:21:18;;;;;;;734:40;;767:6;;;734:40;;698:6;;734:40;1030:22:12;1042:9;1030:11;;;:22;;:::i;:::-;1062:32;1079:14;1062:16;;;:32;;:::i;:::-;958:143;;350:2567;;788:96:16;867:10;788:96;:::o;1107:104:12:-;1061:9:18;:7;;;:9;;:::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1053:54:18;;;;;;;;;;;;;;;1174:8:12;:30;;-1:-1:-1;;;;;;1174:30:12;-1:-1:-1;;;;;1174:30:12;;;;;;;;;;1107:104::o;1217:114::-;1061:9:18;:7;;;:9;;:::i;:::-;1053:54;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1053:54:18;;;;;;;;;;;;;;;1294:13:12;:30;;-1:-1:-1;;;;;;1294:30:12;-1:-1:-1;;;;;1294:30:12;;;;;;;;;;1217:114::o;1208:92:18:-;1248:4;1287:6;;-1:-1:-1;;;;;1287:6:18;1271:12;:10;;;;;:12;;:::i;:::-;-1:-1:-1;;;;;1271:22:18;;1264:29;;1208:92;:::o;350:2567:12:-;;;;;;;",
  "deployedSourceMap": "350:2567:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:114:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1217:114:12;-1:-1:-1;;;;;1217:114:12;;:::i;:::-;;1642:137:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:137:18;;;:::i;900:24:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:24:12;;;:::i;:::-;;;;-1:-1:-1;;;;;900:24:12;;;;;;;;;;;;;;857:77:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;857:77:18;;;:::i;1208:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1208:92:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;1652:805:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1652:805:12;-1:-1:-1;;;;;1652:805:12;;:::i;:::-;;;;;;;;;;;;;;;;1107:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:104:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1107:104:12;-1:-1:-1;;;;;1107:104:12;;:::i;2651:264::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2651:264:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2651:264:12;;:::i;1928:107:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1928:107:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1928:107:18;-1:-1:-1;;;;;1928:107:18;;:::i;1217:114:12:-;1061:9:18;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;;;1053:54:18;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1053:54:18;;;;;;;;;;;;;;;1294:13:12;:30;;-1:-1:-1;;;;;;1294:30:12;-1:-1:-1;;;;;1294:30:12;;;;;;;;;;1217:114::o;1642:137:18:-;1061:9;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;;;1053:54:18;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1053:54:18;;;;;;;;;;;;;;;1740:1;1724:6;;1703:40;;-1:-1:-1;;;;;1724:6:18;;;;1703:40;;1740:1;;1703:40;1770:1;1753:19;;-1:-1:-1;;;;;;1753:19:18;;;1642:137::o;900:24:12:-;;;-1:-1:-1;;;;;900:24:12;;:::o;857:77:18:-;895:7;921:6;-1:-1:-1;;;;;921:6:18;857:77;:::o;1208:92::-;1248:4;1287:6;;-1:-1:-1;;;;;1287:6:18;1271:12;:10;:12::i;:::-;-1:-1:-1;;;;;1271:22:18;;1264:29;;1208:92;:::o;1652:805:12:-;1740:15;1771:16;1798:8;;;;;;;;;-1:-1:-1;;;;;1798:8:12;-1:-1:-1;;;;;1798:15:12;;:17;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1798:17:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1798:17:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1798:17:12;1856:8;;:31;;;-1:-1:-1;;;;;1856:31:12;;;;1798:17;;-1:-1:-1;1827:24:12;;-1:-1:-1;;;;;1856:8:12;;;;:29;;:31;;;;;1798:17;;1856:31;;;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;1856:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1856:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1856:31:12;:126;;;-1:-1:-1;;;;;1856:126:12;;585:42;1856:126;;;;-1:-1:-1;;;;;1856:126:12;;;;;;;1963:9;1856:126;;;;;;:47;;;;;:126;;;;;;;;;;;;;:47;:126;;;5:2:-1;;;;30:1;27;20:12;5:2;1856:126:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1856:126:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1856:126:12;2005:8;;1856:126;2005:31;;-1:-1:-1;;;;;2005:31:12;;;;1856:126;;-1:-1:-1;;;;;;2005:8:12;;;;:29;;:31;;;;;1856:126;;2005:31;;;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2005:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2005:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2005:31:12;-1:-1:-1;;;;;2005:45:12;;2057:9;585:42;2057:9;2161:8;2203:12;837:10;2307:3;2285:19;:25;2313:2;2285:30;2356:13;;;;;;;;;-1:-1:-1;;;;;2356:13:12;500;;;;;;;;;;;;;-1:-1:-1;;;;;500:13:12;;;2005:445;;;;;;;;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2005:445:12;-1:-1:-1;;;;;2005:445:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2005:445:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2005:445:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2005:445:12;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2005:445:12;;1652:805;-1:-1:-1;;;;1652:805:12:o;1107:104::-;1061:9:18;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;;;1053:54:18;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1053:54:18;;;;;;;;;;;;;;;1174:8:12;:30;;-1:-1:-1;;;;;;1174:30:12;-1:-1:-1;;;;;1174:30:12;;;;;;;;;;1107:104::o;2651:264::-;2764:8;;:31;;;-1:-1:-1;;;;;2764:31:12;;;;2729:9;;-1:-1:-1;;;;;2764:8:12;;:29;;:31;;;;;;;;;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;2764:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2764:31:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2764:31:12;2857:8;;:17;;;-1:-1:-1;;;;;2857:17:12;;;;-1:-1:-1;;;;;2764:47:12;;;;;;585:42;;2857:8;;;:15;;:17;;;;;2764:31;;2857:17;;;;;;;;:8;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;2857:17:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2857:17:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2857:17:12;2764:144;;;;;;;;;;-1:-1:-1;;;;;2764:144:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:2:-1;;;;30:1;27;20:12;5:2;2764:144:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2764:144:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2764:144:12;;2651:264;-1:-1:-1;;2651:264:12:o;1928:107:18:-;1061:9;:7;:9::i;:::-;1053:54;;;;;-1:-1:-1;;;;;1053:54:18;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1053:54:18;;;;;;;;;;;;;;;2000:28;2019:8;2000:18;:28::i;:::-;1928:107;:::o;788:96:16:-;867:10;788:96;:::o;2136:225:18:-;-1:-1:-1;;;;;2209:22:18;;2201:73;;;;-1:-1:-1;;;;;2201:73:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2310:6;;;2289:38;;-1:-1:-1;;;;;2289:38:18;;;;2310:6;;;2289:38;;;2337:6;:17;;-1:-1:-1;;;;;;2337:17:18;-1:-1:-1;;;;;2337:17:18;;;;;;;;;;2136:225::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../Registry.sol\";\nimport \"./KyberNetworkProxyInterface.sol\";\n\n/**\n * A facade for 0xfutures interactions with the Kyber network contracts.\n *\n * Interfacing with KyberNetworkProxy:\n * https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\n */\n\ncontract KyberFacade is Ownable {\n\n    /*\n     * Constants\n     */\n\n    // Use only permissioned reserves\n    bytes constant PERMISSIONED_ONLY_HINT = bytes(\"PERM\");\n\n    // Denotes native ETH in Kyber\n    address constant NATIVE_ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n\n    // Kyber trades require a non 0 maximum destination amount. Since we don't\n    // need to restrict on a maximum set it to a very large amount that won't\n    // be hit\n    uint constant MAX_DEST_AMOUNT = 1e18 * 1e9; // 1 billion DAI\n\n    /*\n     * State\n     */\n\n    Registry public registry;\n    address kyberWalletId;\n\n    constructor(address _registry, address _kyberWalletId) public {\n        setRegistry(_registry);\n        setKyberWalletId(_kyberWalletId);\n    }\n\n    function setRegistry(address _registry) public onlyOwner {\n        registry = Registry(_registry);\n    }\n\n    function setKyberWalletId(address _kyberWalletId) public onlyOwner {\n        kyberWalletId = _kyberWalletId;\n    }\n\n    /**\n     * Trade ETH for DAI with:\n     *  - only permissioned reserves\n     *  - 0xfutures kyber wallet id\n     *  - a maximum 2% slip from the current expected rate\n     *  - an unreachable maximum destination token amount (effectively no max)\n     *\n     * @param _destAddress Receiver of DAI tokens\n     */\n    function ethToDai(address _destAddress)\n        public\n        payable\n        returns (uint destAmount)\n    {\n        address daiToken = address(registry.getDAI());\n        (uint currentExpectedRate,) = registry.getKyberNetworkProxy().getExpectedRate(\n            NATIVE_ETH,\n            daiToken,\n            msg.value\n        );\n        destAmount = registry.getKyberNetworkProxy().tradeWithHint.value(msg.value)(\n            NATIVE_ETH, // src token - ETH\n            msg.value, // ETH amount\n            daiToken, // dest token - DAI\n            _destAddress, // DAI transferred to here\n            MAX_DEST_AMOUNT,\n            currentExpectedRate / 100 * 98, // allow a maximum 2% slip\n            kyberWalletId, // will receive 30% of fees in KNC\n            PERMISSIONED_ONLY_HINT\n        );\n    }\n\n    /**\n     * Get the expected ETH to DAI rate for the next trade\n     * (see getExpectedRate for details).\n     * @param _ethValue An amount of ETH to get the expected rate for.\n     */\n    function daiRate(uint _ethValue)\n        public\n        view\n        returns (uint rate)\n    {\n        (rate,) = registry.getKyberNetworkProxy().getExpectedRate(\n            NATIVE_ETH,\n            address(registry.getDAI()),\n            _ethValue\n        );\n    }\n}\n",
  "sourcePath": "/Users/julien/Desktop/protocol/contracts/kyber/KyberFacade.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-17T22:17:34.177Z",
  "devdoc": {
    "methods": {
      "daiRate(uint256)": {
        "params": {
          "_ethValue": "An amount of ETH to get the expected rate for."
        }
      },
      "ethToDai(address)": {
        "params": {
          "_destAddress": "Receiver of DAI tokens"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "daiRate(uint256)": {
        "notice": "Get the expected ETH to DAI rate for the next trade (see getExpectedRate for details)."
      },
      "ethToDai(address)": {
        "notice": "Trade ETH for DAI with: - only permissioned reserves - 0xfutures kyber wallet id - a maximum 2% slip from the current expected rate - an unreachable maximum destination token amount (effectively no max)"
      }
    },
    "notice": "A facade for 0xfutures interactions with the Kyber network contracts. * Interfacing with KyberNetworkProxy: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/"
  }
}