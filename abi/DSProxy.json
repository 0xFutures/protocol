{
  "contractName": "DSProxy",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "cache",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_cacheAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "name": "response",
          "type": "bytes"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cacheAddr",
          "type": "address"
        }
      ],
      "name": "setCache",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cache\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cacheAddr\",\"type\":\"address\"}],\"name\":\"setCache\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_cacheAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/proxy.sol\":\"DSProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0x2b697f6d67b92929f3cd7fc53587e1e1c385e6f74e47333ff9e6fc3f29c03e52\",\"urls\":[\"bzzr://016671b899643065058f67a5b274b04f876065c081b30ffe364b59b6ffd52d74\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806106848339810180604052602081101561003057600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361008a8161009160201b60201c565b5050610153565b60006100a161014260201b60201c565b6100aa57600080fd5b6001600160a01b03821661011f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b6000546001600160a01b0316331490565b610522806101626000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146101e85780638f32d59b146101fd578063948f507614610226578063f2fde38b1461025957610070565b80631cff79cd1461007557806360c7d295146101a0578063715018a6146101d1575b600080fd5b61012b6004803603604081101561008b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100b657600080fd5b8201836020820111156100c857600080fd5b803590602001918460018302840111640100000000831117156100ea57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061028c945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101b561034d565b604080516001600160a01b039092168252519081900360200190f35b3480156101dd57600080fd5b506101e661035c565b005b3480156101f457600080fd5b506101b56103b7565b34801561020957600080fd5b506102126103c6565b604080519115158252519081900360200190f35b34801561023257600080fd5b506102126004803603602081101561024957600080fd5b50356001600160a01b03166103d7565b34801561026557600080fd5b506101e66004803603602081101561027c57600080fd5b50356001600160a01b031661046b565b60606102966103c6565b61029f57600080fd5b6001600160a01b0383166102fd5760408051600160e51b62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080835160208501866113885a03f43d6040519250601f19601f6020830101168301604052808352806000602085013e81156001811461033d57610344565b8160208501fd5b50505092915050565b6001546001600160a01b031681565b6103646103c6565b61036d57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60006103e16103c6565b6103ea57600080fd5b6001600160a01b0382166104485760408051600160e51b62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b6104736103c6565b61047c57600080fd5b61048581610488565b50565b6001600160a01b03811661049b57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a7230582011323f70d2ea179c34115bbccf1cb79bd94a5bd9b4250c57b37eb875848e79680029",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146101e85780638f32d59b146101fd578063948f507614610226578063f2fde38b1461025957610070565b80631cff79cd1461007557806360c7d295146101a0578063715018a6146101d1575b600080fd5b61012b6004803603604081101561008b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100b657600080fd5b8201836020820111156100c857600080fd5b803590602001918460018302840111640100000000831117156100ea57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061028c945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101b561034d565b604080516001600160a01b039092168252519081900360200190f35b3480156101dd57600080fd5b506101e661035c565b005b3480156101f457600080fd5b506101b56103b7565b34801561020957600080fd5b506102126103c6565b604080519115158252519081900360200190f35b34801561023257600080fd5b506102126004803603602081101561024957600080fd5b50356001600160a01b03166103d7565b34801561026557600080fd5b506101e66004803603602081101561027c57600080fd5b50356001600160a01b031661046b565b60606102966103c6565b61029f57600080fd5b6001600160a01b0383166102fd5760408051600160e51b62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080835160208501866113885a03f43d6040519250601f19601f6020830101168301604052808352806000602085013e81156001811461033d57610344565b8160208501fd5b50505092915050565b6001546001600160a01b031681565b6103646103c6565b61036d57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60006103e16103c6565b6103ea57600080fd5b6001600160a01b0382166104485760408051600160e51b62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b6104736103c6565b61047c57600080fd5b61048581610488565b50565b6001600160a01b03811661049b57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a7230582011323f70d2ea179c34115bbccf1cb79bd94a5bd9b4250c57b37eb875848e79680029",
  "sourceMap": "1563:1406:9:-;;;1663:78;8:9:-1;5:2;;;30:1;27;20:12;5:2;1663:78:9;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1663:78:9;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:17;;;;515;549:40;;515:6;;549:40;1713:20:9;1722:10;1713:8;;;:20;;:::i;:::-;;1663:78;1563:1406;;2692:274;2783:4;863:9:17;:7;;;:9;;:::i;:::-;855:18;;;;;;-1:-1:-1;;;;;2813:24:9;;2805:68;;;;;-1:-1:-1;;;;;2805:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2884:5:9;:32;;-1:-1:-1;;;;;;2884:32:9;-1:-1:-1;;;;;2884:32:9;;;;;;;;;;:5;2692:274::o;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;1563:1406:9:-;;;;;;;",
  "deployedSourceMap": "1563:1406:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1749:914;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1749:914:9;;-1:-1:-1;;;;;1749:914:9;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1749:914:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1749:914:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1749:914:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1749:914:9;;-1:-1:-1;1749:914:9;;-1:-1:-1;;;;;1749:914:9:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1749:914:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1598:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1598:25:9;;;:::i;:::-;;;;-1:-1:-1;;;;;1598:25:9;;;;;;;;;;;;;;1347:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:17;;;:::i;:::-;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:17;;;:::i;979:90::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;2692:274:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2692:274:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2692:274:9;-1:-1:-1;;;;;2692:274:9;;:::i;1655:107:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;1749:914:9:-;1873:21;863:9:17;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;1920:21:9;;1912:66;;;;;-1:-1:-1;;;;;1912:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:1;2205;2197:5;2191:12;2184:4;2177:5;2173:16;2164:7;2157:4;2152:3;2148:14;2135:75;2236:14;2284:4;2278:11;2266:23;;2366:4;2362:9;2355:4;2348;2342;2338:15;2334:26;2330:42;2320:8;2316:57;2310:4;2303:71;2405:4;2395:8;2388:22;2463:4;2460:1;2453:4;2443:8;2439:19;2424:44;2498:9;2491:17;2527:1;2522:123;;;;2484:161;;2522:123;2625:4;2618;2608:8;2604:19;2597:33;2484:161;;2103:553;;1749:914;;;;:::o;1598:25::-;;;-1:-1:-1;;;;;1598:25:9;;:::o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:17;;659:77::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;2692:274:9:-;2783:4;863:9:17;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;2813:24:9;;2805:68;;;;;-1:-1:-1;;;;;2805:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2884:5:9;:32;;-1:-1:-1;;;;;;2884:32:9;-1:-1:-1;;;;;2884:32:9;;;;;;;;;;:5;2692:274::o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o",
  "source": "// proxy.sol - execute actions atomically through the proxy's identity\r\n\r\n// Copyright (C) 2017  DappHub, LLC\r\n\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity >=0.5.0 <0.6.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\n\r\n// DSProxy - 0xFutures modifications:\r\n\r\n// - removed all payable keywords and the payable fallback as our proxies\r\n//   don't take or send ETH at all. Additionally solidity would enforce address\r\n//   instances in the CFD to be payable which we don't want.\r\n// - removed note.sol and uses\r\n// - removed auth.sol and replaced with openzeppelin Ownable\r\n// - removed unused code from proxy.sol to reduce gas footprint\r\n\r\n// DSProxy - original from dappsys:\r\n\r\n// Allows code execution using a persistant identity This can be very\r\n// useful to execute a sequence of atomic actions. Since the owner of\r\n// the proxy can be changed, this allows for dynamic ownership models\r\n// i.e. a multisig\r\ncontract DSProxy is Ownable {\r\n    DSProxyCache public cache;  // global cache for contracts\r\n\r\n    constructor(address _cacheAddr) public {\r\n        setCache(_cacheAddr);\r\n    }\r\n\r\n    function execute(address _target, bytes memory _data)\r\n        public\r\n        onlyOwner\r\n        payable\r\n        returns (bytes memory response)\r\n    {\r\n        require(_target != address(0), \"ds-proxy-target-address-required\");\r\n\r\n        // call contract in current context\r\n        /* solium-disable security/no-inline-assembly */\r\n        assembly {\r\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\r\n            let size := returndatasize\r\n\r\n            response := mload(0x40)\r\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\r\n            mstore(response, size)\r\n            returndatacopy(add(response, 0x20), 0, size)\r\n\r\n            switch iszero(succeeded)\r\n            case 1 {\r\n                // throw if delegatecall failed\r\n                revert(add(response, 0x20), size)\r\n            }\r\n        }\r\n    }\r\n\r\n    //set new cache\r\n    function setCache(address _cacheAddr)\r\n        public\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(_cacheAddr != address(0), \"ds-proxy-cache-address-required\");\r\n        cache = DSProxyCache(_cacheAddr);  // overwrite cache\r\n        return true;\r\n    }\r\n}\r\n\r\n// DSProxyFactory\r\n// This factory deploys new proxy instances through build()\r\n// Deployed proxy addresses are logged\r\ncontract DSProxyFactory {\r\n    event Created(address indexed sender, address indexed owner, address proxy, address cache);\r\n    DSProxyCache public cache;\r\n\r\n    constructor() public {\r\n        cache = new DSProxyCache();\r\n    }\r\n\r\n    // deploys a new proxy instance\r\n    // sets custom owner of proxy\r\n    function build(address owner) public returns (address proxy) {\r\n        proxy = address(new DSProxy(address(cache)));\r\n        Ownable(proxy).transferOwnership(owner);\r\n        emit Created(msg.sender, owner, address(proxy), address(cache));\r\n    }\r\n}\r\n\r\n// DSProxyCache\r\n// This global cache stores addresses of contracts previously deployed\r\n// by a proxy. This saves gas from repeat deployment of the same\r\n// contracts and eliminates blockchain bloat.\r\n\r\n// By default, all proxies deployed from the same factory store\r\n// contracts in the same cache. The cache a proxy instance uses can be\r\n// changed.  The cache uses the sha3 hash of a contract's bytecode to\r\n// lookup the address\r\ncontract DSProxyCache {\r\n    mapping(bytes32 => address) cache;\r\n\r\n    function read(bytes memory _code) public view returns (address) {\r\n        bytes32 hash = keccak256(_code);\r\n        return cache[hash];\r\n    }\r\n\r\n    function write(bytes memory _code) public returns (address target) {\r\n        /* solium-disable security/no-inline-assembly */\r\n        assembly {\r\n            target := create(0, add(_code, 0x20), mload(_code))\r\n            switch iszero(extcodesize(target))\r\n            case 1 {\r\n                // throw if contract failed to deploy\r\n                revert(0, 0)\r\n            }\r\n        }\r\n        bytes32 hash = keccak256(_code);\r\n        cache[hash] = target;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\dappsys\\proxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2020-01-04T15:21:55.724Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}