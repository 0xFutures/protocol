{
  "contractName": "DSProxy",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "cache",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_cacheAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "name": "response",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cacheAddr",
          "type": "address"
        }
      ],
      "name": "setCache",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"response\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cache\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cacheAddr\",\"type\":\"address\"}],\"name\":\"setCache\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_cacheAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/dappsys/proxy.sol\":\"DSProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0xefd635b916e651d7387fccc160bee8ccf5b762be676f085763cd5d6b0a2b1f43\",\"urls\":[\"bzzr://86c89f916c5d48d60e405a2a1031628e4ac700e40e092b4a4259258a08823323\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806106438339810180604052602081101561003057600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361008a8161009160201b60201c565b5050610153565b60006100a161014260201b60201c565b6100aa57600080fd5b6001600160a01b03821661011f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b6000546001600160a01b0316331490565b6104e1806101626000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146101db5780638f32d59b146101e3578063948f5076146101ff578063f2fde38b146102255761007d565b80631cff79cd1461008257806360c7d295146101ad578063715018a6146101d1575b600080fd5b6101386004803603604081101561009857600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c357600080fd5b8201836020820111156100d557600080fd5b803590602001918460018302840111640100000000831117156100f757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061024b945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017257818101518382015260200161015a565b50505050905090810190601f16801561019f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b561030c565b604080516001600160a01b039092168252519081900360200190f35b6101d961031b565b005b6101b5610376565b6101eb610385565b604080519115158252519081900360200190f35b6101eb6004803603602081101561021557600080fd5b50356001600160a01b0316610396565b6101d96004803603602081101561023b57600080fd5b50356001600160a01b031661042a565b6060610255610385565b61025e57600080fd5b6001600160a01b0383166102bc5760408051600160e51b62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080835160208501866113885a03f43d6040519250601f19601f6020830101168301604052808352806000602085013e8115600181146102fc57610303565b8160208501fd5b50505092915050565b6001546001600160a01b031681565b610323610385565b61032c57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60006103a0610385565b6103a957600080fd5b6001600160a01b0382166104075760408051600160e51b62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b610432610385565b61043b57600080fd5b61044481610447565b50565b6001600160a01b03811661045a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a723058206b5b5708574398d56a08739054419087948e0de7f499d43cb6a0a2fe59a9f05c0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146101db5780638f32d59b146101e3578063948f5076146101ff578063f2fde38b146102255761007d565b80631cff79cd1461008257806360c7d295146101ad578063715018a6146101d1575b600080fd5b6101386004803603604081101561009857600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100c357600080fd5b8201836020820111156100d557600080fd5b803590602001918460018302840111640100000000831117156100f757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061024b945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017257818101518382015260200161015a565b50505050905090810190601f16801561019f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b561030c565b604080516001600160a01b039092168252519081900360200190f35b6101d961031b565b005b6101b5610376565b6101eb610385565b604080519115158252519081900360200190f35b6101eb6004803603602081101561021557600080fd5b50356001600160a01b0316610396565b6101d96004803603602081101561023b57600080fd5b50356001600160a01b031661042a565b6060610255610385565b61025e57600080fd5b6001600160a01b0383166102bc5760408051600160e51b62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080835160208501866113885a03f43d6040519250601f19601f6020830101168301604052808352806000602085013e8115600181146102fc57610303565b8160208501fd5b50505092915050565b6001546001600160a01b031681565b610323610385565b61032c57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60006103a0610385565b6103a957600080fd5b6001600160a01b0382166104075760408051600160e51b62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b610432610385565b61043b57600080fd5b61044481610447565b50565b6001600160a01b03811661045a57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea165627a7a723058206b5b5708574398d56a08739054419087948e0de7f499d43cb6a0a2fe59a9f05c0029",
  "sourceMap": "1527:1346:9:-;;;1624:76;8:9:-1;5:2;;;30:1;27;20:12;5:2;1624:76:9;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1624:76:9;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:17;;;;515;549:40;;515:6;;549:40;1673:20:9;1682:10;1673:8;;;:20;;:::i;:::-;;1624:76;1527:1346;;2605:266;2693:4;863:9:17;:7;;;:9;;:::i;:::-;855:18;;;;;;-1:-1:-1;;;;;2721:24:9;;2713:68;;;;;-1:-1:-1;;;;;2713:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2791:5:9;:32;;-1:-1:-1;;;;;;2791:32:9;-1:-1:-1;;;;;2791:32:9;;;;;;;;;;:5;2605:266::o;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;1527:1346:9:-;;;;;;;",
  "deployedSourceMap": "1527:1346:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1527:1346:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:873;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:873:9;;-1:-1:-1;;;;;1706:873:9;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1706:873:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1706:873:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1706:873:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1706:873:9;;-1:-1:-1;1706:873:9;;-1:-1:-1;;;;;1706:873:9:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1706:873:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:25;;;:::i;:::-;;;;-1:-1:-1;;;;;1561:25:9;;;;;;;;;;;;;;1347:137:17;;;:::i;:::-;;659:77;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;2605:266:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2605:266:9;-1:-1:-1;;;;;2605:266:9;;:::i;1655:107:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;1706:873:9:-;1810:21;863:9:17;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;1855:21:9;;1847:66;;;;;-1:-1:-1;;;;;1847:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2138:1;2135;2127:5;2121:12;2114:4;2107:5;2103:16;2094:7;2087:4;2082:3;2078:14;2065:75;2165:14;2211:4;2205:11;2193:23;;2292:4;2288:9;2281:4;2274;2268;2264:15;2260:26;2256:42;2246:8;2242:57;2236:4;2229:71;2330:4;2320:8;2313:22;2387:4;2384:1;2377:4;2367:8;2363:19;2348:44;2420:9;2413:17;2448:1;2443:120;;;;2406:157;;2443:120;2544:4;2537;2527:8;2523:19;2516:33;2406:157;;2034:539;;1706:873;;;;:::o;1561:25::-;;;-1:-1:-1;;;;;1561:25:9;;:::o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:17;;659:77::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;2605:266:9:-;2693:4;863:9:17;:7;:9::i;:::-;855:18;;;;;;-1:-1:-1;;;;;2721:24:9;;2713:68;;;;;-1:-1:-1;;;;;2713:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2791:5:9;:32;;-1:-1:-1;;;;;;2791:32:9;-1:-1:-1;;;;;2791:32:9;;;;;;;;;;:5;2605:266::o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o",
  "source": "// proxy.sol - execute actions atomically through the proxy's identity\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.5.0 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n// DSProxy - 0xFutures modifications:\n\n// - removed all payable keywords and the payable fallback as our proxies\n//   don't take or send ETH at all. Additionally solidity would enforce address\n//   instances in the CFD to be payable which we don't want.\n// - removed note.sol and uses\n// - removed auth.sol and replaced with openzeppelin Ownable\n// - removed unused code from proxy.sol to reduce gas footprint\n\n// DSProxy - original from dappsys:\n\n// Allows code execution using a persistant identity This can be very\n// useful to execute a sequence of atomic actions. Since the owner of\n// the proxy can be changed, this allows for dynamic ownership models\n// i.e. a multisig\ncontract DSProxy is Ownable {\n    DSProxyCache public cache;  // global cache for contracts\n\n    constructor(address _cacheAddr) public {\n        setCache(_cacheAddr);\n    }\n\n    function execute(address _target, bytes memory _data)\n        public\n        onlyOwner\n        returns (bytes memory response)\n    {\n        require(_target != address(0), \"ds-proxy-target-address-required\");\n\n        // call contract in current context\n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\n            let size := returndatasize\n\n            response := mload(0x40)\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n            mstore(response, size)\n            returndatacopy(add(response, 0x20), 0, size)\n\n            switch iszero(succeeded)\n            case 1 {\n                // throw if delegatecall failed\n                revert(add(response, 0x20), size)\n            }\n        }\n    }\n\n    //set new cache\n    function setCache(address _cacheAddr)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        require(_cacheAddr != address(0), \"ds-proxy-cache-address-required\");\n        cache = DSProxyCache(_cacheAddr);  // overwrite cache\n        return true;\n    }\n}\n\n// DSProxyFactory\n// This factory deploys new proxy instances through build()\n// Deployed proxy addresses are logged\ncontract DSProxyFactory {\n    event Created(address indexed sender, address indexed owner, address proxy, address cache);\n    DSProxyCache public cache;\n\n    constructor() public {\n        cache = new DSProxyCache();\n    }\n\n    // deploys a new proxy instance\n    // sets custom owner of proxy\n    function build(address owner) public returns (address proxy) {\n        proxy = address(new DSProxy(address(cache)));\n        Ownable(proxy).transferOwnership(owner);\n        emit Created(msg.sender, owner, address(proxy), address(cache));\n    }\n}\n\n// DSProxyCache\n// This global cache stores addresses of contracts previously deployed\n// by a proxy. This saves gas from repeat deployment of the same\n// contracts and eliminates blockchain bloat.\n\n// By default, all proxies deployed from the same factory store\n// contracts in the same cache. The cache a proxy instance uses can be\n// changed.  The cache uses the sha3 hash of a contract's bytecode to\n// lookup the address\ncontract DSProxyCache {\n    mapping(bytes32 => address) cache;\n\n    function read(bytes memory _code) public view returns (address) {\n        bytes32 hash = keccak256(_code);\n        return cache[hash];\n    }\n\n    function write(bytes memory _code) public returns (address target) {\n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            target := create(0, add(_code, 0x20), mload(_code))\n            switch iszero(extcodesize(target))\n            case 1 {\n                // throw if contract failed to deploy\n                revert(0, 0)\n            }\n        }\n        bytes32 hash = keccak256(_code);\n        cache[hash] = target;\n    }\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/dappsys/proxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-06-18T20:09:07.790Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}