{
  "contractName": "EthUsdMaker",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "read",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_price",
          "type": "bytes32"
        }
      ],
      "name": "put",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060d08061001f6000396000f3fe60806040526004361060485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166357de26a48114604d578063e3a8f7c6146071575b600080fd5b348015605857600080fd5b50605f6099565b60408051918252519081900360200190f35b348015607c57600080fd5b50609760048036036020811015609157600080fd5b5035609f565b005b60005490565b60005556fea165627a7a72305820e6904696d314eebaeaaeb3229f042a22e448eb6f76dd06677e8a8db9073b1efd0029",
  "deployedBytecode": "0x60806040526004361060485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166357de26a48114604d578063e3a8f7c6146071575b600080fd5b348015605857600080fd5b50605f6099565b60408051918252519081900360200190f35b348015607c57600080fd5b50609760048036036020811015609157600080fd5b5035609f565b005b60005490565b60005556fea165627a7a72305820e6904696d314eebaeaaeb3229f042a22e448eb6f76dd06677e8a8db9073b1efd0029",
  "sourceMap": "221:204:17:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:204:17;;;;;;;",
  "deployedSourceMap": "221:204:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:75:17;;;;;;;;;;;;;;;;;;;;349:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:69:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;349:69:17;;;;;268:75;305:7;331:5;268:75;:::o;349:69::-;397:5;:14;349:69::o",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * Mock version of the MakerDAO medianizer price feeds contract for getting the\n * ETHUSD price in test and development.\n *\n * See also interface contracts/feeds/EthUsdMakerInterface.sol.\n */\ncontract EthUsdMaker {\n    bytes32 price;\n\n    function read() public view returns (bytes32) {\n        return price;\n    }\n\n    function put(bytes32 _price) external {\n        price = _price;\n    }\n    \n}\n",
  "sourcePath": "/home/hatch/projects/0xfutures/protocol/contracts/mock/EthUsdMaker.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-22T01:42:08.704Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Mock version of the MakerDAO medianizer price feeds contract for getting the ETHUSD price in test and development. * See also interface contracts/feeds/EthUsdMakerInterface.sol."
  }
}