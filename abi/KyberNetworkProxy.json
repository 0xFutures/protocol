{
  "contractName": "KyberNetworkProxy",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "rates",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_daiToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getExpectedRate",
      "outputs": [
        {
          "name": "expectedRate",
          "type": "uint256"
        },
        {
          "name": "slippageRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "src",
          "type": "address"
        },
        {
          "name": "srcAmount",
          "type": "uint256"
        },
        {
          "name": "dest",
          "type": "address"
        },
        {
          "name": "destAddress",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "tradeWithHint",
      "outputs": [
        {
          "name": "destAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "put",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"srcAmount\",\"type\":\"uint256\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"destAddress\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tradeWithHint\",\"outputs\":[{\"name\":\"destAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"put\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"dest\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getExpectedRate\",\"outputs\":[{\"name\":\"expectedRate\",\"type\":\"uint256\"},{\"name\":\"slippageRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"rates\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_daiToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Mock version of the KyberNetworkProxy contract for getting the\\r market rates in test and development.\\r see https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\\r\"}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/mock/KyberNetworkProxy.sol\":\"KyberNetworkProxy\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/mock/KyberNetworkProxy.sol\":{\"keccak256\":\"0x5880e6f460b3b75afb231177367c13e46cc47864f024beb5b06d306cbf64bb85\",\"urls\":[\"bzzr://715e70a26db93ceeeb17ab039ce2b097c9c64ef5ac50bc45f8c6a44b0ac09cfa\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806103df8339810180604052602081101561003057600080fd5b5051600080546001600160a01b039092166001600160a01b031990921691909117905561037d806100626000396000f3fe60806040526004361061004a5760003560e01c806329589f611461004f5780637f8d53c614610143578063809a9e551461017e578063a8734f0b146101da578063be22f5461461020d575b600080fd5b610131600480360361010081101561006657600080fd5b6001600160a01b0382358116926020810135926040820135831692606083013581169260808101359260a08201359260c0830135169190810190610100810160e08201356401000000008111156100bc57600080fd5b8201836020820111156100ce57600080fd5b803590602001918460018302840111640100000000831117156100f057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061023e945050505050565b60408051918252519081900360200190f35b34801561014f57600080fd5b5061017c6004803603604081101561016657600080fd5b506001600160a01b0381351690602001356102f5565b005b34801561018a57600080fd5b506101c1600480360360608110156101a157600080fd5b506001600160a01b03813581169160208101359091169060400135610311565b6040805192835260208301919091528051918290030190f35b3480156101e657600080fd5b50610131600480360360208110156101fd57600080fd5b50356001600160a01b0316610330565b34801561021957600080fd5b50610222610342565b604080516001600160a01b039092168252519081900360200190f35b60008061024c8a898b610311565b509050670de0b6b3a76400008982026000805460408051600160e01b63a9059cbb0281526001600160a01b038d811660048301529590940460248501819052905190965093169263a9059cbb926044808201936020939283900390910190829087803b1580156102bb57600080fd5b505af11580156102cf573d6000803e3d6000fd5b505050506040513d60208110156102e557600080fd5b50919a9950505050505050505050565b6001600160a01b03909116600090815260016020526040902055565b506001600160a01b031660009081526001602052604090205491829150565b60016020526000908152604090205481565b6000546001600160a01b03168156fea165627a7a723058207897fcd8775edea579b9555b3bc1e0369633ed1e6d2abf11c36d5246c30b723b0029",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806329589f611461004f5780637f8d53c614610143578063809a9e551461017e578063a8734f0b146101da578063be22f5461461020d575b600080fd5b610131600480360361010081101561006657600080fd5b6001600160a01b0382358116926020810135926040820135831692606083013581169260808101359260a08201359260c0830135169190810190610100810160e08201356401000000008111156100bc57600080fd5b8201836020820111156100ce57600080fd5b803590602001918460018302840111640100000000831117156100f057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061023e945050505050565b60408051918252519081900360200190f35b34801561014f57600080fd5b5061017c6004803603604081101561016657600080fd5b506001600160a01b0381351690602001356102f5565b005b34801561018a57600080fd5b506101c1600480360360608110156101a157600080fd5b506001600160a01b03813581169160208101359091169060400135610311565b6040805192835260208301919091528051918290030190f35b3480156101e657600080fd5b50610131600480360360208110156101fd57600080fd5b50356001600160a01b0316610330565b34801561021957600080fd5b50610222610342565b604080516001600160a01b039092168252519081900360200190f35b60008061024c8a898b610311565b509050670de0b6b3a76400008982026000805460408051600160e01b63a9059cbb0281526001600160a01b038d811660048301529590940460248501819052905190965093169263a9059cbb926044808201936020939283900390910190829087803b1580156102bb57600080fd5b505af11580156102cf573d6000803e3d6000fd5b505050506040513d60208110156102e557600080fd5b50919a9950505050505050505050565b6001600160a01b03909116600090815260016020526040902055565b506001600160a01b031660009081526001602052604090205491829150565b60016020526000908152604090205481565b6000546001600160a01b03168156fea165627a7a723058207897fcd8775edea579b9555b3bc1e0369633ed1e6d2abf11c36d5246c30b723b0029",
  "sourceMap": "287:1031:15:-;;;397:84;8:9:-1;5:2;;;30:1;27;20:12;5:2;397:84:15;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;397:84:15;446:8;:27;;-1:-1:-1;;;;;446:27:15;;;-1:-1:-1;;;;;;446:27:15;;;;;;;;;287:1031;;;;;;",
  "deployedSourceMap": "287:1031:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:444;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;757:444:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;757:444:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;757:444:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;757:444:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;757:444:15;;-1:-1:-1;757:444:15;;-1:-1:-1;;;;;757:444:15:i;:::-;;;;;;;;;;;;;;;;1209:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1209:104:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1209:104:15;;;;;;;;:::i;:::-;;489:260;;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:260:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;489:260:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;351:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:37:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;351:37:15;-1:-1:-1;;;;;351:37:15;;:::i;321:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;321:21:15;;;:::i;:::-;;;;-1:-1:-1;;;;;321:21:15;;;;;;;;;;;;;;757:444;1008:15;1042:9;1056:37;1072:3;1077:4;1083:9;1056:15;:37::i;:::-;-1:-1:-1;1041:52:15;-1:-1:-1;1136:4:15;1117:16;;;1151:8;;;:42;;;-1:-1:-1;;;;;1151:42:15;;-1:-1:-1;;;;;1151:42:15;;;;;;;1117:23;;;;1151:42;;;;;;;;1117:23;;-1:-1:-1;1151:8:15;;;:17;;:42;;;;;;;;;;;;;;;;;:8;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;1151:42:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1151:42:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;757:444:15;;;-1:-1:-1;;;;;;;;;;757:444:15:o;1209:104::-;-1:-1:-1;;;;;1277:20:15;;;;;;;:5;:20;;;;;:28;1209:104::o;489:260::-;-1:-1:-1;;;;;;691:20:15;625:17;691:20;;;:5;:20;;;;;;;;;-1:-1:-1;489:260:15:o;351:37::-;;;;;;;;;;;;;:::o;321:21::-;;;-1:-1:-1;;;;;321:21:15;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/**\r\n * Mock version of the KyberNetworkProxy contract for getting the\r\n * market rates in test and development.\r\n * see https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\r\n */\r\n\r\ncontract KyberNetworkProxy {\r\n    ERC20 public daiToken;\r\n\r\n    mapping(address => uint) public rates;\r\n\r\n    constructor(address _daiToken) public {\r\n        daiToken = ERC20(_daiToken);\r\n    }\r\n\r\n    function getExpectedRate(\r\n        address,\r\n        address dest,\r\n        uint\r\n    )\r\n        public\r\n        view\r\n        returns (uint expectedRate, uint slippageRate)\r\n    {\r\n        uint rate = rates[address(dest)];\r\n        return (rate, rate);\r\n    }\r\n\r\n    function tradeWithHint(\r\n        address src,\r\n        uint srcAmount,\r\n        address dest,\r\n        address destAddress,\r\n        uint,\r\n        uint,\r\n        address,\r\n        bytes memory\r\n    )\r\n        public\r\n        payable\r\n        returns(uint destAmount)\r\n    {\r\n        (uint rate,) = getExpectedRate(src, dest, srcAmount);\r\n        destAmount = rate * srcAmount / 1e18;\r\n        daiToken.transfer(destAddress, destAmount);\r\n    }\r\n\r\n    function put(address _tokenAddress, uint _rate) external {\r\n        rates[_tokenAddress] = _rate;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/mock/KyberNetworkProxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-12-29T13:29:19.645Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {},
    "notice": "Mock version of the KyberNetworkProxy contract for getting the\r market rates in test and development.\r see https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\r"
  }
}