{
  "contractName": "DSProxyFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "cache",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cache",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "build",
      "outputs": [
        {
          "name": "proxy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"cache\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"build\",\"outputs\":[{\"name\":\"proxy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"cache\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/julien/Desktop/protocol/contracts/dappsys/proxy.sol\":\"DSProxyFactory\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/julien/Desktop/protocol/contracts/dappsys/proxy.sol\":{\"keccak256\":\"0xe002251a6b856a3a65e81102bb10ad1ad2e62a270a07a021630afc6093096079\",\"urls\":[\"bzzr://fea23195db1c273eafecfb23d929ddaa3f499880c4d7b1b31ae10163300e23f0\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xecd8ab29d9a5771c3964d0cd1788c4a5098a0081b20fb275da850a22b1c59806\",\"urls\":[\"bzzr://4950def18270142a78d503ef6b7b13bdb053f2f050cee50c883cd7cab2bb02d7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905561006c565b61025c80610ae083390190565b610a658061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806360c7d2951461003b578063f3701da21461005f575b600080fd5b610043610085565b604080516001600160a01b039092168252519081900360200190f35b6100436004803603602081101561007557600080fd5b50356001600160a01b0316610094565b6000546001600160a01b031681565b600080546040516001600160a01b03909116906100b0906101a4565b6001600160a01b03909116815260405190819003602001906000f0801580156100dd573d6000803e3d6000fd5b509050806001600160a01b031663f2fde38b836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561013857600080fd5b505af115801561014c573d6000803e3d6000fd5b5050600054604080516001600160a01b0386811682529283166020820152815192871694503393507f259b30ca39885c6d801a0b5dbc988640f3c25e2f37531fe138c5c5af8955d41b929081900390910190a3919050565b610888806101b28339019056fe608060405234801561001057600080fd5b506040516020806108888339810180604052602081101561003057600080fd5b505161004161009f602090811b901c565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610098816100a360201b60201c565b50506101e1565b3390565b60006100b36101b660201b60201c565b61011e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03821661019357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b600080546001600160a01b03166101d261009f602090811b901c565b6001600160a01b031614905090565b610698806101f06000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146101e85780638f32d59b146101fd578063948f507614610226578063f2fde38b1461025957610070565b80631cff79cd1461007557806360c7d295146101a0578063715018a6146101d1575b600080fd5b61012b6004803603604081101561008b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100b657600080fd5b8201836020820111156100c857600080fd5b803590602001918460018302840111640100000000831117156100ea57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061028c945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101b5610386565b604080516001600160a01b039092168252519081900360200190f35b3480156101dd57600080fd5b506101e6610395565b005b3480156101f457600080fd5b506101b5610429565b34801561020957600080fd5b50610212610438565b604080519115158252519081900360200190f35b34801561023257600080fd5b506102126004803603602081101561024957600080fd5b50356001600160a01b031661045c565b34801561026557600080fd5b506101e66004803603602081101561027c57600080fd5b50356001600160a01b0316610529565b6060610296610438565b6102d85760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b6001600160a01b0383166103365760408051600160e51b62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080835160208501866113885a03f43d6040519250601f19601f6020830101168301604052808352806000602085013e8115600181146103765761037d565b8160208501fd5b50505092915050565b6001546001600160a01b031681565b61039d610438565b6103df5760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b031661044d61057f565b6001600160a01b031614905090565b6000610466610438565b6104a85760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b6001600160a01b0382166105065760408051600160e51b62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b610531610438565b6105735760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b61057c81610583565b50565b3390565b6001600160a01b0381166105cb57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806106276026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a723058205965e057255a3bb13a2597f8ef0b7523ba8746fc76859466415a42cc56bf10d40029a165627a7a7230582017394d7025db11e283445ddf9b153136cf8b42331dbe723d56cc700e8b71e80b0029608060405234801561001057600080fd5b5061023c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637ed0c3b21461003b5780638bf4515c146100fd575b600080fd5b6100e16004803603602081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460018302840111640100000000831117156100a057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101a3945050505050565b604080516001600160a01b039092168252519081900360200190f35b6100e16004803603602081101561011357600080fd5b81019060208101813564010000000081111561012e57600080fd5b82018360208201111561014057600080fd5b8035906020019184600183028401116401000000008311171561016257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101ee945050505050565b60008151602083016000f09050803b156001811461003657508151602092830120600090815291829052604090912080546001600160a01b0319166001600160a01b03831617905590565b805160209182012060009081529081905260409020546001600160a01b03169056fea165627a7a72305820678bc466f36d9c593323b38476c9354f56d432cc4de609a11ba94b1b5617f5190029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806360c7d2951461003b578063f3701da21461005f575b600080fd5b610043610085565b604080516001600160a01b039092168252519081900360200190f35b6100436004803603602081101561007557600080fd5b50356001600160a01b0316610094565b6000546001600160a01b031681565b600080546040516001600160a01b03909116906100b0906101a4565b6001600160a01b03909116815260405190819003602001906000f0801580156100dd573d6000803e3d6000fd5b509050806001600160a01b031663f2fde38b836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b15801561013857600080fd5b505af115801561014c573d6000803e3d6000fd5b5050600054604080516001600160a01b0386811682529283166020820152815192871694503393507f259b30ca39885c6d801a0b5dbc988640f3c25e2f37531fe138c5c5af8955d41b929081900390910190a3919050565b610888806101b28339019056fe608060405234801561001057600080fd5b506040516020806108888339810180604052602081101561003057600080fd5b505161004161009f602090811b901c565b600080546001600160a01b0319166001600160a01b03928316178082556040519216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610098816100a360201b60201c565b50506101e1565b3390565b60006100b36101b660201b60201c565b61011e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03821661019357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b600080546001600160a01b03166101d261009f602090811b901c565b6001600160a01b031614905090565b610698806101f06000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146101e85780638f32d59b146101fd578063948f507614610226578063f2fde38b1461025957610070565b80631cff79cd1461007557806360c7d295146101a0578063715018a6146101d1575b600080fd5b61012b6004803603604081101561008b57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100b657600080fd5b8201836020820111156100c857600080fd5b803590602001918460018302840111640100000000831117156100ea57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061028c945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016557818101518382015260200161014d565b50505050905090810190601f1680156101925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ac57600080fd5b506101b5610386565b604080516001600160a01b039092168252519081900360200190f35b3480156101dd57600080fd5b506101e6610395565b005b3480156101f457600080fd5b506101b5610429565b34801561020957600080fd5b50610212610438565b604080519115158252519081900360200190f35b34801561023257600080fd5b506102126004803603602081101561024957600080fd5b50356001600160a01b031661045c565b34801561026557600080fd5b506101e66004803603602081101561027c57600080fd5b50356001600160a01b0316610529565b6060610296610438565b6102d85760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b6001600160a01b0383166103365760408051600160e51b62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080835160208501866113885a03f43d6040519250601f19601f6020830101168301604052808352806000602085013e8115600181146103765761037d565b8160208501fd5b50505092915050565b6001546001600160a01b031681565b61039d610438565b6103df5760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b031661044d61057f565b6001600160a01b031614905090565b6000610466610438565b6104a85760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b6001600160a01b0382166105065760408051600160e51b62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b610531610438565b6105735760408051600160e51b62461bcd028152602060048201819052602482015260008051602061064d833981519152604482015290519081900360640190fd5b61057c81610583565b50565b3390565b6001600160a01b0381166105cb57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806106276026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a723058205965e057255a3bb13a2597f8ef0b7523ba8746fc76859466415a42cc56bf10d40029a165627a7a7230582017394d7025db11e283445ddf9b153136cf8b42331dbe723d56cc700e8b71e80b0029",
  "sourceMap": "3008:544:9:-;;;3166:64;8:9:-1;5:2;;;30:1;27;20:12;5:2;3166:64:9;3205:18;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3197:5:9;:26;;-1:-1:-1;;;;;;3197:26:9;-1:-1:-1;;;;;3197:26:9;;;;;;;;;;3008:544;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "3008:544:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3008:544:9;;;;;;;;;;;;;;;;;;;;;;;;3134:25;;;:::i;:::-;;;;-1:-1:-1;;;;;3134:25:9;;;;;;;;;;;;;;3306:244;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3306:244:9;-1:-1:-1;;;;;3306:244:9;;:::i;3134:25::-;;;-1:-1:-1;;;;;3134:25:9;;:::o;3306:244::-;3352:13;3413:5;;3393:27;;-1:-1:-1;;;;;3413:5:9;;;;3393:27;;;:::i;:::-;-1:-1:-1;;;;;3393:27:9;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3393:27:9;3377:44;;3439:5;-1:-1:-1;;;;;3431:32:9;;3464:5;3431:39;;;;;;;;;;;;;-1:-1:-1;;;;;3431:39:9;-1:-1:-1;;;;;3431:39:9;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3431:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3536:5:9;;3485:58;;;-1:-1:-1;;;;;3485:58:9;;;;;3536:5;;;3485:58;;;;;;;;;;-1:-1:-1;3493:10:9;;-1:-1:-1;3485:58:9;;;;;;;;;;;3306:244;;;:::o;3008:544::-;;;;;;;;:::o",
  "source": "// proxy.sol - execute actions atomically through the proxy's identity\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.5.0 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n// DSProxy - 0xFutures modifications:\n\n// - removed all payable keywords and the payable fallback as our proxies\n//   don't take or send ETH at all. Additionally solidity would enforce address\n//   instances in the CFD to be payable which we don't want.\n// - removed note.sol and uses\n// - removed auth.sol and replaced with openzeppelin Ownable\n// - removed unused code from proxy.sol to reduce gas footprint\n\n// DSProxy - original from dappsys:\n\n// Allows code execution using a persistant identity This can be very\n// useful to execute a sequence of atomic actions. Since the owner of\n// the proxy can be changed, this allows for dynamic ownership models\n// i.e. a multisig\ncontract DSProxy is Ownable {\n    DSProxyCache public cache;  // global cache for contracts\n\n    constructor(address _cacheAddr) public {\n        setCache(_cacheAddr);\n    }\n\n    function execute(address _target, bytes memory _data)\n        public\n        onlyOwner\n        payable\n        returns (bytes memory response)\n    {\n        require(_target != address(0), \"ds-proxy-target-address-required\");\n\n        // call contract in current context\n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\n            let size := returndatasize\n\n            response := mload(0x40)\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n            mstore(response, size)\n            returndatacopy(add(response, 0x20), 0, size)\n\n            switch iszero(succeeded)\n            case 1 {\n                // throw if delegatecall failed\n                revert(add(response, 0x20), size)\n            }\n        }\n    }\n\n    //set new cache\n    function setCache(address _cacheAddr)\n        public\n        onlyOwner\n        returns (bool)\n    {\n        require(_cacheAddr != address(0), \"ds-proxy-cache-address-required\");\n        cache = DSProxyCache(_cacheAddr);  // overwrite cache\n        return true;\n    }\n}\n\n// DSProxyFactory\n// This factory deploys new proxy instances through build()\n// Deployed proxy addresses are logged\ncontract DSProxyFactory {\n    event Created(address indexed sender, address indexed owner, address proxy, address cache);\n    DSProxyCache public cache;\n\n    constructor() public {\n        cache = new DSProxyCache();\n    }\n\n    // deploys a new proxy instance\n    // sets custom owner of proxy\n    function build(address owner) public returns (address proxy) {\n        proxy = address(new DSProxy(address(cache)));\n        Ownable(proxy).transferOwnership(owner);\n        emit Created(msg.sender, owner, address(proxy), address(cache));\n    }\n}\n\n// DSProxyCache\n// This global cache stores addresses of contracts previously deployed\n// by a proxy. This saves gas from repeat deployment of the same\n// contracts and eliminates blockchain bloat.\n\n// By default, all proxies deployed from the same factory store\n// contracts in the same cache. The cache a proxy instance uses can be\n// changed.  The cache uses the sha3 hash of a contract's bytecode to\n// lookup the address\ncontract DSProxyCache {\n    mapping(bytes32 => address) cache;\n\n    function read(bytes memory _code) public view returns (address) {\n        bytes32 hash = keccak256(_code);\n        return cache[hash];\n    }\n\n    function write(bytes memory _code) public returns (address target) {\n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            target := create(0, add(_code, 0x20), mload(_code))\n            switch iszero(extcodesize(target))\n            case 1 {\n                // throw if contract failed to deploy\n                revert(0, 0)\n            }\n        }\n        bytes32 hash = keccak256(_code);\n        cache[hash] = target;\n    }\n}\n",
  "sourcePath": "/Users/julien/Desktop/protocol/contracts/dappsys/proxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-17T20:41:14.951Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}