{
  "contractName": "DSProxyFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isProxy",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cache",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cache",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "build",
      "outputs": [
        {
          "name": "proxy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "build",
      "outputs": [
        {
          "name": "proxy",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061001961005b565b604051809103906000f080158015610035573d6000803e3d6000fd5b5060018054600160a060020a031916600160a060020a039290921691909117905561006b565b6040516102bf8061130d83390190565b6112938061007a6000396000f3fe6080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166329710388811461006657806360c7d295146100ad5780638e1a55fc146100de578063f3701da2146100f3575b600080fd5b34801561007257600080fd5b506100996004803603602081101561008957600080fd5b5035600160a060020a0316610126565b604080519115158252519081900360200190f35b3480156100b957600080fd5b506100c261013b565b60408051600160a060020a039092168252519081900360200190f35b3480156100ea57600080fd5b506100c261014a565b3480156100ff57600080fd5b506100c26004803603602081101561011657600080fd5b5035600160a060020a031661015a565b60006020819052908152604090205460ff1681565b600154600160a060020a031681565b60006101553361015a565b905090565b600154600090600160a060020a03166101716102a3565b600160a060020a03909116815260405190819003602001906000f08015801561019e573d6000803e3d6000fd5b5060015460408051600160a060020a038085168252928316602082015281519394509185169233927f259b30ca39885c6d801a0b5dbc988640f3c25e2f37531fe138c5c5af8955d41b92908290030190a380600160a060020a03166313af4035836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b505050600160a060020a0382166000908152602081905260409020805460ff1916600117905550919050565b604051610fb4806102b48339019056fe608060405234801561001057600080fd5b50604051602080610fb48339810180604052602081101561003057600080fd5b505160018054600160a060020a031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a261008281640100000000610089810204565b5050610366565b60006100c1337fffffffff0000000000000000000000000000000000000000000000000000000083351664010000000061024a810204565b151561012e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64732d617574682d756e617574686f72697a6564000000000000000000000000604482015290519081900360640190fd5b604080513480825260208201838152369383018490526004359360243593849286923392600080357fffffffff000000000000000000000000000000000000000000000000000000001693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a4600160a060020a038516151561022157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b60028054600160a060020a038716600160a060020a031990911617905560019350505050919050565b6000600160a060020a03831630141561026557506001610360565b600154600160a060020a038481169116141561028357506001610360565b600054600160a060020a0316151561029d57506000610360565b600054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301523060248301527fffffffff00000000000000000000000000000000000000000000000000000000861660448301529151919092169163b7009613916064808301926020929190829003018186803b15801561033157600080fd5b505afa158015610345573d6000803e3d6000fd5b505050506040513d602081101561035b57600080fd5b505190505b92915050565b610c3f806103756000396000f3fe60806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166313af4035811461008f5780631cff79cd146100c25780631f6a1eb9146101ed57806360c7d295146103ab5780637a9e5e4b146103dc5780638da5cb5b1461040f578063948f507614610424578063bf7e214f1461046b575b005b34801561009b57600080fd5b5061008d600480360360208110156100b257600080fd5b5035600160a060020a0316610480565b610178600480360360408110156100d857600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561010357600080fd5b82018360208201111561011557600080fd5b8035906020019184600183028401116401000000008311171561013757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610537945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61031a6004803603604081101561020357600080fd5b81019060208101813564010000000081111561021e57600080fd5b82018360208201111561023057600080fd5b8035906020019184600183028401116401000000008311171561025257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102a557600080fd5b8201836020820111156102b757600080fd5b803590602001918460018302840111640100000000831117156102d957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106aa945050505050565b6040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561036f578181015183820152602001610357565b50505050905090810190601f16801561039c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103b757600080fd5b506103c06108b9565b60408051600160a060020a039092168252519081900360200190f35b3480156103e857600080fd5b5061008d600480360360208110156103ff57600080fd5b5035600160a060020a03166108c8565b34801561041b57600080fd5b506103c061097b565b34801561043057600080fd5b506104576004803603602081101561044757600080fd5b5035600160a060020a031661098a565b604080519115158252519081900360200190f35b34801561047757600080fd5b506103c0610ae0565b61049633600035600160e060020a031916610aef565b15156104da576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b606061054f33600035600160e060020a031916610aef565b1515610593576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b60408051348082526020820183815236938301849052600435936024359384928692339260008035600160e060020a03191693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a4600160a060020a0386161515610657576040805160e560020a62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080865160208801896113885a03f43d6040519550601f19601f6020830101168601604052808652806000602088013e8115600181146106975761069e565b8160208801fd5b50505050505092915050565b6002546040517f8bf4515c000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600094606094600160a060020a0390911693638bf4515c93899390928392604490910191908501908083838c5b8381101561072a578181015183820152602001610712565b50505050905090810190601f1680156107575780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561077457600080fd5b505afa158015610788573d6000803e3d6000fd5b505050506040513d602081101561079e57600080fd5b50519150600160a060020a03821615156108a6576002546040517f7ed0c3b2000000000000000000000000000000000000000000000000000000008152602060048201818152875160248401528751600160a060020a0390941693637ed0c3b293899383926044909201919085019080838360005b8381101561082b578181015183820152602001610813565b50505050905090810190601f1680156108585780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561087757600080fd5b505af115801561088b573d6000803e3d6000fd5b505050506040513d60208110156108a157600080fd5b505191505b6108b08284610537565b90509250929050565b600254600160a060020a031681565b6108de33600035600160e060020a031916610aef565b1515610922576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b600154600160a060020a031681565b60006109a233600035600160e060020a031916610aef565b15156109e6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b60408051348082526020820183815236938301849052600435936024359384928692339260008035600160e060020a03191693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a4600160a060020a0385161515610aaa576040805160e560020a62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b60028054600160a060020a03871673ffffffffffffffffffffffffffffffffffffffff1990911617905560019350505050919050565b600054600160a060020a031681565b6000600160a060020a038316301415610b0a57506001610bed565b600154600160a060020a0384811691161415610b2857506001610bed565b600054600160a060020a03161515610b4257506000610bed565b600054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152306024830152600160e060020a0319861660448301529151919092169163b7009613916064808301926020929190829003018186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d6020811015610be857600080fd5b505190505b9291505056fe64732d617574682d756e617574686f72697a6564000000000000000000000000a165627a7a72305820757e2991c2f6c0fec634b6b81f5aab0e7361b0356161efda6a0d005be0a435840029a165627a7a72305820ed29fddd48844e94887470c60d83ba42cff4b112b8db4c032b5d551dc01737110029608060405234801561001057600080fd5b5061029f806100206000396000f3fe60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637ed0c3b281146100505780638bf4515c1461012c575b600080fd5b34801561005c57600080fd5b506101036004803603602081101561007357600080fd5b81019060208101813564010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101df945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561013857600080fd5b506101036004803603602081101561014f57600080fd5b81019060208101813564010000000081111561016a57600080fd5b82018360208201111561017c57600080fd5b8035906020019184600183028401116401000000008311171561019e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610244945050505050565b60008151602083016000f09050803b156001811461004b575081516020928301206000908152918290526040909120805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff831617905590565b8051602091820120600090815290819052604090205473ffffffffffffffffffffffffffffffffffffffff169056fea165627a7a72305820df2c4494ee1040e389c8ccd36740e34a9f3a61c66d545fb496bd800067c3c77b0029",
  "deployedBytecode": "0x6080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166329710388811461006657806360c7d295146100ad5780638e1a55fc146100de578063f3701da2146100f3575b600080fd5b34801561007257600080fd5b506100996004803603602081101561008957600080fd5b5035600160a060020a0316610126565b604080519115158252519081900360200190f35b3480156100b957600080fd5b506100c261013b565b60408051600160a060020a039092168252519081900360200190f35b3480156100ea57600080fd5b506100c261014a565b3480156100ff57600080fd5b506100c26004803603602081101561011657600080fd5b5035600160a060020a031661015a565b60006020819052908152604090205460ff1681565b600154600160a060020a031681565b60006101553361015a565b905090565b600154600090600160a060020a03166101716102a3565b600160a060020a03909116815260405190819003602001906000f08015801561019e573d6000803e3d6000fd5b5060015460408051600160a060020a038085168252928316602082015281519394509185169233927f259b30ca39885c6d801a0b5dbc988640f3c25e2f37531fe138c5c5af8955d41b92908290030190a380600160a060020a03166313af4035836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b15801561026357600080fd5b505af1158015610277573d6000803e3d6000fd5b505050600160a060020a0382166000908152602081905260409020805460ff1916600117905550919050565b604051610fb4806102b48339019056fe608060405234801561001057600080fd5b50604051602080610fb48339810180604052602081101561003057600080fd5b505160018054600160a060020a031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a261008281640100000000610089810204565b5050610366565b60006100c1337fffffffff0000000000000000000000000000000000000000000000000000000083351664010000000061024a810204565b151561012e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64732d617574682d756e617574686f72697a6564000000000000000000000000604482015290519081900360640190fd5b604080513480825260208201838152369383018490526004359360243593849286923392600080357fffffffff000000000000000000000000000000000000000000000000000000001693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a4600160a060020a038516151561022157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b60028054600160a060020a038716600160a060020a031990911617905560019350505050919050565b6000600160a060020a03831630141561026557506001610360565b600154600160a060020a038481169116141561028357506001610360565b600054600160a060020a0316151561029d57506000610360565b600054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a0386811660048301523060248301527fffffffff00000000000000000000000000000000000000000000000000000000861660448301529151919092169163b7009613916064808301926020929190829003018186803b15801561033157600080fd5b505afa158015610345573d6000803e3d6000fd5b505050506040513d602081101561035b57600080fd5b505190505b92915050565b610c3f806103756000396000f3fe60806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166313af4035811461008f5780631cff79cd146100c25780631f6a1eb9146101ed57806360c7d295146103ab5780637a9e5e4b146103dc5780638da5cb5b1461040f578063948f507614610424578063bf7e214f1461046b575b005b34801561009b57600080fd5b5061008d600480360360208110156100b257600080fd5b5035600160a060020a0316610480565b610178600480360360408110156100d857600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561010357600080fd5b82018360208201111561011557600080fd5b8035906020019184600183028401116401000000008311171561013757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610537945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61031a6004803603604081101561020357600080fd5b81019060208101813564010000000081111561021e57600080fd5b82018360208201111561023057600080fd5b8035906020019184600183028401116401000000008311171561025257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102a557600080fd5b8201836020820111156102b757600080fd5b803590602001918460018302840111640100000000831117156102d957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106aa945050505050565b6040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561036f578181015183820152602001610357565b50505050905090810190601f16801561039c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103b757600080fd5b506103c06108b9565b60408051600160a060020a039092168252519081900360200190f35b3480156103e857600080fd5b5061008d600480360360208110156103ff57600080fd5b5035600160a060020a03166108c8565b34801561041b57600080fd5b506103c061097b565b34801561043057600080fd5b506104576004803603602081101561044757600080fd5b5035600160a060020a031661098a565b604080519115158252519081900360200190f35b34801561047757600080fd5b506103c0610ae0565b61049633600035600160e060020a031916610aef565b15156104da576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b606061054f33600035600160e060020a031916610aef565b1515610593576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b60408051348082526020820183815236938301849052600435936024359384928692339260008035600160e060020a03191693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a4600160a060020a0386161515610657576040805160e560020a62461bcd02815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d7265717569726564604482015290519081900360640190fd5b600080865160208801896113885a03f43d6040519550601f19601f6020830101168601604052808652806000602088013e8115600181146106975761069e565b8160208801fd5b50505050505092915050565b6002546040517f8bf4515c000000000000000000000000000000000000000000000000000000008152602060048201818152855160248401528551600094606094600160a060020a0390911693638bf4515c93899390928392604490910191908501908083838c5b8381101561072a578181015183820152602001610712565b50505050905090810190601f1680156107575780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b15801561077457600080fd5b505afa158015610788573d6000803e3d6000fd5b505050506040513d602081101561079e57600080fd5b50519150600160a060020a03821615156108a6576002546040517f7ed0c3b2000000000000000000000000000000000000000000000000000000008152602060048201818152875160248401528751600160a060020a0390941693637ed0c3b293899383926044909201919085019080838360005b8381101561082b578181015183820152602001610813565b50505050905090810190601f1680156108585780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561087757600080fd5b505af115801561088b573d6000803e3d6000fd5b505050506040513d60208110156108a157600080fd5b505191505b6108b08284610537565b90509250929050565b600254600160a060020a031681565b6108de33600035600160e060020a031916610aef565b1515610922576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b600154600160a060020a031681565b60006109a233600035600160e060020a031916610aef565b15156109e6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020610bf4833981519152604482015290519081900360640190fd5b60408051348082526020820183815236938301849052600435936024359384928692339260008035600160e060020a03191693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a4600160a060020a0385161515610aaa576040805160e560020a62461bcd02815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d726571756972656400604482015290519081900360640190fd5b60028054600160a060020a03871673ffffffffffffffffffffffffffffffffffffffff1990911617905560019350505050919050565b600054600160a060020a031681565b6000600160a060020a038316301415610b0a57506001610bed565b600154600160a060020a0384811691161415610b2857506001610bed565b600054600160a060020a03161515610b4257506000610bed565b600054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152306024830152600160e060020a0319861660448301529151919092169163b7009613916064808301926020929190829003018186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d6020811015610be857600080fd5b505190505b9291505056fe64732d617574682d756e617574686f72697a6564000000000000000000000000a165627a7a72305820757e2991c2f6c0fec634b6b81f5aab0e7361b0356161efda6a0d005be0a435840029a165627a7a72305820ed29fddd48844e94887470c60d83ba42cff4b112b8db4c032b5d551dc01737110029",
  "sourceMap": "3159:794:11:-;;;3360:64;8:9:-1;5:2;;;30:1;27;20:12;5:2;3360:64:11;3399:18;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3391:5:11;:26;;-1:-1:-1;;;;;;3391:26:11;-1:-1:-1;;;;;3391:26:11;;;;;;;;;;3159:794;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "3159:794:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3285:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3285:37:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3285:37:11;-1:-1:-1;;;;;3285:37:11;;;;;;;;;;;;;;;;;;;;;3328:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3328:25:11;;;;;;;;-1:-1:-1;;;;;3328:25:11;;;;;;;;;;;;;;3503:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3503:98:11;;;;3677:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3677:274:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3677:274:11;-1:-1:-1;;;;;3677:274:11;;;3285:37;;;;;;;;;;;;;;;;:::o;3328:25::-;;;-1:-1:-1;;;;;3328:25:11;;:::o;3503:98::-;3536:21;3577:17;3583:10;3577:5;:17::i;:::-;3569:25;;3503:98;:::o;3677:274::-;3792:5;;3723:21;;-1:-1:-1;;;;;3792:5:11;3772:27;;:::i;:::-;-1:-1:-1;;;;;3772:27:11;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3866:5:11;;3815:58;;;-1:-1:-1;;;;;3815:58:11;;;;;3866:5;;;3815:58;;;;;;3756:44;;-1:-1:-1;3815:58:11;;;;3823:10;;3815:58;;;;;;;;;3891:5;-1:-1:-1;;;;;3883:23:11;;3907:5;3883:30;;;;;;;;;;;;;-1:-1:-1;;;;;3883:30:11;-1:-1:-1;;;;;3883:30:11;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3883:30:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;;;3923:14:11;;:7;:14;;;;;;;;;;:21;;-1:-1:-1;;3923:21:11;3940:4;3923:21;;;-1:-1:-1;3931:5:11;3677:274;-1:-1:-1;3677:274:11:o;3159:794::-;;;;;;;;;;:::o",
  "source": "// proxy.sol - execute actions atomically through the proxy's identity\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >=0.5.0 <0.6.0;\n\nimport \"./auth.sol\";\nimport \"./note.sol\";\n\n// DSProxy\n// Allows code execution using a persistant identity This can be very\n// useful to execute a sequence of atomic actions. Since the owner of\n// the proxy can be changed, this allows for dynamic ownership models\n// i.e. a multisig\ncontract DSProxy is DSAuth, DSNote {\n    event LogParams(address target, bytes data);\n\n    DSProxyCache public cache;  // global cache for contracts\n\n    constructor(address _cacheAddr) public {\n        setCache(_cacheAddr);\n    }\n\n    function() external payable {\n    }\n\n    // use the proxy to execute calldata _data on contract _code\n    function execute(bytes memory _code, bytes memory _data)\n        public\n        payable\n        returns (address target, bytes memory response)\n    {\n        target = cache.read(_code);\n        if (target == address(0)) {\n            // deploy contract & store its address in cache\n            target = cache.write(_code);\n        }\n\n        response = execute(target, _data);\n    }\n\n    function execute(address _target, bytes memory _data)\n        public\n        auth\n        note\n        payable\n        returns (bytes memory response)\n    {\n        // emit LogParams(_target, _data);\n        require(_target != address(0), \"ds-proxy-target-address-required\");\n\n        // call contract in current context\n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\n            let size := returndatasize\n\n            response := mload(0x40)\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n            mstore(response, size)\n            returndatacopy(add(response, 0x20), 0, size)\n\n            switch iszero(succeeded)\n            case 1 {\n                // throw if delegatecall failed\n                revert(add(response, 0x20), size)\n            }\n        }\n    }\n\n    //set new cache\n    function setCache(address _cacheAddr)\n        public\n        auth\n        note\n        returns (bool)\n    {\n        require(_cacheAddr != address(0), \"ds-proxy-cache-address-required\");\n        cache = DSProxyCache(_cacheAddr);  // overwrite cache\n        return true;\n    }\n}\n\n// DSProxyFactory\n// This factory deploys new proxy instances through build()\n// Deployed proxy addresses are logged\ncontract DSProxyFactory {\n    event Created(address indexed sender, address indexed owner, address proxy, address cache);\n    mapping(address=>bool) public isProxy;\n    DSProxyCache public cache;\n\n    constructor() public {\n        cache = new DSProxyCache();\n    }\n\n    // deploys a new proxy instance\n    // sets owner of proxy to caller\n    function build() public returns (address payable proxy) {\n        proxy = build(msg.sender);\n    }\n\n    // deploys a new proxy instance\n    // sets custom owner of proxy\n    function build(address owner) public returns (address payable proxy) {\n        proxy = address(new DSProxy(address(cache)));\n        emit Created(msg.sender, owner, address(proxy), address(cache));\n        DSProxy(proxy).setOwner(owner);\n        isProxy[proxy] = true;\n    }\n}\n\n// DSProxyCache\n// This global cache stores addresses of contracts previously deployed\n// by a proxy. This saves gas from repeat deployment of the same\n// contracts and eliminates blockchain bloat.\n\n// By default, all proxies deployed from the same factory store\n// contracts in the same cache. The cache a proxy instance uses can be\n// changed.  The cache uses the sha3 hash of a contract's bytecode to\n// lookup the address\ncontract DSProxyCache {\n    mapping(bytes32 => address) cache;\n\n    function read(bytes memory _code) public view returns (address) {\n        bytes32 hash = keccak256(_code);\n        return cache[hash];\n    }\n\n    function write(bytes memory _code) public returns (address target) {\n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            target := create(0, add(_code, 0x20), mload(_code))\n            switch iszero(extcodesize(target))\n            case 1 {\n                // throw if contract failed to deploy\n                revert(0, 0)\n            }\n        }\n        bytes32 hash = keccak256(_code);\n        cache[hash] = target;\n    }\n}\n",
  "sourcePath": "/home/hatch/projects/0xfutures/protocol/contracts/dappsys/proxy.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-04-22T01:42:08.700Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}