{
  "contractName": "ForwardFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "forwarderAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "targetContract",
          "type": "address"
        }
      ],
      "name": "LogForwarderDeployed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "createForwarder",
      "outputs": [
        {
          "name": "fwdContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506101bc806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416639193ba0b8114610045575b600080fd5b34801561005157600080fd5b5061007373ffffffffffffffffffffffffffffffffffffffff6004351661009c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6040517f602e600c600039602e6000f336600060003761010060003660007300000000008082526c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff841602601b83018190527f5af41558576101006000f3000000000000000000000000000000000000000000602f8401819052600093909190603a8186f09450843b801561013257610134565bfe5b50506040805173ffffffffffffffffffffffffffffffffffffffff80871682528716602082015281517fe3b17932c50c6e05c2f75f7e045a5fc54b3ac85ce2c29134028227ba28b7d73e929181900390910190a15050509190505600a165627a7a7230582089de229c6ecbc5e001dc9d203949e4caee89d39ddf03186f68b711956cbc36600029",
  "deployedBytecode": "0x6080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416639193ba0b8114610045575b600080fd5b34801561005157600080fd5b5061007373ffffffffffffffffffffffffffffffffffffffff6004351661009c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6040517f602e600c600039602e6000f336600060003761010060003660007300000000008082526c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff841602601b83018190527f5af41558576101006000f3000000000000000000000000000000000000000000602f8401819052600093909190603a8186f09450843b801561013257610134565bfe5b50506040805173ffffffffffffffffffffffffffffffffffffffff80871682528716602082015281517fe3b17932c50c6e05c2f75f7e045a5fc54b3ac85ce2c29134028227ba28b7d73e929181900390910190a15050509190505600a165627a7a7230582089de229c6ecbc5e001dc9d203949e4caee89d39ddf03186f68b711956cbc36600029",
  "sourceMap": "228:1974:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:1974:2;;;;;;;",
  "deployedSourceMap": "228:1974:2:-;;;;;;;;;;;;;;;;;;;;;;;346:1851;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;346:1851:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:4;1606:11;1061:66;1706:24;;;1318:14;1298:16;;;:35;1833:4;1815:23;;1808:47;;;1175:66;1916:4;1898:23;;1891:35;;;404:19;;1175:66;;1298:35;2017:4;1606:11;404:19;1993:29;1978:44;-1:-1:-1;2074:24:2;;2099:20;;;;2067:52;;2099:20;2108:9;2067:52;-1:-1:-1;;2147:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;346:1851;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\r\npragma experimental \"v0.5.0\";\r\n\r\n/**\r\n * Factory creating DELETECALL forwarding contracts.\r\n *\r\n * This implementation is from:\r\n *  https://gist.github.com/izqui/7f904443e6d19c1ab52ec7f5ad46b3a8\r\n */\r\ncontract ForwardFactory {\r\n\r\n    event LogForwarderDeployed(address forwarderAddress, address targetContract);\r\n\r\n    function createForwarder(address _target) public returns (address fwdContract) {\r\n        /*\r\n           Bytecode origin https://www.reddit.com/r/ethereum/comments/6ic49q/any_assembly_programmers_willing_to_write_a/dj5ceuw/\r\n\r\n            CALLDATASIZE\r\n            PUSH1 0x00\r\n            PUSH1 0x00\r\n            CALLDATACOPY\r\n            PUSH2 0x1000\r\n            PUSH1 0x00\r\n            CALLDATASIZE\r\n            PUSH1 0x00\r\n            PUSH20 0xf00df00df00df00df00df00df00df00df00df00d // placeholder address\r\n            GAS\r\n            DELEGATE_CALL\r\n            ISZERO\r\n            PC\r\n            JUMPI\r\n            PUSH2 0x1000\r\n            PUSH1 0x00\r\n            RETURN\r\n        */\r\n        bytes32 b1 = 0x602e600c600039602e6000f33660006000376101006000366000730000000000; // length 27 bytes = 1b\r\n        bytes32 b2 = 0x5af41558576101006000f3000000000000000000000000000000000000000000; // length 11 bytes\r\n\r\n        uint256 shiftedAddress = uint256(_target) * ((2 ** 8) ** 12);   // Shift address 12 bytes to the left\r\n\r\n        /*\r\n         * SOLIUM DISABLE no-inline-assembly error. How else to cheaply do this?\r\n         */\r\n         \r\n        /* solium-disable security/no-inline-assembly */\r\n        assembly {\r\n            let contractCode := mload(0x40)                 // Find empty storage location using \"free memory pointer\"\r\n            mstore(contractCode, b1)                        // We add the first part of the bytecode\r\n            mstore(add(contractCode, 0x1b), shiftedAddress) // Add target address\r\n            mstore(add(contractCode, 0x2f), b2)             // Final part of bytecode\r\n            fwdContract := create(0, contractCode, 0x3A)    // total length 58 dec = 3a\r\n            switch extcodesize(fwdContract) case 0 { invalid() }\r\n        }\r\n\r\n        emit LogForwarderDeployed(fwdContract, _target);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\ForwardFactory.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-02-16T09:56:34.713Z"
}