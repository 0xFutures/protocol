{
  "contractName": "ForwardFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "forwarderAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "targetContract",
          "type": "address"
        }
      ],
      "name": "LogForwarderDeployed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "createForwarder",
      "outputs": [
        {
          "name": "fwdContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506101bc806100206000396000f3006080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416639193ba0b8114610045575b600080fd5b34801561005157600080fd5b5061007373ffffffffffffffffffffffffffffffffffffffff6004351661009c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6040517f602e600c600039602e6000f336600060003761010060003660007300000000008082526c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff841602601b83018190527f5af41558576101006000f3000000000000000000000000000000000000000000602f8401819052600093909190603a8186f09450843b801561013257610134565bfe5b50506040805173ffffffffffffffffffffffffffffffffffffffff80871682528716602082015281517fe3b17932c50c6e05c2f75f7e045a5fc54b3ac85ce2c29134028227ba28b7d73e929181900390910190a15050509190505600a165627a7a723058200f3b98529be2b3c7eca9daca00d2acc9a60bb0e519e1ac873f68550100ee1ebf0029",
  "deployedBytecode": "0x6080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416639193ba0b8114610045575b600080fd5b34801561005157600080fd5b5061007373ffffffffffffffffffffffffffffffffffffffff6004351661009c565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6040517f602e600c600039602e6000f336600060003761010060003660007300000000008082526c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff841602601b83018190527f5af41558576101006000f3000000000000000000000000000000000000000000602f8401819052600093909190603a8186f09450843b801561013257610134565bfe5b50506040805173ffffffffffffffffffffffffffffffffffffffff80871682528716602082015281517fe3b17932c50c6e05c2f75f7e045a5fc54b3ac85ce2c29134028227ba28b7d73e929181900390910190a15050509190505600a165627a7a723058200f3b98529be2b3c7eca9daca00d2acc9a60bb0e519e1ac873f68550100ee1ebf0029",
  "sourceMap": "219:1926:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;219:1926:2;;;;;;;",
  "deployedSourceMap": "219:1926:2:-;;;;;;;;;;;;;;;;;;;;;;;333:1809;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;333:1809:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1566:4;1560:11;1026:66;1659:24;;;1280:14;1260:16;;;:35;1785:4;1767:23;;1760:47;;;1139:66;1867:4;1849:23;;1842:35;;;391:19;;1139:66;;1260:35;1967:4;1560:11;391:19;1943:29;1928:44;-1:-1:-1;2023:24:2;;2048:20;;;;2016:52;;2048:20;2057:9;2016:52;-1:-1:-1;;2093:42:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:1809;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\npragma experimental \"v0.5.0\";\n\n/**\n * Factory creating DELETECALL forwarding contracts.\n *\n * This implementation is from:\n *  https://gist.github.com/izqui/7f904443e6d19c1ab52ec7f5ad46b3a8\n */\ncontract ForwardFactory {\n\n    event LogForwarderDeployed(address forwarderAddress, address targetContract);\n\n    function createForwarder(address _target) public returns (address fwdContract) {\n        /*\n           Bytecode origin https://www.reddit.com/r/ethereum/comments/6ic49q/any_assembly_programmers_willing_to_write_a/dj5ceuw/\n\n            CALLDATASIZE\n            PUSH1 0x00\n            PUSH1 0x00\n            CALLDATACOPY\n            PUSH2 0x1000\n            PUSH1 0x00\n            CALLDATASIZE\n            PUSH1 0x00\n            PUSH20 0xf00df00df00df00df00df00df00df00df00df00d // placeholder address\n            GAS\n            DELEGATE_CALL\n            ISZERO\n            PC\n            JUMPI\n            PUSH2 0x1000\n            PUSH1 0x00\n            RETURN\n        */\n        bytes32 b1 = 0x602e600c600039602e6000f33660006000376101006000366000730000000000; // length 27 bytes = 1b\n        bytes32 b2 = 0x5af41558576101006000f3000000000000000000000000000000000000000000; // length 11 bytes\n\n        uint256 shiftedAddress = uint256(_target) * ((2 ** 8) ** 12);   // Shift address 12 bytes to the left\n\n        /*\n         * SOLIUM DISABLE no-inline-assembly error. How else to cheaply do this?\n         */\n         \n        /* solium-disable security/no-inline-assembly */\n        assembly {\n            let contractCode := mload(0x40)                 // Find empty storage location using \"free memory pointer\"\n            mstore(contractCode, b1)                        // We add the first part of the bytecode\n            mstore(add(contractCode, 0x1b), shiftedAddress) // Add target address\n            mstore(add(contractCode, 0x2f), b2)             // Final part of bytecode\n            fwdContract := create(0, contractCode, 0x3A)    // total length 58 dec = 3a\n            switch extcodesize(fwdContract) case 0 { invalid() }\n        }\n\n        emit LogForwarderDeployed(fwdContract, _target);\n    }\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/ForwardFactory.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-02-11T03:24:00.558Z"
}