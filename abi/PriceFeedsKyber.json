{
  "contractName": "PriceFeedsKyber",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "BITMASK_EXCLUDE_PERMISSIONLESS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "marketNames",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_kyberNetworkProxyContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bytesId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "strId",
          "type": "string"
        }
      ],
      "name": "LogPriceFeedsKyberMarketAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "LogPriceFeedsKyberMarketRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kyberNetworkProxyContract",
          "type": "address"
        }
      ],
      "name": "setKyberNetworkProxyContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketStrId",
          "type": "string"
        },
        {
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "addMarket",
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "removeMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "name": "tokenContract",
          "type": "address"
        },
        {
          "name": "encodedCall",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "priceValue",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BITMASK_EXCLUDE_PERMISSIONLESS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_kyberNetworkProxyContract\",\"type\":\"address\"}],\"name\":\"setKyberNetworkProxyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"marketNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"removeMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"priceValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketStrId\",\"type\":\"string\"},{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"addMarket\",\"outputs\":[{\"name\":\"marketId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"getMarket\",\"outputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"encodedCall\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_kyberNetworkProxyContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bytesId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"strId\",\"type\":\"string\"}],\"name\":\"LogPriceFeedsKyberMarketAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"LogPriceFeedsKyberMarketRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMarket(string,address)\":{\"params\":{\"_marketStrId\":\"String id of market. eg. \\\"Kyber_ETH_DAI\\\"\",\"_tokenContract\":\"Address of ERC20 Token on Kyber market.\"},\"return\":\"marketId bytes32 keccak256 of the _marketStrId\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addMarket(string,address)\":{\"notice\":\"Add a new Kyber market\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Market prices from the Kyber Network: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\"}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":\"PriceFeedsKyber\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":{\"keccak256\":\"0x16df72c93e70015d8c6248359556ab74d5afb4e8afc8bcb1c5928d95165dd51a\",\"urls\":[\"bzzr://0a02eef5291107ad08a0eefa250296ddf69957b95c9f5550f1eaf0ef3234d465\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610d6c8339810180604052602081101561003057600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361008a8161009060201b60201c565b506100da565b61009e6100c960201b60201c565b6100a757600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331490565b610c83806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101cf5780638f32d59b146101f35780639e485ffc1461020f578063c3c95c7b14610288578063f2fde38b14610336578063f4463db51461035c576100b4565b80630c441d4f146100b95780633f19d6f0146100d357806341955214146100fb5780635c5212dd1461018d57806361da1439146101aa578063715018a6146101c7575b600080fd5b6100c1610379565b60408051918252519081900360200190f35b6100f9600480360360208110156100e957600080fd5b50356001600160a01b0316610381565b005b6101186004803603602081101561011157600080fd5b50356103b4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015257818101518382015260200161013a565b50505050905090810190601f16801561017f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f9600480360360208110156101a357600080fd5b503561044d565b6100c1600480360360208110156101c057600080fd5b50356105af565b6100f9610734565b6101d761078f565b604080516001600160a01b039092168252519081900360200190f35b6101fb61079f565b604080519115158252519081900360200190f35b6100c16004803603604081101561022557600080fd5b81019060208101813564010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b9193509150356001600160a01b03166107b0565b6102a56004803603602081101561029e57600080fd5b5035610965565b60405180836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102fa5781810151838201526020016102e2565b50505050905090810190601f1680156103275780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6100f96004803603602081101561034c57600080fd5b50356001600160a01b0316610a44565b6101fb6004803603602081101561037257600080fd5b5035610a61565b600160ff1b81565b61038961079f565b61039257600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b505050505081565b61045561079f565b61045e57600080fd5b61046781610a61565b604051806060016040528060258152602001610c3360259139808261050d57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104d25781810151838201526020016104ba565b50505050905090810190601f1680156104ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506040805180820182526000808252825160208082018390528451808303820181529185018552808401918252878352600180825294909220835181546001600160a01b0319166001600160a01b03909116178155905180519394919361057c93928501929190910190610aec565b50506040518491507fb54c2b8928a495bb6488be8bfd8a852a5815f53d28e2c454b49f5635e5d1d6a890600090a2505050565b60008060016000848152602001908152602001600020905060006060600360009054906101000a90046001600160a01b03166001600160a01b03168360010160405180828054600181600116156101000203166002900480156106495780601f10610627576101008083540402835291820191610649565b820191906000526020600020905b815481529060010190602001808311610635575b5050915050600060405180830381855afa9150503d8060008114610689576040519150601f19603f3d011682016040523d82523d6000602084013e61068e565b606091505b5090925090508161071457604080518082018252601781527f4b796265722070726963652063616c6c206661696c656400000000000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156104d25781810151838201526020016104ba565b80806020019051604081101561072957600080fd5b505195945050505050565b61073c61079f565b61074557600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b60006107ba61079f565b6107c357600080fd5b83836040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506040518060400160405280836001600160a01b031681526020016040518080610c0b602891396040805191829003602801822073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248401526001600160a01b038089166044850152670de0b6b3a7640000600160ff1b016064808601919091528351808603909101815260849094018352602084810180516001600160e01b03166001600160e01b03199094169390931790925292909452600086815260018086529190208551815493166001600160a01b031990931692909217825584840151805192946108e0945091850192910190610aec565b50505060008181526002602052604090206108fc908585610b6a565b50807fa5a61bd6a6ada80224b49aa7fae9b176c38f70934cfc65e1c34495527cd91e23858560405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a29392505050565b60006060610971610bd8565b6000848152600160208181526040928390208351808501855281546001600160a01b0316815281840180548651600261010097831615979097026000190190911695909504601f81018590048502860185019096528585529094919385840193909290830182828015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b5050505050815250509050806000015192508060200151915050915091565b610a4c61079f565b610a5557600080fd5b610a5e81610a7e565b50565b6000908152600160205260409020546001600160a01b0316151590565b6001600160a01b038116610a9157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b2d57805160ff1916838001178555610b5a565b82800160010185558215610b5a579182015b82811115610b5a578251825591602001919060010190610b3f565b50610b66929150610bf0565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bab5782800160ff19823516178555610b5a565b82800160010185558215610b5a579182015b82811115610b5a578235825591602001919060010190610bbd565b60408051808201909152600081526060602082015290565b61079c91905b80821115610b665760008155600101610bf656fe67657445787065637465645261746528616464726573732c616464726573732c75696e74323536294d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a72305820922bb2e81e4a94f891713078b6f19a7f18f7f261b2eb019c14ae41649f659e840029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101cf5780638f32d59b146101f35780639e485ffc1461020f578063c3c95c7b14610288578063f2fde38b14610336578063f4463db51461035c576100b4565b80630c441d4f146100b95780633f19d6f0146100d357806341955214146100fb5780635c5212dd1461018d57806361da1439146101aa578063715018a6146101c7575b600080fd5b6100c1610379565b60408051918252519081900360200190f35b6100f9600480360360208110156100e957600080fd5b50356001600160a01b0316610381565b005b6101186004803603602081101561011157600080fd5b50356103b4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015257818101518382015260200161013a565b50505050905090810190601f16801561017f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f9600480360360208110156101a357600080fd5b503561044d565b6100c1600480360360208110156101c057600080fd5b50356105af565b6100f9610734565b6101d761078f565b604080516001600160a01b039092168252519081900360200190f35b6101fb61079f565b604080519115158252519081900360200190f35b6100c16004803603604081101561022557600080fd5b81019060208101813564010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b9193509150356001600160a01b03166107b0565b6102a56004803603602081101561029e57600080fd5b5035610965565b60405180836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102fa5781810151838201526020016102e2565b50505050905090810190601f1680156103275780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6100f96004803603602081101561034c57600080fd5b50356001600160a01b0316610a44565b6101fb6004803603602081101561037257600080fd5b5035610a61565b600160ff1b81565b61038961079f565b61039257600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b505050505081565b61045561079f565b61045e57600080fd5b61046781610a61565b604051806060016040528060258152602001610c3360259139808261050d57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104d25781810151838201526020016104ba565b50505050905090810190601f1680156104ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506040805180820182526000808252825160208082018390528451808303820181529185018552808401918252878352600180825294909220835181546001600160a01b0319166001600160a01b03909116178155905180519394919361057c93928501929190910190610aec565b50506040518491507fb54c2b8928a495bb6488be8bfd8a852a5815f53d28e2c454b49f5635e5d1d6a890600090a2505050565b60008060016000848152602001908152602001600020905060006060600360009054906101000a90046001600160a01b03166001600160a01b03168360010160405180828054600181600116156101000203166002900480156106495780601f10610627576101008083540402835291820191610649565b820191906000526020600020905b815481529060010190602001808311610635575b5050915050600060405180830381855afa9150503d8060008114610689576040519150601f19603f3d011682016040523d82523d6000602084013e61068e565b606091505b5090925090508161071457604080518082018252601781527f4b796265722070726963652063616c6c206661696c656400000000000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156104d25781810151838201526020016104ba565b80806020019051604081101561072957600080fd5b505195945050505050565b61073c61079f565b61074557600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b60006107ba61079f565b6107c357600080fd5b83836040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506040518060400160405280836001600160a01b031681526020016040518080610c0b602891396040805191829003602801822073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60248401526001600160a01b038089166044850152670de0b6b3a7640000600160ff1b016064808601919091528351808603909101815260849094018352602084810180516001600160e01b03166001600160e01b03199094169390931790925292909452600086815260018086529190208551815493166001600160a01b031990931692909217825584840151805192946108e0945091850192910190610aec565b50505060008181526002602052604090206108fc908585610b6a565b50807fa5a61bd6a6ada80224b49aa7fae9b176c38f70934cfc65e1c34495527cd91e23858560405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a29392505050565b60006060610971610bd8565b6000848152600160208181526040928390208351808501855281546001600160a01b0316815281840180548651600261010097831615979097026000190190911695909504601f81018590048502860185019096528585529094919385840193909290830182828015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b5050505050815250509050806000015192508060200151915050915091565b610a4c61079f565b610a5557600080fd5b610a5e81610a7e565b50565b6000908152600160205260409020546001600160a01b0316151590565b6001600160a01b038116610a9157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b2d57805160ff1916838001178555610b5a565b82800160010185558215610b5a579182015b82811115610b5a578251825591602001919060010190610b3f565b50610b66929150610bf0565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bab5782800160ff19823516178555610b5a565b82800160010185558215610b5a579182015b82811115610b5a578235825591602001919060010190610bbd565b60408051808201909152600081526060602082015290565b61079c91905b80821115610b665760008155600101610bf656fe67657445787065637465645261746528616464726573732c616464726573732c75696e74323536294d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a72305820922bb2e81e4a94f891713078b6f19a7f18f7f261b2eb019c14ae41649f659e840029",
  "sourceMap": "228:3575:11:-;;;1336:128;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:128:11;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1336:128:11;515:6:15;:19;;-1:-1:-1;;;;;;515:19:15;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:15;;;;;515;549:40;;515:6;;549:40;1401:56:11;1430:26;1401:28;;;:56;;:::i;:::-;1336:128;228:3575;;1470:162;863:9:15;:7;;;:9;;:::i;:::-;855:18;;;;;;1571:25:11;:54;;-1:-1:-1;;;;;;1571:54:11;-1:-1:-1;;;;;1571:54:11;;;;;;;;;;1470:162::o;979:90:15:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:15;1042:10;:20;;979:90::o;228:3575:11:-;;;;;;;",
  "deployedSourceMap": "228:3575:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:3575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:62;;;:::i;:::-;;;;;;;;;;;;;;;;1470:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1470:162:11;-1:-1:-1;;;;;1470:162:11;;:::i;:::-;;1244:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1244:45:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1244:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2781:286;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2781:286:11;;:::i;3361:440::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3361:440:11;;:::i;1347:137:15:-;;;:::i;659:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:15;;;;;;;;;;;;;;979:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;2029:746:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2029:746:11;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2029:746:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2029:746:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2029:746:11;;-1:-1:-1;2029:746:11;-1:-1:-1;2029:746:11;-1:-1:-1;;;;;2029:746:11;;:::i;3073:282::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3073:282:11;;:::i;:::-;;;;;-1:-1:-1;;;;;3073:282:11;-1:-1:-1;;;;;3073:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3073:282:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:107:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:15;-1:-1:-1;;;;;1655:107:15;;:::i;1638:140:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1638:140:11;;:::i;699:62::-;-1:-1:-1;;;699:62:11;:::o;1470:162::-;863:9:15;:7;:9::i;:::-;855:18;;;;;;1571:25:11;:54;;-1:-1:-1;;;;;;1571:54:11;-1:-1:-1;;;;;1571:54:11;;;;;;;;;;1470:162::o;1244:45::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1244:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2781:286::-;863:9:15;:7;:9::i;:::-;855:18;;;;;;2874:25:11;2889:9;2874:14;:25::i;:::-;2901:28;;;;;;;;;;;;;;;;;304:6:0;293:9;285:26;;;;-1:-1:-1;;;;;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2966:37:11;;;;;;;;-1:-1:-1;2966:37:11;;;2987:15;;2966:37;2987:15;;;;;;;;26:21:-1;;;22:32;;6:49;;2987:15:11;;;;;2966:37;;;;;;2945:18;;;:7;:18;;;;;;;:58;;;;-1:-1:-1;;;;;;2945:58:11;-1:-1:-1;;;;;2945:58:11;;;;;;;;;;2966:37;;2945:18;;:58;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3018:42:11;;3050:9;;-1:-1:-1;3018:42:11;;;;;883:1:15;;2781:286:11;:::o;3361:440::-;3415:15;3442:21;3466:7;:18;3474:9;3466:18;;;;;;;;;;;3442:42;;3495:12;3517:20;3568:25;;;;;;;;;-1:-1:-1;;;;;3568:25:11;-1:-1:-1;;;;;3568:36:11;3618:6;:18;;3568:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;3547:99:11;;-1:-1:-1;3547:99:11;-1:-1:-1;3547:99:11;3657:77;;3692:30;;;;;;;;;;;;;;;;;;;3685:38;;-1:-1:-1;;;;;3685:38:11;;;;;;;;;;;;;;;;3692:30;;3685:38;;;;;;;;3692:30;3685:38;;3692:30;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3657:77:11;3772:7;3761:33;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3761:33:11;;3361:440;-1:-1:-1;;;;;3361:440:11:o;1347:137:15:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:15;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:15;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:15;659:77;;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:15;1042:10;:20;;979:90::o;2029:746:11:-;2176:16;863:9:15;:7;:9::i;:::-;855:18;;;;;;2246:12:11;;2229:30;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2229:30:11;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2229:30:11;;;2219:41;;;;;;2208:52;;2291:362;;;;;;;;2311:14;-1:-1:-1;;;;;2291:362:11;;;;;1031:75;;;;;;;;;;;;;;;;;;;924:42;2441:202;;;;-1:-1:-1;;;;;2441:202:11;;;;;;;-1:-1:-1;;;;;2441:202:11;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2441:202:11;;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;2441:202:11;;;179:29:-1;;;;160:49;;;2291:362:11;;;;-1:-1:-1;2271:17:11;;;:7;:17;;;;;;:382;;;;;;-1:-1:-1;;;;;;2271:382:11;;;;;;;;;;;;;;;:17;;:382;;-1:-1:-1;2271:382:11;;;;;;;;:::i;:::-;-1:-1:-1;;;2663:21:11;;;;:11;:21;;;;;:36;;2687:12;;2663:36;:::i;:::-;;2745:8;2715:53;2755:12;;2715:53;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;2715:53:11;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2715:53:11;;;;-1:-1:-1;2715:53:11;;-1:-1:-1;;;;2715:53:11;2029:746;;;;;:::o;3073:282::-;3156:21;3179:24;3219:20;;:::i;:::-;3242:18;;;;:7;:18;;;;;;;;;3219:41;;;;;;;;;-1:-1:-1;;;;;3219:41:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3219:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;3242:18;;3219:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3286:6;:20;;;3270:36;;3330:6;:18;;;3316:32;;3073:282;;;;:::o;1655:107:15:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1638:140:11:-;1702:4;1725:18;;;:7;:18;;;;;:32;-1:-1:-1;;;;;1725:32:11;:46;;;1638:140::o;1906:183:15:-;-1:-1:-1;;;;;1979:22:15;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:15;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:15;-1:-1:-1;;;;;2065:17:15;;;;;;;;;;1906:183::o;228:3575:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;228:3575:11;;;-1:-1:-1;228:3575:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;228:3575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;228:3575:11;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../DBC.sol\";\n\n\n/**\n * Market prices from the Kyber Network:\n * https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\n */\ncontract PriceFeedsKyber is DBC, Ownable {\n    event LogPriceFeedsKyberMarketAdded(bytes32 indexed bytesId, string strId);\n    event LogPriceFeedsKyberMarketRemoved(bytes32 indexed marketId);\n\n    string constant REASON_MUST_BE_ACTIVE_MARKET = \"Market must be active to push a value\";\n    string constant REASON_KYBER_PRICE_CALL_FAILED = \"Kyber price call failed\";\n\n    /* Adding this bit to the srcQty excludes permissionless reserves from\n       the price fetch */\n    uint public constant BITMASK_EXCLUDE_PERMISSIONLESS = 1 << 255;\n\n    /* When getting a price for ETH to some ERC20 then ETH is represented\n       by the following address: */\n    address constant kyberNativeEthAddr = address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n\n    bytes4 constant getExpectedRateCallSig = bytes4(\n        keccak256(\n            \"getExpectedRate(address,address,uint256)\"\n        )\n    );\n\n    struct Market  {\n        address tokenContract;\n        bytes encodedCall;\n    }\n    mapping(bytes32 => Market) markets;\n    mapping(bytes32 => string) public marketNames;\n\n    address kyberNetworkProxyContract;\n\n    constructor(address _kyberNetworkProxyContract) public {\n        setKyberNetworkProxyContract(_kyberNetworkProxyContract);\n    }\n\n    function setKyberNetworkProxyContract(address _kyberNetworkProxyContract) public onlyOwner {\n        kyberNetworkProxyContract = _kyberNetworkProxyContract;\n    }\n\n    function isMarketActive(bytes32 _marketId) public view returns (bool) {\n        return markets[_marketId].tokenContract != address(0);\n    }\n\n    /**\n     * Add a new Kyber market\n     * @param _marketStrId String id of market. eg. \"Kyber_ETH_DAI\"\n     * @param _tokenContract Address of ERC20 Token on Kyber market.\n     * @return marketId bytes32 keccak256 of the _marketStrId\n     */\n    function addMarket(\n        string calldata _marketStrId,\n        address _tokenContract\n    )\n        external\n        onlyOwner\n        returns (bytes32 marketId)\n    {\n        marketId = keccak256(abi.encodePacked(_marketStrId));\n\n        markets[marketId] = Market(\n            _tokenContract,\n            // store the call signature to the get market price for\n            // 1 ETH of the token\n            abi.encodeWithSelector(\n                getExpectedRateCallSig,\n                kyberNativeEthAddr,\n                _tokenContract,\n                1 ether | BITMASK_EXCLUDE_PERMISSIONLESS\n            )\n        );\n        marketNames[marketId] = _marketStrId;\n\n        emit LogPriceFeedsKyberMarketAdded(marketId, _marketStrId);\n    }\n\n    function removeMarket(bytes32 _marketId)\n        external\n        onlyOwner\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\n    {\n        markets[_marketId] = Market(address(0x0), abi.encode(0x0));\n        emit LogPriceFeedsKyberMarketRemoved(_marketId);\n    }\n\n    function getMarket(bytes32 _marketId)\n        public\n        view\n        returns (address tokenContract, bytes memory encodedCall)\n    {\n        Market memory market = markets[_marketId];\n        tokenContract = market.tokenContract;\n        encodedCall = market.encodedCall;\n    }\n\n    function read(bytes32 _marketId) public view returns (uint priceValue) {\n        Market storage market = markets[_marketId];\n\n        bool success;\n        bytes memory rspData;\n        (success, rspData) = kyberNetworkProxyContract.staticcall(\n            market.encodedCall\n        );\n\n        if (!success) {\n            revert(REASON_KYBER_PRICE_CALL_FAILED);\n        }\n\n        (priceValue, ) = abi.decode(rspData, (uint, uint));\n    }\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-07-22T07:25:29.823Z",
  "devdoc": {
    "methods": {
      "addMarket(string,address)": {
        "params": {
          "_marketStrId": "String id of market. eg. \"Kyber_ETH_DAI\"",
          "_tokenContract": "Address of ERC20 Token on Kyber market."
        },
        "return": "marketId bytes32 keccak256 of the _marketStrId"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMarket(string,address)": {
        "notice": "Add a new Kyber market"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Market prices from the Kyber Network: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/"
  }
}