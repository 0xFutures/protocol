{
  "contractName": "PriceFeedsKyber",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "BITMASK_EXCLUDE_PERMISSIONLESS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "marketNames",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bytesId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "strId",
          "type": "string"
        }
      ],
      "name": "LogPriceFeedsKyberMarketAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "LogPriceFeedsKyberMarketRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketStrId",
          "type": "string"
        },
        {
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "name": "_tokenContractTo",
          "type": "address"
        }
      ],
      "name": "addMarket",
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "removeMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "name": "tokenContract",
          "type": "address"
        },
        {
          "name": "tokenContractTo",
          "type": "address"
        },
        {
          "name": "encodedCall",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "priceValue",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BITMASK_EXCLUDE_PERMISSIONLESS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketStrId\",\"type\":\"string\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_tokenContractTo\",\"type\":\"address\"}],\"name\":\"addMarket\",\"outputs\":[{\"name\":\"marketId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"marketNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"removeMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"priceValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"getMarket\",\"outputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"tokenContractTo\",\"type\":\"address\"},{\"name\":\"encodedCall\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bytesId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"strId\",\"type\":\"string\"}],\"name\":\"LogPriceFeedsKyberMarketAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"LogPriceFeedsKyberMarketRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMarket(string,address,address)\":{\"params\":{\"_marketStrId\":\"String id of market. eg. \\\"ETH/DAI\\\"\",\"_tokenContract\":\"Address \\\"From\\\" of ERC20 Token on Kyber market.\",\"_tokenContractTo\":\"Address \\\"To\\\" of ERC20 Token on Kyber market.\"},\"return\":\"marketId bytes32 keccak256 of the _marketStrId\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addMarket(string,address,address)\":{\"notice\":\"Add a new Kyber market\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Market prices from the Kyber Network: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\"}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":\"PriceFeedsKyber\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x2703d1c87ddd66da66c110570d5e896848f21d3fea0a860ab3ac7cac007a1755\",\"urls\":[\"bzzr://df2ab637255c3194b717f3c9a857bc8d55ba4dddd4605621b48f75e9bb4fcd94\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":{\"keccak256\":\"0xb4302420e01fda3f7aa79898a50b2b362ce10a14b6547153b2df19e0130657b3\",\"urls\":[\"bzzr://2fc06cb7ed17a5b2c576e9e80426ed4584ac2242a946878eeac559ea365f1e59\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x0e3fe90852ca500af9457df99c1aec660ae2bdddb170c444881b1f6f796ce91c\",\"urls\":[\"bzzr://8c7ac792da4b76214844068529a0fcdb6bc821e866e0711786958e4ba7a69374\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610e888339810180604052602081101561003057600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361008a8161009060201b60201c565b506100da565b61009e6100c960201b60201c565b6100a757600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331490565b610d9f806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637b1039991161008c578063a91ee0dc11610066578063a91ee0dc1461028d578063c3c95c7b146102b3578063f2fde38b1461037a578063f4463db5146103a0576100cf565b80637b103999146102455780638da5cb5b146102695780638f32d59b14610271576100cf565b80630c441d4f146100d45780633d065e63146100ee578063419552141461016f5780635c5212dd1461020157806361da143914610220578063715018a61461023d575b600080fd5b6100dc6103bd565b60408051918252519081900360200190f35b6100dc6004803603606081101561010457600080fd5b81019060208101813564010000000081111561011f57600080fd5b82018360208201111561013157600080fd5b8035906020019184600183028401116401000000008311171561015357600080fd5b91935091506001600160a01b03813581169160200135166103c5565b61018c6004803603602081101561018557600080fd5b503561058d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c65781810151838201526020016101ae565b50505050905090810190601f1680156101f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021e6004803603602081101561021757600080fd5b5035610626565b005b6100dc6004803603602081101561023657600080fd5b50356107a0565b61021e610983565b61024d6109de565b604080516001600160a01b039092168252519081900360200190f35b61024d6109ed565b6102796109fd565b604080519115158252519081900360200190f35b61021e600480360360208110156102a357600080fd5b50356001600160a01b0316610a0e565b6102d0600480360360208110156102c957600080fd5b5035610a41565b60405180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561033d578181015183820152602001610325565b50505050905090810190601f16801561036a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61021e6004803603602081101561039057600080fd5b50356001600160a01b0316610b30565b610279600480360360208110156103b657600080fd5b5035610b4d565b600160ff1b81565b60006103cf6109fd565b6103d857600080fd5b84846040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506040518060600160405280846001600160a01b03168152602001836001600160a01b031681526020016040518080610d2760289139604080519182900360280182206001600160a01b038089166024850152808a166044850152670de0b6b3a7640000600160ff1b016064808601919091528351808603909101815260849094018352602084810180516001600160e01b03166001600160e01b031990941693909317909252929094526000868152600180865290829020865181549085166001600160a01b0319918216178255878701519282018054939095169216919091179092558401518051919361050793506002850192910190610c01565b5050506000818152600260205260409020610523908686610c7f565b50807fa5a61bd6a6ada80224b49aa7fae9b176c38f70934cfc65e1c34495527cd91e23868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a2949350505050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f810183900483028401830190945283835291929083018282801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050505081565b61062e6109fd565b61063757600080fd5b61064081610b4d565b604051806060016040528060258152602001610d4f6025913980826106e657604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106ab578181015183820152602001610693565b50505050905090810190601f1680156106d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080516060810182526000808252602080830182815284518083018490528551808203840181529086018652848601908152888452600180845295909320845181546001600160a01b03199081166001600160a01b039283161783559251968201805490931696169590951790559051805192939261076d9260028501920190610c01565b50506040518491507fb54c2b8928a495bb6488be8bfd8a852a5815f53d28e2c454b49f5635e5d1d6a890600090a2505050565b60008181526001602090815260408083206003548251600160e41b63046756190281529251919385936060936001600160a01b0390931692634675619092600480840193919291829003018186803b1580156107fb57600080fd5b505afa15801561080f573d6000803e3d6000fd5b505050506040513d602081101561082557600080fd5b5051604051600280860180546001600160a01b039094169390929182918491600019610100600184161502019091160480156108985780601f10610876576101008083540402835291820191610898565b820191906000526020600020905b815481529060010190602001808311610884575b5050915050600060405180830381855afa9150503d80600081146108d8576040519150601f19603f3d011682016040523d82523d6000602084013e6108dd565b606091505b5090925090508161096357604080518082018252601781527f4b796265722070726963652063616c6c206661696c656400000000000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156106ab578181015183820152602001610693565b80806020019051604081101561097857600080fd5b505195945050505050565b61098b6109fd565b61099457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6003546001600160a01b031681565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b610a166109fd565b610a1f57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806060610a4e610ced565b600085815260016020818152604092839020835160608101855281546001600160a01b0390811682528285015416818401526002808301805487516101009782161597909702600019011691909104601f810185900485028601850187528086529195929492860193909190830182828015610b0b5780601f10610ae057610100808354040283529160200191610b0b565b820191906000526020600020905b815481529060010190602001808311610aee57829003601f168201915b5050509190925250508151602083015160409093015190989297509550909350505050565b610b386109fd565b610b4157600080fd5b610b4a81610b93565b50565b6000818152600160205260408120546001600160a01b031615801590610b8d5750600082815260016020819052604090912001546001600160a01b031615155b92915050565b6001600160a01b038116610ba657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c4257805160ff1916838001178555610c6f565b82800160010185558215610c6f579182015b82811115610c6f578251825591602001919060010190610c54565b50610c7b929150610d0c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cc05782800160ff19823516178555610c6f565b82800160010185558215610c6f579182015b82811115610c6f578235825591602001919060010190610cd2565b6040805160608082018352600080835260208301529181019190915290565b6109fa91905b80821115610c7b5760008155600101610d1256fe67657445787065637465645261746528616464726573732c616464726573732c75696e74323536294d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a72305820b9b30ba6d10d300e9775d292924df422ea4951cec1723a97a77236eaf64a6a720029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637b1039991161008c578063a91ee0dc11610066578063a91ee0dc1461028d578063c3c95c7b146102b3578063f2fde38b1461037a578063f4463db5146103a0576100cf565b80637b103999146102455780638da5cb5b146102695780638f32d59b14610271576100cf565b80630c441d4f146100d45780633d065e63146100ee578063419552141461016f5780635c5212dd1461020157806361da143914610220578063715018a61461023d575b600080fd5b6100dc6103bd565b60408051918252519081900360200190f35b6100dc6004803603606081101561010457600080fd5b81019060208101813564010000000081111561011f57600080fd5b82018360208201111561013157600080fd5b8035906020019184600183028401116401000000008311171561015357600080fd5b91935091506001600160a01b03813581169160200135166103c5565b61018c6004803603602081101561018557600080fd5b503561058d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c65781810151838201526020016101ae565b50505050905090810190601f1680156101f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61021e6004803603602081101561021757600080fd5b5035610626565b005b6100dc6004803603602081101561023657600080fd5b50356107a0565b61021e610983565b61024d6109de565b604080516001600160a01b039092168252519081900360200190f35b61024d6109ed565b6102796109fd565b604080519115158252519081900360200190f35b61021e600480360360208110156102a357600080fd5b50356001600160a01b0316610a0e565b6102d0600480360360208110156102c957600080fd5b5035610a41565b60405180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561033d578181015183820152602001610325565b50505050905090810190601f16801561036a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61021e6004803603602081101561039057600080fd5b50356001600160a01b0316610b30565b610279600480360360208110156103b657600080fd5b5035610b4d565b600160ff1b81565b60006103cf6109fd565b6103d857600080fd5b84846040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506040518060600160405280846001600160a01b03168152602001836001600160a01b031681526020016040518080610d2760289139604080519182900360280182206001600160a01b038089166024850152808a166044850152670de0b6b3a7640000600160ff1b016064808601919091528351808603909101815260849094018352602084810180516001600160e01b03166001600160e01b031990941693909317909252929094526000868152600180865290829020865181549085166001600160a01b0319918216178255878701519282018054939095169216919091179092558401518051919361050793506002850192910190610c01565b5050506000818152600260205260409020610523908686610c7f565b50807fa5a61bd6a6ada80224b49aa7fae9b176c38f70934cfc65e1c34495527cd91e23868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a2949350505050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f810183900483028401830190945283835291929083018282801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050505081565b61062e6109fd565b61063757600080fd5b61064081610b4d565b604051806060016040528060258152602001610d4f6025913980826106e657604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106ab578181015183820152602001610693565b50505050905090810190601f1680156106d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080516060810182526000808252602080830182815284518083018490528551808203840181529086018652848601908152888452600180845295909320845181546001600160a01b03199081166001600160a01b039283161783559251968201805490931696169590951790559051805192939261076d9260028501920190610c01565b50506040518491507fb54c2b8928a495bb6488be8bfd8a852a5815f53d28e2c454b49f5635e5d1d6a890600090a2505050565b60008181526001602090815260408083206003548251600160e41b63046756190281529251919385936060936001600160a01b0390931692634675619092600480840193919291829003018186803b1580156107fb57600080fd5b505afa15801561080f573d6000803e3d6000fd5b505050506040513d602081101561082557600080fd5b5051604051600280860180546001600160a01b039094169390929182918491600019610100600184161502019091160480156108985780601f10610876576101008083540402835291820191610898565b820191906000526020600020905b815481529060010190602001808311610884575b5050915050600060405180830381855afa9150503d80600081146108d8576040519150601f19603f3d011682016040523d82523d6000602084013e6108dd565b606091505b5090925090508161096357604080518082018252601781527f4b796265722070726963652063616c6c206661696c656400000000000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156106ab578181015183820152602001610693565b80806020019051604081101561097857600080fd5b505195945050505050565b61098b6109fd565b61099457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6003546001600160a01b031681565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b610a166109fd565b610a1f57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806060610a4e610ced565b600085815260016020818152604092839020835160608101855281546001600160a01b0390811682528285015416818401526002808301805487516101009782161597909702600019011691909104601f810185900485028601850187528086529195929492860193909190830182828015610b0b5780601f10610ae057610100808354040283529160200191610b0b565b820191906000526020600020905b815481529060010190602001808311610aee57829003601f168201915b5050509190925250508151602083015160409093015190989297509550909350505050565b610b386109fd565b610b4157600080fd5b610b4a81610b93565b50565b6000818152600160205260408120546001600160a01b031615801590610b8d5750600082815260016020819052604090912001546001600160a01b031615155b92915050565b6001600160a01b038116610ba657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c4257805160ff1916838001178555610c6f565b82800160010185558215610c6f579182015b82811115610c6f578251825591602001919060010190610c54565b50610c7b929150610d0c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610cc05782800160ff19823516178555610c6f565b82800160010185558215610c6f579182015b82811115610c6f578235825591602001919060010190610cd2565b6040805160608082018352600080835260208301529181019190915290565b6109fa91905b80821115610c7b5760008155600101610d1256fe67657445787065637465645261746528616464726573732c616464726573732c75696e74323536294d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a72305820b9b30ba6d10d300e9775d292924df422ea4951cec1723a97a77236eaf64a6a720029",
  "sourceMap": "254:3579:11:-;;;1180:77;8:9:-1;5:2;;;30:1;27;20:12;5:2;1180:77:11;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1180:77:11;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:17;;;;;515;549:40;;515:6;;549:40;1228:22:11;1240:9;1228:11;;;:22;;:::i;:::-;1180:77;254:3579;;1263:104;863:9:17;:7;;;:9;;:::i;:::-;855:18;;;;;;1330:8:11;:30;;-1:-1:-1;;;;;;1330:30:11;-1:-1:-1;;;;;1330:30:11;;;;;;;;;;1263:104::o;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;254:3579:11:-;;;;;;;",
  "deployedSourceMap": "254:3579:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:3579:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:62;;;:::i;:::-;;;;;;;;;;;;;;;;1893:808;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1893:808:11;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1893:808:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1893:808:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1893:808:11;;-1:-1:-1;1893:808:11;-1:-1:-1;;;;;;1893:808:11;;;;;;;;;;:::i;1097:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1097:45:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1097:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2707:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2707:300:11;;:::i;:::-;;3376:455;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3376:455:11;;:::i;1347:137:17:-;;;:::i;1149:24:11:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1149:24:11;;;;;;;;;;;;;;659:77:17;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1263:104:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1263:104:11;-1:-1:-1;;;;;1263:104:11;;:::i;3013:357::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3013:357:11;;:::i;:::-;;;;;-1:-1:-1;;;;;3013:357:11;-1:-1:-1;;;;;3013:357:11;;;;;;-1:-1:-1;;;;;3013:357:11;-1:-1:-1;;;;;3013:357:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3013:357:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;1373:192:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1373:192:11;;:::i;725:62::-;-1:-1:-1;;;725:62:11;:::o;1893:808::-;2074:16;863:9:17;:7;:9::i;:::-;855:18;;;;;;2144:12:11;;2127:30;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2127:30:11;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2127:30:11;;;2117:41;;;;;;2106:52;;2189:390;;;;;;;;2209:14;-1:-1:-1;;;;;2189:390:11;;;;;2237:16;-1:-1:-1;;;;;2189:390:11;;;;;851:75;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2369:200:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2369:200:11;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2369:200:11;;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;2369:200:11;;;179:29:-1;;;;160:49;;;2189:390:11;;;;-1:-1:-1;2169:17:11;;;:7;:17;;;;;;;:410;;;;;;;-1:-1:-1;;;;;;2169:410:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;;:410;;-1:-1:-1;2169:410:11;;;;;;;;:::i;:::-;-1:-1:-1;;;2589:21:11;;;;:11;:21;;;;;:36;;2613:12;;2589:36;:::i;:::-;;2671:8;2641:53;2681:12;;2641:53;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;2641:53:11;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2641:53:11;;;;-1:-1:-1;2641:53:11;;-1:-1:-1;;;;2641:53:11;1893:808;;;;;;:::o;1097:45::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1097:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2707:300::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;2800:25:11;2815:9;2800:14;:25::i;:::-;2827:28;;;;;;;;;;;;;;;;;304:6:0;293:9;285:26;;;;-1:-1:-1;;;;;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2892:51:11;;;;;;;;-1:-1:-1;2892:51:11;;;;;;;;;;2927:15;;;;;;;;;;26:21:-1;;;22:32;;6:49;;2927:15:11;;;;;2892:51;;;;;;2871:18;;;:7;:18;;;;;;;:72;;;;-1:-1:-1;;;;;;2871:72:11;;;-1:-1:-1;;;;;2871:72:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;2892:51;;2871:18;:72;;;;;;;;;:::i;:::-;-1:-1:-1;;2958:42:11;;2990:9;;-1:-1:-1;2958:42:11;;;;;883:1:17;;2707:300:11;:::o;3376:455::-;3430:15;3481:18;;;:7;:18;;;;;;;;3591:8;;:31;;-1:-1:-1;;;;;3591:31:11;;;;3481:18;;3430:15;;3532:20;;-1:-1:-1;;;;;3591:8:11;;;;:29;;:31;;;;;3481:18;;3591:31;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3591:31:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3591:31:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3591:31:11;3583:93;;3648:18;;;;3583:93;;-1:-1:-1;;;;;3583:51:11;;;;3648:18;;3583:93;;;3648:18;;-1:-1:-1;;3583:93:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;3562:114:11;;-1:-1:-1;3562:114:11;-1:-1:-1;3562:114:11;3687:77;;3722:30;;;;;;;;;;;;;;;;;;;3715:38;;-1:-1:-1;;;;;3715:38:11;;;;;;;;;;;;;;;;3722:30;;3715:38;;;;;;;;3722:30;3715:38;;3722:30;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3687:77:11;3802:7;3791:33;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3791:33:11;;3376:455;-1:-1:-1;;;;;3376:455:11:o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;1149:24:11:-;;;-1:-1:-1;;;;;1149:24:11;;:::o;659:77:17:-;697:7;723:6;-1:-1:-1;;;;;723:6:17;659:77;;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;1263:104:11:-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1330:8:11;:30;;-1:-1:-1;;;;;;1330:30:11;-1:-1:-1;;;;;1330:30:11;;;;;;;;;;1263:104::o;3013:357::-;3096:21;3119:23;3144:24;3184:20;;:::i;:::-;3207:18;;;;:7;:18;;;;;;;;;3184:41;;;;;;;;;-1:-1:-1;;;;;3184:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3184:41:11;;;;;;;;;;;;;;;;;;;;;;;;;3207:18;;3184:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3184:41:11;;;;-1:-1:-1;;3251:20:11;;3299:22;;;;3345:18;;;;;3251:20;;3299:22;;-1:-1:-1;3345:18:11;-1:-1:-1;3013:357:11;;-1:-1:-1;;;;3013:357:11:o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1373:192:11:-;1437:4;1460:18;;;:7;:18;;;;;:32;-1:-1:-1;;;;;1460:32:11;:46;;;;:98;;-1:-1:-1;1556:1:11;1510:18;;;:7;:18;;;;;;;;:34;;-1:-1:-1;;;;;1510:34:11;:48;;1460:98;1453:105;1373:192;-1:-1:-1;;1373:192:11:o;1906:183:17:-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o;254:3579:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:3579:11;;;-1:-1:-1;254:3579:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:3579:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:3579:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../DBC.sol\";\nimport \"../Registry.sol\";\n\n\n/**\n * Market prices from the Kyber Network:\n * https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\n */\ncontract PriceFeedsKyber is DBC, Ownable {\n    event LogPriceFeedsKyberMarketAdded(bytes32 indexed bytesId, string strId);\n    event LogPriceFeedsKyberMarketRemoved(bytes32 indexed marketId);\n\n    string constant REASON_MUST_BE_ACTIVE_MARKET = \"Market must be active to push a value\";\n    string constant REASON_KYBER_PRICE_CALL_FAILED = \"Kyber price call failed\";\n\n    /* Adding this bit to the srcQty excludes permissionless reserves from\n       the price fetch */\n    uint public constant BITMASK_EXCLUDE_PERMISSIONLESS = 1 << 255;\n\n    bytes4 constant getExpectedRateCallSig = bytes4(\n        keccak256(\n            \"getExpectedRate(address,address,uint256)\"\n        )\n    );\n\n    struct Market  {\n        address tokenContract;\n        address tokenContractTo;\n        bytes encodedCall;\n    }\n    mapping(bytes32 => Market) markets;\n    mapping(bytes32 => string) public marketNames;\n\n    Registry public registry;\n\n    constructor(address _registry) public {\n        setRegistry(_registry);\n    }\n\n    function setRegistry(address _registry) public onlyOwner {\n        registry = Registry(_registry);\n    }\n\n    function isMarketActive(bytes32 _marketId) public view returns (bool) {\n        return markets[_marketId].tokenContract != address(0) && markets[_marketId].tokenContractTo != address(0);\n    }\n\n    /**\n     * Add a new Kyber market\n     * @param _marketStrId String id of market. eg. \"ETH/DAI\"\n     * @param _tokenContract Address \"From\" of ERC20 Token on Kyber market.\n     * @param _tokenContractTo Address \"To\" of ERC20 Token on Kyber market.\n     * @return marketId bytes32 keccak256 of the _marketStrId\n     */\n    function addMarket(\n        string calldata _marketStrId,\n        address _tokenContract,\n        address _tokenContractTo\n    )\n        external\n        onlyOwner\n        returns (bytes32 marketId)\n    {\n        marketId = keccak256(abi.encodePacked(_marketStrId));\n\n        markets[marketId] = Market(\n            _tokenContract,\n            _tokenContractTo,\n            // store the call signature to the get market price for\n            // 1 ETH of the token\n            abi.encodeWithSelector(\n                getExpectedRateCallSig,\n                _tokenContractTo,\n                _tokenContract,\n                1 ether | BITMASK_EXCLUDE_PERMISSIONLESS\n            )\n        );\n        marketNames[marketId] = _marketStrId;\n\n        emit LogPriceFeedsKyberMarketAdded(marketId, _marketStrId);\n    }\n\n    function removeMarket(bytes32 _marketId)\n        external\n        onlyOwner\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\n    {\n        markets[_marketId] = Market(address(0x0), address(0x0), abi.encode(0x0));\n        emit LogPriceFeedsKyberMarketRemoved(_marketId);\n    }\n\n    function getMarket(bytes32 _marketId)\n        public\n        view\n        returns (address tokenContract, address tokenContractTo, bytes memory encodedCall)\n    {\n        Market memory market = markets[_marketId];\n        tokenContract = market.tokenContract;\n        tokenContractTo = market.tokenContractTo;\n        encodedCall = market.encodedCall;\n    }\n\n    function read(bytes32 _marketId) public view returns (uint priceValue) {\n        Market storage market = markets[_marketId];\n\n        bool success;\n        bytes memory rspData;\n        (success, rspData) = address(registry.getKyberNetworkProxy()).staticcall(\n            market.encodedCall\n        );\n\n        if (!success) {\n            revert(REASON_KYBER_PRICE_CALL_FAILED);\n        }\n\n        (priceValue, ) = abi.decode(rspData, (uint, uint));\n    }\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-07-31T18:13:51.760Z",
  "devdoc": {
    "methods": {
      "addMarket(string,address,address)": {
        "params": {
          "_marketStrId": "String id of market. eg. \"ETH/DAI\"",
          "_tokenContract": "Address \"From\" of ERC20 Token on Kyber market.",
          "_tokenContractTo": "Address \"To\" of ERC20 Token on Kyber market."
        },
        "return": "marketId bytes32 keccak256 of the _marketStrId"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMarket(string,address,address)": {
        "notice": "Add a new Kyber market"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Market prices from the Kyber Network: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/"
  }
}