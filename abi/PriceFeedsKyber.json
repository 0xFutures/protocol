{
  "contractName": "PriceFeedsKyber",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "BITMASK_EXCLUDE_PERMISSIONLESS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "marketNames",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "name": "tokenContract",
          "type": "address"
        },
        {
          "name": "tokenContractTo",
          "type": "address"
        },
        {
          "name": "encodedCall",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bytesId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "strId",
          "type": "string"
        }
      ],
      "name": "LogPriceFeedsKyberMarketAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "LogPriceFeedsKyberMarketRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketStrId",
          "type": "string"
        },
        {
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "name": "_tokenContractTo",
          "type": "address"
        }
      ],
      "name": "addMarket",
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "removeMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "getMarket",
      "outputs": [
        {
          "name": "tokenContract",
          "type": "address"
        },
        {
          "name": "tokenContractTo",
          "type": "address"
        },
        {
          "name": "encodedCall",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "priceValue",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BITMASK_EXCLUDE_PERMISSIONLESS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketStrId\",\"type\":\"string\"},{\"name\":\"_tokenContract\",\"type\":\"address\"},{\"name\":\"_tokenContractTo\",\"type\":\"address\"}],\"name\":\"addMarket\",\"outputs\":[{\"name\":\"marketId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"marketNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"removeMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"priceValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"markets\",\"outputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"tokenContractTo\",\"type\":\"address\"},{\"name\":\"encodedCall\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"getMarket\",\"outputs\":[{\"name\":\"tokenContract\",\"type\":\"address\"},{\"name\":\"tokenContractTo\",\"type\":\"address\"},{\"name\":\"encodedCall\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_registry\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bytesId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"strId\",\"type\":\"string\"}],\"name\":\"LogPriceFeedsKyberMarketAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"LogPriceFeedsKyberMarketRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMarket(string,address,address)\":{\"params\":{\"_marketStrId\":\"String id of market. eg. \\\"ETH/DAI\\\"\",\"_tokenContract\":\"Address \\\"From\\\" of ERC20 Token on Kyber market.\",\"_tokenContractTo\":\"Address \\\"To\\\" of ERC20 Token on Kyber market.\"},\"return\":\"marketId bytes32 keccak256 of the _marketStrId\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addMarket(string,address,address)\":{\"notice\":\"Add a new Kyber market\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Market prices from the Kyber Network: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\"}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":\"PriceFeedsKyber\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x2703d1c87ddd66da66c110570d5e896848f21d3fea0a860ab3ac7cac007a1755\",\"urls\":[\"bzzr://df2ab637255c3194b717f3c9a857bc8d55ba4dddd4605621b48f75e9bb4fcd94\"]},\"/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol\":{\"keccak256\":\"0xdfa235ceaa7bed4d6ca2c22e08d997c3f2f663a52b6a5c91a0db6238058905a1\",\"urls\":[\"bzzr://ff7388da01d6a21848cb5f5197e6f15c9aba0a618cbd2cd8769cc9042a388a94\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x0e3fe90852ca500af9457df99c1aec660ae2bdddb170c444881b1f6f796ce91c\",\"urls\":[\"bzzr://8c7ac792da4b76214844068529a0fcdb6bc821e866e0711786958e4ba7a69374\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610f798339810180604052602081101561003057600080fd5b5051600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361008a8161009060201b60201c565b506100da565b61009e6100c960201b60201c565b6100a757600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331490565b610e90806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637b1039991161008c578063a91ee0dc11610066578063a91ee0dc1461036f578063c3c95c7b14610395578063f2fde38b146103b2578063f4463db5146103d8576100ea565b80637b103999146103275780638da5cb5b1461034b5780638f32d59b14610353576100ea565b80635c5212dd116100c85780635c5212dd1461021c57806361da14391461023b578063715018a6146102585780637564912b14610260576100ea565b80630c441d4f146100ef5780633d065e6314610109578063419552141461018a575b600080fd5b6100f76103f5565b60408051918252519081900360200190f35b6100f76004803603606081101561011f57600080fd5b81019060208101813564010000000081111561013a57600080fd5b82018360208201111561014c57600080fd5b8035906020019184600183028401116401000000008311171561016e57600080fd5b91935091506001600160a01b03813581169160200135166103fd565b6101a7600480360360208110156101a057600080fd5b50356105c5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e15781810151838201526020016101c9565b50505050905090810190601f16801561020e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102396004803603602081101561023257600080fd5b503561065e565b005b6100f76004803603602081101561025157600080fd5b50356107d8565b6102396109bb565b61027d6004803603602081101561027657600080fd5b5035610a16565b60405180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102ea5781810151838201526020016102d2565b50505050905090810190601f1680156103175780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61032f610acf565b604080516001600160a01b039092168252519081900360200190f35b61032f610ade565b61035b610aee565b604080519115158252519081900360200190f35b6102396004803603602081101561038557600080fd5b50356001600160a01b0316610aff565b61027d600480360360208110156103ab57600080fd5b5035610b32565b610239600480360360208110156103c857600080fd5b50356001600160a01b0316610c21565b61035b600480360360208110156103ee57600080fd5b5035610c3e565b600160ff1b81565b6000610407610aee565b61041057600080fd5b84846040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506040518060600160405280846001600160a01b03168152602001836001600160a01b031681526020016040518080610e1860289139604080519182900360280182206001600160a01b03808a1660248501528089166044850152670de0b6b3a7640000600160ff1b016064808601919091528351808603909101815260849094018352602084810180516001600160e01b03166001600160e01b031990941693909317909252929094526000868152600180865290829020865181549085166001600160a01b0319918216178255878701519282018054939095169216919091179092558401518051919361053f93506002850192910190610cf2565b505050600081815260026020526040902061055b908686610d70565b50807fa5a61bd6a6ada80224b49aa7fae9b176c38f70934cfc65e1c34495527cd91e23868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a2949350505050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156106565780601f1061062b57610100808354040283529160200191610656565b820191906000526020600020905b81548152906001019060200180831161063957829003601f168201915b505050505081565b610666610aee565b61066f57600080fd5b61067881610c3e565b604051806060016040528060258152602001610e4060259139808261071e57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106e35781810151838201526020016106cb565b50505050905090810190601f1680156107105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080516060810182526000808252602080830182815284518083018490528551808203840181529086018652848601908152888452600180845295909320845181546001600160a01b03199081166001600160a01b03928316178355925196820180549093169616959095179055905180519293926107a59260028501920190610cf2565b50506040518491507fb54c2b8928a495bb6488be8bfd8a852a5815f53d28e2c454b49f5635e5d1d6a890600090a2505050565b60008181526001602090815260408083206003548251600160e41b63046756190281529251919385936060936001600160a01b0390931692634675619092600480840193919291829003018186803b15801561083357600080fd5b505afa158015610847573d6000803e3d6000fd5b505050506040513d602081101561085d57600080fd5b5051604051600280860180546001600160a01b039094169390929182918491600019610100600184161502019091160480156108d05780601f106108ae5761010080835404028352918201916108d0565b820191906000526020600020905b8154815290600101906020018083116108bc575b5050915050600060405180830381855afa9150503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b5090925090508161099b57604080518082018252601781527f4b796265722070726963652063616c6c206661696c656400000000000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156106e35781810151838201526020016106cb565b8080602001905160408110156109b057600080fd5b505195945050505050565b6109c3610aee565b6109cc57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001602081815260009283526040928390208054818401546002808401805488516101009882161598909802600019011691909104601f81018690048602870186019097528686526001600160a01b039283169692909116949293909190830182828015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050505050905083565b6003546001600160a01b031681565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b610b07610aee565b610b1057600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806060610b3f610dde565b600085815260016020818152604092839020835160608101855281546001600160a01b0390811682528285015416818401526002808301805487516101009782161597909702600019011691909104601f810185900485028601850187528086529195929492860193909190830182828015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b5050509190925250508151602083015160409093015190989297509550909350505050565b610c29610aee565b610c3257600080fd5b610c3b81610c84565b50565b6000818152600160205260408120546001600160a01b031615801590610c7e5750600082815260016020819052604090912001546001600160a01b031615155b92915050565b6001600160a01b038116610c9757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d3357805160ff1916838001178555610d60565b82800160010185558215610d60579182015b82811115610d60578251825591602001919060010190610d45565b50610d6c929150610dfd565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610db15782800160ff19823516178555610d60565b82800160010185558215610d60579182015b82811115610d60578235825591602001919060010190610dc3565b6040805160608082018352600080835260208301529181019190915290565b610aeb91905b80821115610d6c5760008155600101610e0356fe67657445787065637465645261746528616464726573732c616464726573732c75696e74323536294d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a7230582046db63651d9d0f1b9eb745b34d85ed3c71a3ea1ab270a5903f780c1d12c184240029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637b1039991161008c578063a91ee0dc11610066578063a91ee0dc1461036f578063c3c95c7b14610395578063f2fde38b146103b2578063f4463db5146103d8576100ea565b80637b103999146103275780638da5cb5b1461034b5780638f32d59b14610353576100ea565b80635c5212dd116100c85780635c5212dd1461021c57806361da14391461023b578063715018a6146102585780637564912b14610260576100ea565b80630c441d4f146100ef5780633d065e6314610109578063419552141461018a575b600080fd5b6100f76103f5565b60408051918252519081900360200190f35b6100f76004803603606081101561011f57600080fd5b81019060208101813564010000000081111561013a57600080fd5b82018360208201111561014c57600080fd5b8035906020019184600183028401116401000000008311171561016e57600080fd5b91935091506001600160a01b03813581169160200135166103fd565b6101a7600480360360208110156101a057600080fd5b50356105c5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e15781810151838201526020016101c9565b50505050905090810190601f16801561020e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102396004803603602081101561023257600080fd5b503561065e565b005b6100f76004803603602081101561025157600080fd5b50356107d8565b6102396109bb565b61027d6004803603602081101561027657600080fd5b5035610a16565b60405180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102ea5781810151838201526020016102d2565b50505050905090810190601f1680156103175780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61032f610acf565b604080516001600160a01b039092168252519081900360200190f35b61032f610ade565b61035b610aee565b604080519115158252519081900360200190f35b6102396004803603602081101561038557600080fd5b50356001600160a01b0316610aff565b61027d600480360360208110156103ab57600080fd5b5035610b32565b610239600480360360208110156103c857600080fd5b50356001600160a01b0316610c21565b61035b600480360360208110156103ee57600080fd5b5035610c3e565b600160ff1b81565b6000610407610aee565b61041057600080fd5b84846040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090506040518060600160405280846001600160a01b03168152602001836001600160a01b031681526020016040518080610e1860289139604080519182900360280182206001600160a01b03808a1660248501528089166044850152670de0b6b3a7640000600160ff1b016064808601919091528351808603909101815260849094018352602084810180516001600160e01b03166001600160e01b031990941693909317909252929094526000868152600180865290829020865181549085166001600160a01b0319918216178255878701519282018054939095169216919091179092558401518051919361053f93506002850192910190610cf2565b505050600081815260026020526040902061055b908686610d70565b50807fa5a61bd6a6ada80224b49aa7fae9b176c38f70934cfc65e1c34495527cd91e23868660405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a2949350505050565b600260208181526000928352604092839020805484516001821615610100026000190190911693909304601f81018390048302840183019094528383529192908301828280156106565780601f1061062b57610100808354040283529160200191610656565b820191906000526020600020905b81548152906001019060200180831161063957829003601f168201915b505050505081565b610666610aee565b61066f57600080fd5b61067881610c3e565b604051806060016040528060258152602001610e4060259139808261071e57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106e35781810151838201526020016106cb565b50505050905090810190601f1680156107105780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080516060810182526000808252602080830182815284518083018490528551808203840181529086018652848601908152888452600180845295909320845181546001600160a01b03199081166001600160a01b03928316178355925196820180549093169616959095179055905180519293926107a59260028501920190610cf2565b50506040518491507fb54c2b8928a495bb6488be8bfd8a852a5815f53d28e2c454b49f5635e5d1d6a890600090a2505050565b60008181526001602090815260408083206003548251600160e41b63046756190281529251919385936060936001600160a01b0390931692634675619092600480840193919291829003018186803b15801561083357600080fd5b505afa158015610847573d6000803e3d6000fd5b505050506040513d602081101561085d57600080fd5b5051604051600280860180546001600160a01b039094169390929182918491600019610100600184161502019091160480156108d05780601f106108ae5761010080835404028352918201916108d0565b820191906000526020600020905b8154815290600101906020018083116108bc575b5050915050600060405180830381855afa9150503d8060008114610910576040519150601f19603f3d011682016040523d82523d6000602084013e610915565b606091505b5090925090508161099b57604080518082018252601781527f4b796265722070726963652063616c6c206661696c656400000000000000000060208083019182529251600160e51b62461bcd02815260048101938452825160248201528251929392839260449092019190808383600083156106e35781810151838201526020016106cb565b8080602001905160408110156109b057600080fd5b505195945050505050565b6109c3610aee565b6109cc57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001602081815260009283526040928390208054818401546002808401805488516101009882161598909802600019011691909104601f81018690048602870186019097528686526001600160a01b039283169692909116949293909190830182828015610ac55780601f10610a9a57610100808354040283529160200191610ac5565b820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050505050905083565b6003546001600160a01b031681565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b610b07610aee565b610b1057600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806060610b3f610dde565b600085815260016020818152604092839020835160608101855281546001600160a01b0390811682528285015416818401526002808301805487516101009782161597909702600019011691909104601f810185900485028601850187528086529195929492860193909190830182828015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b5050509190925250508151602083015160409093015190989297509550909350505050565b610c29610aee565b610c3257600080fd5b610c3b81610c84565b50565b6000818152600160205260408120546001600160a01b031615801590610c7e5750600082815260016020819052604090912001546001600160a01b031615155b92915050565b6001600160a01b038116610c9757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d3357805160ff1916838001178555610d60565b82800160010185558215610d60579182015b82811115610d60578251825591602001919060010190610d45565b50610d6c929150610dfd565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610db15782800160ff19823516178555610d60565b82800160010185558215610d60579182015b82811115610d60578235825591602001919060010190610dc3565b6040805160608082018352600080835260208301529181019190915290565b610aeb91905b80821115610d6c5760008155600101610e0356fe67657445787065637465645261746528616464726573732c616464726573732c75696e74323536294d61726b6574206d7573742062652061637469766520746f207075736820612076616c7565a165627a7a7230582046db63651d9d0f1b9eb745b34d85ed3c71a3ea1ab270a5903f780c1d12c184240029",
  "sourceMap": "254:3561:11:-;;;1187:77;8:9:-1;5:2;;;30:1;27;20:12;5:2;1187:77:11;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1187:77:11;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:17;;;;;515;549:40;;515:6;;549:40;1235:22:11;1247:9;1235:11;;;:22;;:::i;:::-;1187:77;254:3561;;1270:104;863:9:17;:7;;;:9;;:::i;:::-;855:18;;;;;;1337:8:11;:30;;-1:-1:-1;;;;;;1337:30:11;-1:-1:-1;;;;;1337:30:11;;;;;;;;;;1270:104::o;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;254:3561:11:-;;;;;;;",
  "deployedSourceMap": "254:3561:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:3561:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:62;;;:::i;:::-;;;;;;;;;;;;;;;;1900:783;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1900:783:11;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1900:783:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1900:783:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1900:783:11;;-1:-1:-1;1900:783:11;-1:-1:-1;;;;;;1900:783:11;;;;;;;;;;:::i;1104:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1104:45:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1104:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2689:300:11;;:::i;:::-;;3358:455;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3358:455:11;;:::i;1347:137:17:-;;;:::i;1057:41:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1057:41:11;;:::i;:::-;;;;;-1:-1:-1;;;;;1057:41:11;-1:-1:-1;;;;;1057:41:11;;;;;;-1:-1:-1;;;;;1057:41:11;-1:-1:-1;;;;;1057:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1057:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:24;;;:::i;:::-;;;;-1:-1:-1;;;;;1156:24:11;;;;;;;;;;;;;;659:77:17;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1270:104:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1270:104:11;-1:-1:-1;;;;;1270:104:11;;:::i;2995:357::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2995:357:11;;:::i;1655:107:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;1380:192:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1380:192:11;;:::i;725:62::-;-1:-1:-1;;;725:62:11;:::o;1900:783::-;2081:16;863:9:17;:7;:9::i;:::-;855:18;;;;;;2151:12:11;;2134:30;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2134:30:11;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2134:30:11;;;2124:41;;;;;;2113:52;;2196:365;;;;;;;;2216:14;-1:-1:-1;;;;;2196:365:11;;;;;2244:16;-1:-1:-1;;;;;2196:365:11;;;;;851:75;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2351:200:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2351:200:11;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2351:200:11;;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;2351:200:11;;;179:29:-1;;;;160:49;;;2196:365:11;;;;-1:-1:-1;2176:17:11;;;:7;:17;;;;;;;:385;;;;;;;-1:-1:-1;;;;;;2176:385:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;;:385;;-1:-1:-1;2176:385:11;;;;;;;;:::i;:::-;-1:-1:-1;;;2571:21:11;;;;:11;:21;;;;;:36;;2595:12;;2571:36;:::i;:::-;;2653:8;2623:53;2663:12;;2623:53;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;2623:53:11;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2623:53:11;;;;-1:-1:-1;2623:53:11;;-1:-1:-1;;;;2623:53:11;1900:783;;;;;;:::o;1104:45::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1104:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2689:300::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;2782:25:11;2797:9;2782:14;:25::i;:::-;2809:28;;;;;;;;;;;;;;;;;304:6:0;293:9;285:26;;;;-1:-1:-1;;;;;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;285:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2874:51:11;;;;;;;;-1:-1:-1;2874:51:11;;;;;;;;;;2909:15;;;;;;;;;;26:21:-1;;;22:32;;6:49;;2909:15:11;;;;;2874:51;;;;;;2853:18;;;:7;:18;;;;;;;:72;;;;-1:-1:-1;;;;;;2853:72:11;;;-1:-1:-1;;;;;2853:72:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;2874:51;;2853:18;:72;;;;;;;;;:::i;:::-;-1:-1:-1;;2940:42:11;;2972:9;;-1:-1:-1;2940:42:11;;;;;883:1:17;;2689:300:11;:::o;3358:455::-;3412:15;3463:18;;;:7;:18;;;;;;;;3573:8;;:31;;-1:-1:-1;;;;;3573:31:11;;;;3463:18;;3412:15;;3514:20;;-1:-1:-1;;;;;3573:8:11;;;;:29;;:31;;;;;3463:18;;3573:31;;;;;;:8;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;3573:31:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3573:31:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3573:31:11;3565:93;;3630:18;;;;3565:93;;-1:-1:-1;;;;;3565:51:11;;;;3630:18;;3565:93;;;3630:18;;-1:-1:-1;;3565:93:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;3544:114:11;;-1:-1:-1;3544:114:11;-1:-1:-1;3544:114:11;3669:77;;3704:30;;;;;;;;;;;;;;;;;;;3697:38;;-1:-1:-1;;;;;3697:38:11;;;;;;;;;;;;;;;;3704:30;;3697:38;;;;;;;;3704:30;3697:38;;3704:30;-1:-1:-1;27:10;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3669:77:11;3784:7;3773:33;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:33:11;;3358:455;-1:-1:-1;;;;;3358:455:11:o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;1057:41:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1057:41:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1057:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1156:24::-;;;-1:-1:-1;;;;;1156:24:11;;:::o;659:77:17:-;697:7;723:6;-1:-1:-1;;;;;723:6:17;659:77;;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;1270:104:11:-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1337:8:11;:30;;-1:-1:-1;;;;;;1337:30:11;-1:-1:-1;;;;;1337:30:11;;;;;;;;;;1270:104::o;2995:357::-;3078:21;3101:23;3126:24;3166:20;;:::i;:::-;3189:18;;;;:7;:18;;;;;;;;;3166:41;;;;;;;;;-1:-1:-1;;;;;3166:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3166:41:11;;;;;;;;;;;;;;;;;;;;;;;;;3189:18;;3166:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3166:41:11;;;;-1:-1:-1;;3233:20:11;;3281:22;;;;3327:18;;;;;3233:20;;3281:22;;-1:-1:-1;3327:18:11;-1:-1:-1;2995:357:11;;-1:-1:-1;;;;2995:357:11:o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1380:192:11:-;1444:4;1467:18;;;:7;:18;;;;;:32;-1:-1:-1;;;;;1467:32:11;:46;;;;:98;;-1:-1:-1;1563:1:11;1517:18;;;:7;:18;;;;;;;;:34;;-1:-1:-1;;;;;1517:34:11;:48;;1467:98;1460:105;1380:192;-1:-1:-1;;1380:192:11:o;1906:183:17:-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o;254:3561:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:3561:11;;;-1:-1:-1;254:3561:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:3561:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:3561:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../DBC.sol\";\nimport \"../Registry.sol\";\n\n\n/**\n * Market prices from the Kyber Network:\n * https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/\n */\ncontract PriceFeedsKyber is DBC, Ownable {\n    event LogPriceFeedsKyberMarketAdded(bytes32 indexed bytesId, string strId);\n    event LogPriceFeedsKyberMarketRemoved(bytes32 indexed marketId);\n\n    string constant REASON_MUST_BE_ACTIVE_MARKET = \"Market must be active to push a value\";\n    string constant REASON_KYBER_PRICE_CALL_FAILED = \"Kyber price call failed\";\n\n    /* Adding this bit to the srcQty excludes permissionless reserves from\n       the price fetch */\n    uint public constant BITMASK_EXCLUDE_PERMISSIONLESS = 1 << 255;\n\n    bytes4 constant getExpectedRateCallSig = bytes4(\n        keccak256(\n            \"getExpectedRate(address,address,uint256)\"\n        )\n    );\n\n    struct Market  {\n        address tokenContract;\n        address tokenContractTo;\n        bytes encodedCall;\n    }\n    mapping(bytes32 => Market) public markets;\n    mapping(bytes32 => string) public marketNames;\n\n    Registry public registry;\n\n    constructor(address _registry) public {\n        setRegistry(_registry);\n    }\n\n    function setRegistry(address _registry) public onlyOwner {\n        registry = Registry(_registry);\n    }\n\n    function isMarketActive(bytes32 _marketId) public view returns (bool) {\n        return markets[_marketId].tokenContract != address(0) && markets[_marketId].tokenContractTo != address(0);\n    }\n\n    /**\n     * Add a new Kyber market\n     * @param _marketStrId String id of market. eg. \"ETH/DAI\"\n     * @param _tokenContract Address \"From\" of ERC20 Token on Kyber market.\n     * @param _tokenContractTo Address \"To\" of ERC20 Token on Kyber market.\n     * @return marketId bytes32 keccak256 of the _marketStrId\n     */\n    function addMarket(\n        string calldata _marketStrId,\n        address _tokenContract,\n        address _tokenContractTo\n    )\n        external\n        onlyOwner\n        returns (bytes32 marketId)\n    {\n        marketId = keccak256(abi.encodePacked(_marketStrId));\n\n        markets[marketId] = Market(\n            _tokenContract,\n            _tokenContractTo,\n            // store the call signature to get market price for those tokens\n            abi.encodeWithSelector(\n                getExpectedRateCallSig,\n                _tokenContract,\n                _tokenContractTo,\n                1 ether | BITMASK_EXCLUDE_PERMISSIONLESS\n            )\n        );\n        marketNames[marketId] = _marketStrId;\n\n        emit LogPriceFeedsKyberMarketAdded(marketId, _marketStrId);\n    }\n\n    function removeMarket(bytes32 _marketId)\n        external\n        onlyOwner\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\n    {\n        markets[_marketId] = Market(address(0x0), address(0x0), abi.encode(0x0));\n        emit LogPriceFeedsKyberMarketRemoved(_marketId);\n    }\n\n    function getMarket(bytes32 _marketId)\n        public\n        view\n        returns (address tokenContract, address tokenContractTo, bytes memory encodedCall)\n    {\n        Market memory market = markets[_marketId];\n        tokenContract = market.tokenContract;\n        tokenContractTo = market.tokenContractTo;\n        encodedCall = market.encodedCall;\n    }\n\n    function read(bytes32 _marketId) public view returns (uint priceValue) {\n        Market storage market = markets[_marketId];\n\n        bool success;\n        bytes memory rspData;\n        (success, rspData) = address(registry.getKyberNetworkProxy()).staticcall(\n            market.encodedCall\n        );\n\n        if (!success) {\n            revert(REASON_KYBER_PRICE_CALL_FAILED);\n        }\n\n        (priceValue, ) = abi.decode(rspData, (uint, uint));\n    }\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/feeds/PriceFeedsKyber.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-08-03T21:35:28.312Z",
  "devdoc": {
    "methods": {
      "addMarket(string,address,address)": {
        "params": {
          "_marketStrId": "String id of market. eg. \"ETH/DAI\"",
          "_tokenContract": "Address \"From\" of ERC20 Token on Kyber market.",
          "_tokenContractTo": "Address \"To\" of ERC20 Token on Kyber market."
        },
        "return": "marketId bytes32 keccak256 of the _marketStrId"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMarket(string,address,address)": {
        "notice": "Add a new Kyber market"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Market prices from the Kyber Network: https://developer.kyber.network/docs/API_ABI-KyberNetworkProxy/"
  }
}