{
  "contractName": "PriceFeedsInternal",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "daemonAccount",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "marketNames",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bytesId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "strId",
          "type": "string"
        }
      ],
      "name": "LogPriceFeedsInternalMarketAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "name": "LogPriceFeedsInternalMarketRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogPriceFeedsInternalPush",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "isMarketActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isDaemon",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_daemon",
          "type": "address"
        }
      ],
      "name": "setDaemonAccount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "read",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketStrId",
          "type": "string"
        }
      ],
      "name": "addMarket",
      "outputs": [
        {
          "name": "marketId",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketId",
          "type": "bytes32"
        }
      ],
      "name": "removeMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"daemonAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"marketNames\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketStrId\",\"type\":\"string\"}],\"name\":\"addMarket\",\"outputs\":[{\"name\":\"marketId\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"removeMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"read\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"markets\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isDaemon\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_daemon\",\"type\":\"address\"}],\"name\":\"setDaemonAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketId\",\"type\":\"bytes32\"}],\"name\":\"isMarketActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bytesId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"strId\",\"type\":\"string\"}],\"name\":\"LogPriceFeedsInternalMarketAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"}],\"name\":\"LogPriceFeedsInternalMarketRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogPriceFeedsInternalPush\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addMarket(string)\":{\"params\":{\"_marketStrId\":\"String id of market something like \\\"Poloniex_BTC_ETH\\\"\\r\"},\"return\":\"marketId bytes32 keccak256 of the _marketStrId\\r\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"push(bytes32,uint256,uint256)\":{\"params\":{\"_timestamp\":\"UNIX milliseconds timestamp of the read\\r\",\"_value\":\"Read value * (10^decimals). See decimal description above.\\r\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"addMarket(string)\":{\"notice\":\"Add a new market\\r\"},\"push(bytes32,uint256,uint256)\":{\"notice\":\"Push value and timestamp of read into the contract.\\r\"},\"read(bytes32)\":{\"notice\":\"Read the latest value and timestamp from the contract.\\r\"},\"removeMarket(bytes32)\":{\"notice\":\"Removes a market.\\r\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"notice\":\"Market prices feeds coming from 0xfutures managed price feeds.\\r These are centralised feeds pushed on to the blockchain.\\r Example: Coinbase BTCUSD price feed\\r\"}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsInternal.sol\":\"PriceFeedsInternal\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0x3fcf0d97ad97399402274b04b62f704f714bd84e0cf8d173337cdc983f1e8608\",\"urls\":[\"bzzr://30f2233a4e3d87dc3a395f921d8aed6139f911bbfb1677fa696a39639bcd005b\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/feeds/PriceFeedsInternal.sol\":{\"keccak256\":\"0x89902441c5dd11a546d38c0e8ccbf4e163dc10a609cd3c0ab4b021e9b2a90c0d\",\"urls\":[\"bzzr://5679d5873d793e9103648639e1fb62a7b6bba7f187ac0f7762ec178294353f00\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]}},\"version\":1}",
  "bytecode": "0x608060408190526012600155600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610b1f8061005c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637564912b1161009757806392f4b0b31161006657806392f4b0b314610398578063e649d78c146103c1578063f2fde38b146103e7578063f4463db51461040d576100f5565b80637564912b1461034f57806380957015146103805780638da5cb5b146103885780638f32d59b14610390576100f5565b806342fe6695116100d357806342fe6695146102825780635c5212dd146102f257806361da143914610311578063715018a614610347576100f5565b80630baeb69a146101b2578063313ce567146101d657806341955214146101f0575b6040518060400160405280601c81526020017f43616e27742063616c6c2066616c6c6261636b2066756e6374696f6e00000000815250604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6101ba61042a565b604080516001600160a01b039092168252519081900360200190f35b6101de610439565b60408051918252519081900360200190f35b61020d6004803603602081101561020657600080fd5b503561043f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024757818101518382015260200161022f565b50505050905090810190601f1680156102745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101de6004803603602081101561029857600080fd5b8101906020810181356401000000008111156102b357600080fd5b8201836020820111156102c557600080fd5b803590602001918460018302840111640100000000831117156102e757600080fd5b5090925090506104da565b61030f6004803603602081101561030857600080fd5b50356105b6565b005b61032e6004803603602081101561032757600080fd5b50356106a9565b6040805192835260208301919091528051918290030190f35b61030f610733565b61036c6004803603602081101561036557600080fd5b503561078e565b604080519115158252519081900360200190f35b61036c6107a3565b6101ba6107b5565b61036c6107c4565b61030f600480360360608110156103ae57600080fd5b50803590602081013590604001356107d5565b61030f600480360360208110156103d757600080fd5b50356001600160a01b0316610925565b61030f600480360360208110156103fd57600080fd5b50356001600160a01b0316610958565b61036c6004803603602081101561042357600080fd5b5035610975565b6004546001600160a01b031681565b60015481565b60036020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156104d25780601f106104a7576101008083540402835291602001916104d2565b820191906000526020600020905b8154815290600101906020018083116104b557829003601f168201915b505050505081565b60006104e46107c4565b6104ed57600080fd5b8282604051602001808383808284376040805191909301818103601f19018252835280516020918201206000818152600283528481208054600160ff19909116179055600390925292902091955061054e9450909250869150859050610a12565b50807f841e82cad4a100e3997b0c3d76c329c2cee8720bf04af5e890bb904c1fa90e88848460405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a292915050565b6105be6107c4565b6105c757600080fd5b6105d081610975565b604051806060016040528060258152602001610aab60259139808261063957604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b506000838152600260209081526040808320805460ff19169055805180820182528381528083018481528785526005909352818420905181559151600192909201919091555184917f4b9ff7c6404c1f870ba7a00b727dcfd9ae5af0299f39d19dc2e4b60622f04b3d91a2505050565b6000806106b583610975565b604051806060016040528060258152602001610aab60259139808261071e57604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b506107288561098a565b935093505050915091565b61073b6107c4565b61074457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60026020526000908152604090205460ff1681565b6004546001600160a01b031633145b90565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6107dd6107a3565b604051806060016040528060248152602001610ad060249139808261084657604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b5061085085610975565b604051806060016040528060258152602001610aab6025913980826108b957604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b50604080518082018252878152602080820188815260008b81526005835284902092518355516001909201919091558151888152915187928a927fa9c24b8fa6727fcb2af1b00f75ac512750449a799a5725ec59c20cbcc9944d5092918290030190a350505050505050565b61092d6107c4565b61093657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6109606107c4565b61096957600080fd5b610972816109a4565b50565b60009081526002602052604090205460ff1690565b600090815260056020526040902080546001909101549091565b6001600160a01b0381166109b757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a535782800160ff19823516178555610a80565b82800160010185558215610a80579182015b82811115610a80578235825591602001919060010190610a65565b50610a8c929150610a90565b5090565b6107b291905b80821115610a8c5760008155600101610a9656fe4d61726b6574206d7573742062652061637469766520746f207075736820612076616c756543616c6c6572206d757374206265207468652072656769737465726564204461656d6f6ea165627a7a72305820a2ca66bc89ffaddc66386ad1fb70fae2fe8dc501dab6b94cfe050e4aeef29d3c0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80637564912b1161009757806392f4b0b31161006657806392f4b0b314610398578063e649d78c146103c1578063f2fde38b146103e7578063f4463db51461040d576100f5565b80637564912b1461034f57806380957015146103805780638da5cb5b146103885780638f32d59b14610390576100f5565b806342fe6695116100d357806342fe6695146102825780635c5212dd146102f257806361da143914610311578063715018a614610347576100f5565b80630baeb69a146101b2578063313ce567146101d657806341955214146101f0575b6040518060400160405280601c81526020017f43616e27742063616c6c2066616c6c6261636b2066756e6374696f6e00000000815250604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6101ba61042a565b604080516001600160a01b039092168252519081900360200190f35b6101de610439565b60408051918252519081900360200190f35b61020d6004803603602081101561020657600080fd5b503561043f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561024757818101518382015260200161022f565b50505050905090810190601f1680156102745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101de6004803603602081101561029857600080fd5b8101906020810181356401000000008111156102b357600080fd5b8201836020820111156102c557600080fd5b803590602001918460018302840111640100000000831117156102e757600080fd5b5090925090506104da565b61030f6004803603602081101561030857600080fd5b50356105b6565b005b61032e6004803603602081101561032757600080fd5b50356106a9565b6040805192835260208301919091528051918290030190f35b61030f610733565b61036c6004803603602081101561036557600080fd5b503561078e565b604080519115158252519081900360200190f35b61036c6107a3565b6101ba6107b5565b61036c6107c4565b61030f600480360360608110156103ae57600080fd5b50803590602081013590604001356107d5565b61030f600480360360208110156103d757600080fd5b50356001600160a01b0316610925565b61030f600480360360208110156103fd57600080fd5b50356001600160a01b0316610958565b61036c6004803603602081101561042357600080fd5b5035610975565b6004546001600160a01b031681565b60015481565b60036020908152600091825260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156104d25780601f106104a7576101008083540402835291602001916104d2565b820191906000526020600020905b8154815290600101906020018083116104b557829003601f168201915b505050505081565b60006104e46107c4565b6104ed57600080fd5b8282604051602001808383808284376040805191909301818103601f19018252835280516020918201206000818152600283528481208054600160ff19909116179055600390925292902091955061054e9450909250869150859050610a12565b50807f841e82cad4a100e3997b0c3d76c329c2cee8720bf04af5e890bb904c1fa90e88848460405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a292915050565b6105be6107c4565b6105c757600080fd5b6105d081610975565b604051806060016040528060258152602001610aab60259139808261063957604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b506000838152600260209081526040808320805460ff19169055805180820182528381528083018481528785526005909352818420905181559151600192909201919091555184917f4b9ff7c6404c1f870ba7a00b727dcfd9ae5af0299f39d19dc2e4b60622f04b3d91a2505050565b6000806106b583610975565b604051806060016040528060258152602001610aab60259139808261071e57604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b506107288561098a565b935093505050915091565b61073b6107c4565b61074457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60026020526000908152604090205460ff1681565b6004546001600160a01b031633145b90565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6107dd6107a3565b604051806060016040528060248152602001610ad060249139808261084657604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b5061085085610975565b604051806060016040528060258152602001610aab6025913980826108b957604051600160e51b62461bcd02815260206004820181815283516024840152835190928392604490910191908501908083836000831561017757818101518382015260200161015f565b50604080518082018252878152602080820188815260008b81526005835284902092518355516001909201919091558151888152915187928a927fa9c24b8fa6727fcb2af1b00f75ac512750449a799a5725ec59c20cbcc9944d5092918290030190a350505050505050565b61092d6107c4565b61093657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6109606107c4565b61096957600080fd5b610972816109a4565b50565b60009081526002602052604090205460ff1690565b600090815260056020526040902080546001909101549091565b6001600160a01b0381166109b757600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a535782800160ff19823516178555610a80565b82800160010185558215610a80579182015b82811115610a80578235825591602001919060010190610a65565b50610a8c929150610a90565b5090565b6107b291905b80821115610a8c5760008155600101610a9656fe4d61726b6574206d7573742062652061637469766520746f207075736820612076616c756543616c6c6572206d757374206265207468652072656769737465726564204461656d6f6ea165627a7a72305820a2ca66bc89ffaddc66386ad1fb70fae2fe8dc501dab6b94cfe050e4aeef29d3c0029",
  "sourceMap": "296:4011:14:-;;;;;1044:2;1021:25;;515:6:19;:19;;-1:-1:-1;;;;;;515:19:19;524:10;515:19;;;;-1:-1:-1;;;;;582:6:19;;549:40;;515:6;;549:40;296:4011:14;;;;;;",
  "deployedSourceMap": "296:4011:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;296:4011:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4278:15;;;;;;;;;;;;;;;;;4271:23;;-1:-1:-1;;;;;4271:23:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4271:23:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:28;;;:::i;:::-;;;;-1:-1:-1;;;;;1543:28:14;;;;;;;;;;;;;;1021:25;;;:::i;:::-;;;;;;;;;;;;;;;;1410:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1410:45:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1410:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:352;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3429:352:14;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3429:352:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3429:352:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3429:352:14;;-1:-1:-1;3429:352:14;-1:-1:-1;3429:352:14;:::i;3833:369::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3833:369:14;;:::i;:::-;;2751:240;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2751:240:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1347:137:19;;;:::i;1144:39:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1144:39:14;;:::i;:::-;;;;;;;;;;;;;;;;;;1580:100;;;:::i;659:77:19:-;;;:::i;979:90::-;;;:::i;2265:397:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2265:397:14;;;;;;;;;;;;:::i;1688:102::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1688:102:14;-1:-1:-1;;;;;1688:102:14;;:::i;1655:107:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:19;-1:-1:-1;;;;;1655:107:19;;:::i;1192:114:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1192:114:14;;:::i;1543:28::-;;;-1:-1:-1;;;;;1543:28:14;;:::o;1021:25::-;;;;:::o;1410:45::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1410:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3429:352::-;3533:16;863:9:19;:7;:9::i;:::-;855:18;;;;;;3605:12:14;;3588:30;;;;;;;30:3:-1;22:6;14;1:33;3588:30:14;;;45:16:-1;;;;26:21;;;-1:-1;;22:32;6:49;;3588:30:14;;3578:41;;49:4:-1;3578:41:14;;;;3630:17;;;;:7;:17;;;;;:24;;3650:4;-1:-1:-1;;3630:24:14;;;;;;3665:11;:21;;;;;;3578:41;;-1:-1:-1;3665:36:14;;-1:-1:-1;3665:21:14;;-1:-1:-1;3689:12:14;;-1:-1:-1;3689:12:14;;-1:-1:-1;3665:36:14;:::i;:::-;;3750:8;3717:56;3760:12;;3717:56;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;3717:56:14;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;3717:56:14;;;;-1:-1:-1;3717:56:14;;-1:-1:-1;;;;3717:56:14;3429:352;;;;:::o;3833:369::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;3929:25:14;3944:9;3929:14;:25::i;:::-;3956:28;;;;;;;;;;;;;;;;;314:6:0;303:9;295:26;;;;-1:-1:-1;;;;;295:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;295:26:0;-1:-1:-1;4023:5:14;4002:18;;;:7;:18;;;;;;;;:26;;-1:-1:-1;;4002:26:14;;;4063:15;;;;;;;;;;;;;;;;4039:21;;;:10;:21;;;;;;:39;;;;;;4002:26;4039:39;;;;;;;;4094:45;4010:9;;4094:45;;;883:1:19;;3833:369:14;:::o;2751:240::-;2909:10;2921:14;2834:25;2849:9;2834:14;:25::i;:::-;2861:28;;;;;;;;;;;;;;;;;314:6:0;303:9;295:26;;;;-1:-1:-1;;;;;295:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;295:26:0;;2960:23:14;2973:9;2960:12;:23::i;:::-;2953:30;;;;2751:240;;;;;:::o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:19;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:19;;;1347:137::o;1144:39:14:-;;;;;;;;;;;;;;;:::o;1580:100::-;1659:13;;-1:-1:-1;;;;;1659:13:14;1645:10;:27;1580:100;;:::o;659:77:19:-;697:7;723:6;-1:-1:-1;;;;;723:6:19;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;2265:397:14:-;2398:10;:8;:10::i;:::-;2410:26;;;;;;;;;;;;;;;;;314:6:0;303:9;295:26;;;;-1:-1:-1;;;;;295:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;295:26:0;;2456:25:14;2471:9;2456:14;:25::i;:::-;2483:28;;;;;;;;;;;;;;;;;314:6:0;303:9;295:26;;;;-1:-1:-1;;;;;295:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;295:26:0;-1:-1:-1;2553:29:14;;;;;;;;;;;;;;;;;;-1:-1:-1;2529:21:14;;;:10;:21;;;;;:53;;;;;;;;;;;;;2598:56;;;;;;;2571:10;;2540:9;;2598:56;;;;;;;;;332:1:0;;2265:397:14;;;;;:::o;1688:102::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1759:13:14;:23;;-1:-1:-1;;;;;;1759:23:14;-1:-1:-1;;;;;1759:23:14;;;;;;;;;;1688:102::o;1655:107:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1192:114:14:-;1256:4;1280:18;;;:7;:18;;;;;;;;;1192:114::o;2999:232::-;3090:10;3142:21;;;:10;:21;;;;;:27;;3192:31;;;;;3142:27;;2999:232::o;1906:183:19:-;-1:-1:-1;;;;;1979:22:19;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:19;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:19;-1:-1:-1;;;;;2065:17:19;;;;;;;;;;1906:183::o;296:4011:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;296:4011:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;296:4011:14;;;-1:-1:-1;296:4011:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\nimport \"../DBC.sol\";\r\n\r\n/**\r\n * Market prices feeds coming from 0xfutures managed price feeds.\r\n * These are centralised feeds pushed on to the blockchain.\r\n * Example: Coinbase BTCUSD price feed\r\n */\r\n\r\ncontract PriceFeedsInternal is DBC, Ownable {\r\n\r\n    event LogPriceFeedsInternalMarketAdded(bytes32 indexed bytesId, string strId);\r\n    event LogPriceFeedsInternalMarketRemoved(bytes32 indexed marketId);\r\n    event LogPriceFeedsInternalPush(bytes32 indexed marketId, uint indexed timestamp, uint value);\r\n\r\n    string constant REASON_MUST_BE_FROM_DAEMON = \"Caller must be the registered Daemon\";\r\n    string constant REASON_MUST_BE_ACTIVE_MARKET = \"Market must be active to push a value\";\r\n    string constant REASON_FALLBACK = \"Can't call fallback function\";\r\n\r\n    /**\r\n     * Prices are stored as uint shifted for 18 decimals places.\r\n     *\r\n     * For example 1.23456789 is stored as 1234567890000000000.\r\n     */\r\n    uint public decimals = 18;\r\n\r\n\r\n    /**\r\n     * Active markets - market active if markets[market_id] is true\r\n     */\r\n    mapping(bytes32 => bool) public markets;\r\n\r\n    function isMarketActive(bytes32 _marketId) public view returns (bool) {\r\n        return markets[_marketId];\r\n    }\r\n\r\n    /**\r\n     * Mapping from the market id to the string form. eg. \"Poloniex_BTC_ETH\"\r\n     */\r\n    mapping(bytes32 => string) public marketNames;\r\n\r\n\r\n    /**\r\n     * Daemon - account that pushes new price feed values\r\n     */\r\n    address public daemonAccount;\r\n\r\n    function isDaemon() public view returns (bool) {\r\n        return msg.sender == daemonAccount;\r\n    }\r\n\r\n    function setDaemonAccount(address _daemon) public onlyOwner {\r\n        daemonAccount = _daemon;\r\n    }\r\n\r\n\r\n    /**\r\n     * Feed data - by market\r\n     */\r\n    struct DataPoint {\r\n        uint value;       // original value * (10**decimals)\r\n        uint timestamp;   // UNIX milliseconds\r\n    }\r\n    mapping(bytes32 => DataPoint) latestData;\r\n\r\n\r\n    /**\r\n     * Push value and timestamp of read into the contract.\r\n     * @param _value Read value * (10^decimals). See decimal description above.\r\n     * @param _timestamp UNIX milliseconds timestamp of the read\r\n     */\r\n    function push(\r\n        bytes32 _marketId,\r\n        uint _value,\r\n        uint _timestamp\r\n    )\r\n        external\r\n        pre_cond(isDaemon(), REASON_MUST_BE_FROM_DAEMON)\r\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\r\n    {\r\n        latestData[_marketId] = DataPoint(_value, _timestamp);\r\n        emit LogPriceFeedsInternalPush(_marketId, _timestamp, _value);\r\n    }\r\n\r\n    /**\r\n     * Read the latest value and timestamp from the contract.\r\n     */\r\n    function read(bytes32 _marketId)\r\n        external\r\n        view\r\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\r\n        returns (uint value, uint timestamp)\r\n    {\r\n        return readInternal(_marketId);\r\n    }\r\n\r\n    function readInternal(bytes32 _marketId)\r\n        internal\r\n        view\r\n        returns (uint value, uint timestamp)\r\n    {\r\n        value = latestData[_marketId].value;\r\n        timestamp = latestData[_marketId].timestamp;\r\n    }\r\n\r\n\r\n    /**\r\n     * Add a new market\r\n     * @param _marketStrId String id of market something like \"Poloniex_BTC_ETH\"\r\n     * @return marketId bytes32 keccak256 of the _marketStrId\r\n     */\r\n    function addMarket(string calldata _marketStrId)\r\n        external\r\n        onlyOwner\r\n        returns (bytes32 marketId)\r\n    {\r\n        marketId = keccak256(abi.encodePacked(_marketStrId));\r\n        markets[marketId] = true;\r\n        marketNames[marketId] = _marketStrId;\r\n        emit LogPriceFeedsInternalMarketAdded(marketId, _marketStrId);\r\n    }\r\n\r\n    /**\r\n     * Removes a market.\r\n     */\r\n    function removeMarket(bytes32 _marketId)\r\n        external\r\n        onlyOwner\r\n        pre_cond(isMarketActive(_marketId), REASON_MUST_BE_ACTIVE_MARKET)\r\n    {\r\n        markets[_marketId] = false;\r\n        latestData[_marketId] = DataPoint(0, 0);\r\n        emit LogPriceFeedsInternalMarketRemoved(_marketId);\r\n        // TODO: provide a withdraw and mark balances\r\n    }\r\n\r\n    // Disable the fallback\r\n    function () external {\r\n        revert(REASON_FALLBACK);\r\n    }\r\n\r\n}",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\feeds\\PriceFeedsInternal.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-16T06:11:23.339Z",
  "devdoc": {
    "methods": {
      "addMarket(string)": {
        "params": {
          "_marketStrId": "String id of market something like \"Poloniex_BTC_ETH\"\r"
        },
        "return": "marketId bytes32 keccak256 of the _marketStrId\r"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "push(bytes32,uint256,uint256)": {
        "params": {
          "_timestamp": "UNIX milliseconds timestamp of the read\r",
          "_value": "Read value * (10^decimals). See decimal description above.\r"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMarket(string)": {
        "notice": "Add a new market\r"
      },
      "push(bytes32,uint256,uint256)": {
        "notice": "Push value and timestamp of read into the contract.\r"
      },
      "read(bytes32)": {
        "notice": "Read the latest value and timestamp from the contract.\r"
      },
      "removeMarket(bytes32)": {
        "notice": "Removes a market.\r"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "notice": "Market prices feeds coming from 0xfutures managed price feeds.\r These are centralised feeds pushed on to the blockchain.\r Example: Coinbase BTCUSD price feed\r"
  }
}