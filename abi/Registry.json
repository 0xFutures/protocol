{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allCFDs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCFDFactoryLatest",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setCFDFactoryLatest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDAI",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setDAI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getKyberNetworkProxy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setKyberNetworkProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProxyCodeHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "setProxyCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdAddr",
          "type": "address"
        }
      ],
      "name": "addCFD",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allCFDs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCFDFactoryLatest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setKyberNetworkProxy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKyberNetworkProxy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdAddr\",\"type\":\"address\"}],\"name\":\"addCFD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDAI\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"setProxyCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setCFDFactoryLatest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setDAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProxyCodeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0x2703d1c87ddd66da66c110570d5e896848f21d3fea0a860ab3ac7cac007a1755\",\"urls\":[\"bzzr://df2ab637255c3194b717f3c9a857bc8d55ba4dddd4605621b48f75e9bb4fcd94\"]},\"/home/julien/0xFutures/protocol/contracts/kyber/KyberNetworkProxyInterface.sol\":{\"keccak256\":\"0x0e3fe90852ca500af9457df99c1aec660ae2bdddb170c444881b1f6f796ce91c\",\"urls\":[\"bzzr://8c7ac792da4b76214844068529a0fcdb6bc821e866e0711786958e4ba7a69374\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361079e806100576000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638ef855681161008c578063b4a8696211610066578063b4a86962146101e0578063b97dbf5914610206578063e37af2d11461022c578063f2fde38b14610246576100ea565b80638ef855681461019f5780638f32d59b146101a7578063a6ab325c146101c3576100ea565b806346756190116100c85780634675619014610161578063715018a61461016957806376d00fd8146101715780638da5cb5b14610197576100ea565b80630c5a95f8146100ef57806323ec7f2a14610131578063277206dd14610139575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b031661026c565b604080516001600160a01b039092168252519081900360200190f35b610115610287565b61015f6004803603602081101561014f57600080fd5b50356001600160a01b03166102c2565b005b61011561030c565b61015f610343565b61015f6004803603602081101561018757600080fd5b50356001600160a01b031661039e565b610115610493565b6101156104a2565b6101af6104cb565b604080519115158252519081900360200190f35b61015f600480360360208110156101d957600080fd5b50356104dc565b61015f600480360360208110156101f657600080fd5b50356001600160a01b03166104f2565b61015f6004803603602081101561021c57600080fd5b50356001600160a01b0316610538565b610234610571565b60408051918252519081900360200190f35b61015f6004803603602081101561025c57600080fd5b50356001600160a01b0316610577565b6003602052600090815260409020546001600160a01b031681565b60006102bd604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd02815250610591565b905090565b6102ca6104cb565b6102d357600080fd5b610309604051806040016040528060118152602001600160781b704b796265724e6574776f726b50726f78790281525082610622565b50565b60006102bd604051806040016040528060118152602001600160781b704b796265724e6574776f726b50726f787902815250610591565b61034b6104cb565b61035457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006103a8610287565b9050806001600160a01b0316336001600160a01b03161460405180606001604052806028815260200161074b602891399061046457604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610429578181015183820152602001610411565b50505050905090810190601f1680156104565780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b60006102bd604051806040016040528060038152602001600160e81b6244414902815250610591565b6000546001600160a01b0316331490565b6104e46104cb565b6104ed57600080fd5b600255565b6104fa6104cb565b61050357600080fd5b610309604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd0281525082610622565b6105406104cb565b61054957600080fd5b610309604051806040016040528060038152602001600160e81b624441490281525082610622565b60025490565b61057f6104cb565b61058857600080fd5b610309816106dc565b600060016000836040516020018082805190602001908083835b602083106105ca5780518252601f1990920191602091820191016105ab565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528452815191810191909120865285019590955292909201600020546001600160a01b031695945050505050565b61062a6104cb565b61063357600080fd5b8060016000846040516020018082805190602001908083835b6020831061066b5780518252601f19909201916020918201910161064c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6001600160a01b0381166106ef57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f6e6c79206c61746573742043464420466163746f72792063616e20616464206e65772043464473a165627a7a72305820f00d19abee16961a49e2082f6ca0e7fba4d337320a8be699e130569718836ec40029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638ef855681161008c578063b4a8696211610066578063b4a86962146101e0578063b97dbf5914610206578063e37af2d11461022c578063f2fde38b14610246576100ea565b80638ef855681461019f5780638f32d59b146101a7578063a6ab325c146101c3576100ea565b806346756190116100c85780634675619014610161578063715018a61461016957806376d00fd8146101715780638da5cb5b14610197576100ea565b80630c5a95f8146100ef57806323ec7f2a14610131578063277206dd14610139575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b031661026c565b604080516001600160a01b039092168252519081900360200190f35b610115610287565b61015f6004803603602081101561014f57600080fd5b50356001600160a01b03166102c2565b005b61011561030c565b61015f610343565b61015f6004803603602081101561018757600080fd5b50356001600160a01b031661039e565b610115610493565b6101156104a2565b6101af6104cb565b604080519115158252519081900360200190f35b61015f600480360360208110156101d957600080fd5b50356104dc565b61015f600480360360208110156101f657600080fd5b50356001600160a01b03166104f2565b61015f6004803603602081101561021c57600080fd5b50356001600160a01b0316610538565b610234610571565b60408051918252519081900360200190f35b61015f6004803603602081101561025c57600080fd5b50356001600160a01b0316610577565b6003602052600090815260409020546001600160a01b031681565b60006102bd604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd02815250610591565b905090565b6102ca6104cb565b6102d357600080fd5b610309604051806040016040528060118152602001600160781b704b796265724e6574776f726b50726f78790281525082610622565b50565b60006102bd604051806040016040528060118152602001600160781b704b796265724e6574776f726b50726f787902815250610591565b61034b6104cb565b61035457600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006103a8610287565b9050806001600160a01b0316336001600160a01b03161460405180606001604052806028815260200161074b602891399061046457604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610429578181015183820152602001610411565b50505050905090810190601f1680156104565780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b60006102bd604051806040016040528060038152602001600160e81b6244414902815250610591565b6000546001600160a01b0316331490565b6104e46104cb565b6104ed57600080fd5b600255565b6104fa6104cb565b61050357600080fd5b610309604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd0281525082610622565b6105406104cb565b61054957600080fd5b610309604051806040016040528060038152602001600160e81b624441490281525082610622565b60025490565b61057f6104cb565b61058857600080fd5b610309816106dc565b600060016000836040516020018082805190602001908083835b602083106105ca5780518252601f1990920191602091820191016105ab565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528452815191810191909120865285019590955292909201600020546001600160a01b031695945050505050565b61062a6104cb565b61063357600080fd5b8060016000846040516020018082805190602001908083835b6020831061066b5780518252601f19909201916020918201910161064c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6001600160a01b0381166106ef57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f6e6c79206c61746573742043464420466163746f72792063616e20616464206e65772043464473a165627a7a72305820f00d19abee16961a49e2082f6ca0e7fba4d337320a8be699e130569718836ec40029",
  "sourceMap": "223:2401:3:-;;;;;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;-1:-1:-1;;;;;582:6:17;;549:40;;515:6;;549:40;223:2401:3;;;;;;",
  "deployedSourceMap": "223:2401:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;223:2401:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2265:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2265:42:3;-1:-1:-1;;;;;2265:42:3;;:::i;:::-;;;;-1:-1:-1;;;;;2265:42:3;;;;;;;;;;;;;;603:112;;;:::i;1191:114::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1191:114:3;-1:-1:-1;;;;;1191:114:3;;:::i;:::-;;1024:161;;;:::i;1347:137:17:-;;;:::i;2314:306:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2314:306:3;-1:-1:-1;;;;;2314:306:3;;:::i;659:77:17:-;;;:::i;839:89:3:-;;;:::i;979:90:17:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1412:96:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1412:96:3;;:::i;721:112::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;721:112:3;-1:-1:-1;;;;;721:112:3;;:::i;934:84::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;934:84:3;-1:-1:-1;;;;;934:84:3;;:::i;1311:95::-;;;:::i;:::-;;;;;;;;;;;;;;;;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;2265:42:3:-;;;;;;;;;;;;-1:-1:-1;;;;;2265:42:3;;:::o;603:112::-;655:7;681:27;685:22;;;;;;;;;;;;;-1:-1:-1;;;;;685:22:3;;;681:3;:27::i;:::-;674:34;;603:112;:::o;1191:114::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1263:35:3;1267:23;;;;;;;;;;;;;-1:-1:-1;;;;;1267:23:3;;;1292:5;1263:3;:35::i;:::-;1191:114;:::o;1024:161::-;1077:26;1149:28;1153:23;;;;;;;;;;;;;-1:-1:-1;;;;;1153:23:3;;;1149:3;:28::i;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;2314:306:3:-;2365:25;2393:21;:19;:21::i;:::-;2365:49;;2517:17;-1:-1:-1;;;;;2503:31:3;:10;-1:-1:-1;;;;;2503:31:3;;2536:29;;;;;;;;;;;;;;;;;2495:71;;;;;-1:-1:-1;;;;;2495:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2495:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2576:17:3;;;;;;;:7;:17;;;;;:37;;-1:-1:-1;;;;;;2576:37:3;;;;;;;;2314:306::o;659:77:17:-;697:7;723:6;-1:-1:-1;;;;;723:6:17;659:77;:::o;839:89:3:-;878:5;908:12;912:7;;;;;;;;;;;;;-1:-1:-1;;;;;912:7:3;;;908:3;:12::i;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;1412:96:3:-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1480:13:3;:21;1412:96::o;721:112::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;792:34:3;796:22;;;;;;;;;;;;;-1:-1:-1;;;;;796:22:3;;;820:5;792:3;:34::i;934:84::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;992:19:3;996:7;;;;;;;;;;;;;-1:-1:-1;;;;;996:7:3;;;1005:5;992:3;:19::i;1311:95::-;1386:13;;1311:95;:::o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;1657:139:3:-;1713:12;1744:9;:45;1781:5;1764:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1764:23:3;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;1764:23:3;;1754:34;;;;;;;;;1744:45;;;;;;;;;;;;-1:-1:-1;1744:45:3;;-1:-1:-1;;;;;1744:45:3;;;-1:-1:-1;;;;;1657:139:3:o;1514:137::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1639:5:3;1591:9;:45;1628:5;1611:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1611:23:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1611:23:3;;;1601:34;;;;;;1591:45;;;;;;;;;;;;:53;;;;;-1:-1:-1;;;;;1591:53:3;;;;;-1:-1:-1;;;;;1591:53:3;;;;;;1514:137;;:::o;1906:183:17:-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./DBC.sol\";\nimport \"./kyber/KyberNetworkProxyInterface.sol\";\n\ncontract Registry is DBC, Ownable {\n\n    string constant REASON_MUST_BE_LATEST_FACTORY = \"Only latest CFD Factory can add new CFDs\";\n\n    string constant KEY_CFD_FACTORY_LATEST = \"CFDFactoryLatest\";\n    string constant KEY_DAI = \"DAI\";\n    string constant KEY_KYBER_NETWORK_PROXY = \"KyberNetworkProxy\";\n\n    mapping(bytes32 => address) contracts;\n\n    bytes32 proxyCodeHash;\n\n    function getCFDFactoryLatest() public view returns (address) {\n        return get(KEY_CFD_FACTORY_LATEST);\n    }\n\n    function setCFDFactoryLatest(address _addr) public onlyOwner {\n        set(KEY_CFD_FACTORY_LATEST, _addr);\n    }\n\n    function getDAI() public view returns (ERC20) {\n        return ERC20(get(KEY_DAI));\n    }\n\n    function setDAI(address _addr) public onlyOwner {\n        set(KEY_DAI, _addr);\n    }\n\n    function getKyberNetworkProxy() public view returns (KyberNetworkProxyInterface) {\n        return KyberNetworkProxyInterface(get(KEY_KYBER_NETWORK_PROXY));\n    }\n\n    function setKyberNetworkProxy(address _addr) public onlyOwner {\n        set(KEY_KYBER_NETWORK_PROXY, _addr);\n    }\n\n    function getProxyCodeHash() public view returns (bytes32) {\n        return proxyCodeHash;\n    }\n\n    function setProxyCodeHash(bytes32 _hash) public onlyOwner {\n        proxyCodeHash = _hash;\n    }\n\n    function set(string memory _name, address _addr) private onlyOwner {\n        contracts[keccak256(abi.encodePacked(_name))] = _addr;\n    }\n\n    function get(string memory _name) private view returns (address addr) {\n        addr = contracts[keccak256(abi.encodePacked(_name))];\n    }\n\n\n    /*\n     * A registry of ALL CFDs created across any version set of the contracts.\n     *\n     * The mapping is from CFD address to CFDFactory that created it.\n     *\n     * The main reason to keep this is for the CFD upgrade mechansim to have a\n     * way to know a given CFD was created correctly through the 0xFutures\n     * mechansim and is not some dummy contract trying to onboard through\n     * the upgrade mechanism.\n     */\n    // cfd to cfd factory\n    mapping(address => address) public allCFDs;\n\n    function addCFD(address _cfdAddr) public {\n        address cfdFactoryCurrent = getCFDFactoryLatest();\n        // only the latest deployed factory is allowed to add new CFDs\n        require(msg.sender == cfdFactoryCurrent, REASON_MUST_BE_LATEST_FACTORY);\n        allCFDs[_cfdAddr] = cfdFactoryCurrent;\n    }\n\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/Registry.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-07-22T21:58:55.824Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}