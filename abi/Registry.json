{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allCFDs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCFDFactoryLatest",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setCFDFactoryLatest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFees",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDAI",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setDAI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProxyCodeHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "setProxyCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdAddr",
          "type": "address"
        }
      ],
      "name": "addCFD",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allCFDs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCFDFactoryLatest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdAddr\",\"type\":\"address\"}],\"name\":\"addCFD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDAI\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"setProxyCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setCFDFactoryLatest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setDAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFees\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProxyCodeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/julien/0xFutures/protocol-master/contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/julien/0xFutures/protocol-master/contracts/DBC.sol\":{\"keccak256\":\"0xc9c8bf071e0f5bff796bfde919237f33136d8c18a89dec61a52a0391fc76c256\",\"urls\":[\"bzzr://b44dfa0ecd91495eb61d07322588ebc1ea50fadd8bc22464e94c3d070a6b6ea1\"]},\"/home/julien/0xFutures/protocol-master/contracts/Registry.sol\":{\"keccak256\":\"0xc3d05285fc5675611471dda8da3fb9c5ea3249814f052ccb5cc34cca6cf9e7a0\",\"urls\":[\"bzzr://c77c67920314ef50909b05817c163aa42a08f5335ee82484da75ee797788b36b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610784806100576000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a275b7041161008c578063b97dbf5911610066578063b97dbf59146101fe578063db8d55f114610224578063e37af2d11461022c578063f2fde38b14610246576100ea565b8063a275b70414610195578063a6ab325c146101bb578063b4a86962146101d8576100ea565b806376d00fd8116100c857806376d00fd8146101435780638da5cb5b146101695780638ef85568146101715780638f32d59b14610179576100ea565b80630c5a95f8146100ef57806323ec7f2a14610131578063715018a614610139575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b031661026c565b604080516001600160a01b039092168252519081900360200190f35b610115610287565b6101416102c2565b005b6101416004803603602081101561015957600080fd5b50356001600160a01b031661031d565b610115610412565b610115610421565b61018161044a565b604080519115158252519081900360200190f35b610141600480360360208110156101ab57600080fd5b50356001600160a01b031661045b565b610141600480360360208110156101d157600080fd5b5035610498565b610141600480360360208110156101ee57600080fd5b50356001600160a01b03166104ae565b6101416004803603602081101561021457600080fd5b50356001600160a01b03166104f4565b61011561052d565b610234610557565b60408051918252519081900360200190f35b6101416004803603602081101561025c57600080fd5b50356001600160a01b031661055d565b6003602052600090815260409020546001600160a01b031681565b60006102bd604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd02815250610577565b905090565b6102ca61044a565b6102d357600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610327610287565b9050806001600160a01b0316336001600160a01b03161460405180606001604052806028815260200161073160289139906103e357604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a8578181015183820152602001610390565b50505050905090810190601f1680156103d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b60006102bd604051806040016040528060038152602001600160e81b6244414902815250610577565b6000546001600160a01b0316331490565b61046361044a565b61046c57600080fd5b610495604051806040016040528060048152602001600160e01b63466565730281525082610608565b50565b6104a061044a565b6104a957600080fd5b600255565b6104b661044a565b6104bf57600080fd5b610495604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd0281525082610608565b6104fc61044a565b61050557600080fd5b610495604051806040016040528060038152602001600160e81b624441490281525082610608565b60006102bd604051806040016040528060048152602001600160e01b634665657302815250610577565b60025490565b61056561044a565b61056e57600080fd5b610495816106c2565b600060016000836040516020018082805190602001908083835b602083106105b05780518252601f199092019160209182019101610591565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528452815191810191909120865285019590955292909201600020546001600160a01b031695945050505050565b61061061044a565b61061957600080fd5b8060016000846040516020018082805190602001908083835b602083106106515780518252601f199092019160209182019101610632565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6001600160a01b0381166106d557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f6e6c79206c61746573742043464420466163746f72792063616e20616464206e65772043464473a165627a7a72305820661bd75b2a0ca81556544de97719461c8821d2d692bf7a4c16fecbf4593e8d880029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a275b7041161008c578063b97dbf5911610066578063b97dbf59146101fe578063db8d55f114610224578063e37af2d11461022c578063f2fde38b14610246576100ea565b8063a275b70414610195578063a6ab325c146101bb578063b4a86962146101d8576100ea565b806376d00fd8116100c857806376d00fd8146101435780638da5cb5b146101695780638ef85568146101715780638f32d59b14610179576100ea565b80630c5a95f8146100ef57806323ec7f2a14610131578063715018a614610139575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b031661026c565b604080516001600160a01b039092168252519081900360200190f35b610115610287565b6101416102c2565b005b6101416004803603602081101561015957600080fd5b50356001600160a01b031661031d565b610115610412565b610115610421565b61018161044a565b604080519115158252519081900360200190f35b610141600480360360208110156101ab57600080fd5b50356001600160a01b031661045b565b610141600480360360208110156101d157600080fd5b5035610498565b610141600480360360208110156101ee57600080fd5b50356001600160a01b03166104ae565b6101416004803603602081101561021457600080fd5b50356001600160a01b03166104f4565b61011561052d565b610234610557565b60408051918252519081900360200190f35b6101416004803603602081101561025c57600080fd5b50356001600160a01b031661055d565b6003602052600090815260409020546001600160a01b031681565b60006102bd604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd02815250610577565b905090565b6102ca61044a565b6102d357600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610327610287565b9050806001600160a01b0316336001600160a01b03161460405180606001604052806028815260200161073160289139906103e357604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a8578181015183820152602001610390565b50505050905090810190601f1680156103d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b60006102bd604051806040016040528060038152602001600160e81b6244414902815250610577565b6000546001600160a01b0316331490565b61046361044a565b61046c57600080fd5b610495604051806040016040528060048152602001600160e01b63466565730281525082610608565b50565b6104a061044a565b6104a957600080fd5b600255565b6104b661044a565b6104bf57600080fd5b610495604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd0281525082610608565b6104fc61044a565b61050557600080fd5b610495604051806040016040528060038152602001600160e81b624441490281525082610608565b60006102bd604051806040016040528060048152602001600160e01b634665657302815250610577565b60025490565b61056561044a565b61056e57600080fd5b610495816106c2565b600060016000836040516020018082805190602001908083835b602083106105b05780518252601f199092019160209182019101610591565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528452815191810191909120865285019590955292909201600020546001600160a01b031695945050505050565b61061061044a565b61061957600080fd5b8060016000846040516020018082805190602001908083835b602083106106515780518252601f199092019160209182019101610632565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6001600160a01b0381166106d557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f6e6c79206c61746573742043464420466163746f72792063616e20616464206e65772043464473a165627a7a72305820661bd75b2a0ca81556544de97719461c8821d2d692bf7a4c16fecbf4593e8d880029",
  "sourceMap": "174:2112:3:-;;;;;515:6:17;:19;;-1:-1:-1;;;;;;515:19:17;524:10;515:19;;;;-1:-1:-1;;;;;582:6:17;;549:40;;515:6;;549:40;174:2112:3;;;;;;",
  "deployedSourceMap": "174:2112:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:2112:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1927:42:3;-1:-1:-1;;;;;1927:42:3;;:::i;:::-;;;;-1:-1:-1;;;;;1927:42:3;;;;;;;;;;;;;;384:108;;;:::i;1347:137:17:-;;;:::i;:::-;;1976:306:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1976:306:3;-1:-1:-1;;;;;1976:306:3;;:::i;659:77:17:-;;;:::i;792:87:3:-;;;:::i;979:90:17:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;702:84:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;702:84:3;-1:-1:-1;;;;;702:84:3;;:::i;1074:96::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1074:96:3;;:::i;498:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;498:108:3;-1:-1:-1;;;;;498:108:3;;:::i;885:82::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;885:82:3;-1:-1:-1;;;;;885:82:3;;:::i;612:84::-;;;:::i;973:95::-;;;:::i;:::-;;;;;;;;;;;;;;;;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:17;-1:-1:-1;;;;;1655:107:17;;:::i;1927:42:3:-;;;;;;;;;;;;-1:-1:-1;;;;;1927:42:3;;:::o;384:108::-;436:7;462:23;;;;;;;;;;;;;;-1:-1:-1;;;;;462:23:3;;;:3;:23::i;:::-;455:30;;384:108;:::o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:17;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:17;;;1347:137::o;1976:306:3:-;2027:25;2055:21;:19;:21::i;:::-;2027:49;;2179:17;-1:-1:-1;;;;;2165:31:3;:10;-1:-1:-1;;;;;2165:31:3;;2198:29;;;;;;;;;;;;;;;;;2157:71;;;;;-1:-1:-1;;;;;2157:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2157:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2238:17:3;;;;;;;:7;:17;;;;;:37;;-1:-1:-1;;;;;;2238:37:3;;;;;;;;1976:306::o;659:77:17:-;697:7;723:6;-1:-1:-1;;;;;723:6:17;659:77;:::o;792:87:3:-;831:5;861:10;;;;;;;;;;;;;;-1:-1:-1;;;;;861:10:3;;;:3;:10::i;979:90:17:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:17;1042:10;:20;;979:90::o;702:84:3:-;863:9:17;:7;:9::i;:::-;855:18;;;;;;761::3;;;;;;;;;;;;;;-1:-1:-1;;;;;761:18:3;;;773:5;761:3;:18::i;:::-;702:84;:::o;1074:96::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1142:13:3;:21;1074:96::o;498:108::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;569:30:3;;;;;;;;;;;;;;-1:-1:-1;;;;;569:30:3;;;593:5;569:3;:30::i;885:82::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;943:17:3;;;;;;;;;;;;;;-1:-1:-1;;;;;943:17:3;;;954:5;943:3;:17::i;612:84::-;652:7;678:11;;;;;;;;;;;;;;-1:-1:-1;;;;;678:11:3;;;:3;:11::i;973:95::-;1048:13;;973:95;:::o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;1319:139:3:-;1375:12;1406:9;:45;1443:5;1426:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1426:23:3;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;1426:23:3;;1416:34;;;;;;;;;1406:45;;;;;;;;;;;;-1:-1:-1;1406:45:3;;-1:-1:-1;;;;;1406:45:3;;;-1:-1:-1;;;;;1319:139:3:o;1176:137::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;1301:5:3;1253:9;:45;1290:5;1273:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1273:23:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1273:23:3;;;1263:34;;;;;;1253:45;;;;;;;;;;;;:53;;;;;-1:-1:-1;;;;;1253:53:3;;;;;-1:-1:-1;;;;;1253:53:3;;;;;;1176:137;;:::o;1906:183:17:-;-1:-1:-1;;;;;1979:22:17;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:17;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:17;-1:-1:-1;;;;;2065:17:17;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./DBC.sol\";\n\ncontract Registry is DBC, Ownable {\n\n    string constant REASON_MUST_BE_LATEST_FACTORY = \"Only latest CFD Factory can add new CFDs\";\n\n    mapping(bytes32 => address) contracts;\n\n    bytes32 proxyCodeHash;\n\n    function getCFDFactoryLatest() public view returns (address) {\n        return get(\"CFDFactoryLatest\");\n    }\n\n    function setCFDFactoryLatest(address _addr) public onlyOwner {\n        set(\"CFDFactoryLatest\", _addr);\n    }\n\n    function getFees() public view returns (address) {\n        return get(\"Fees\");\n    }\n\n    function setFees(address _addr) public onlyOwner {\n        set(\"Fees\", _addr);\n    }\n\n    function getDAI() public view returns (ERC20) {\n        return ERC20(get(\"DAI\"));\n    }\n\n    function setDAI(address _addr) public onlyOwner {\n        set(\"DAI\", _addr);\n    }\n\n    function getProxyCodeHash() public view returns (bytes32) {\n        return proxyCodeHash;\n    }\n\n    function setProxyCodeHash(bytes32 _hash) public onlyOwner {\n        proxyCodeHash = _hash;\n    }\n\n    function set(string memory _name, address _addr) private onlyOwner {\n        contracts[keccak256(abi.encodePacked(_name))] = _addr;\n    }\n\n    function get(string memory _name) private view returns (address addr) {\n        addr = contracts[keccak256(abi.encodePacked(_name))];\n    }\n\n\n    /*\n     * A registry of ALL CFDs created across any version set of the contracts.\n     *\n     * The mapping is from CFD address to CFDFactory that created it.\n     *\n     * The main reason to keep this is for the CFD upgrade mechansim to have a\n     * way to know a given CFD was created correctly through the 0xFutures\n     * mechansim and is not some dummy contract trying to onboard through\n     * the upgrade mechanism.\n     */\n    // cfd to cfd factory\n    mapping(address => address) public allCFDs;\n\n    function addCFD(address _cfdAddr) public {\n        address cfdFactoryCurrent = getCFDFactoryLatest();\n        // only the latest deployed factory is allowed to add new CFDs\n        require(msg.sender == cfdFactoryCurrent, REASON_MUST_BE_LATEST_FACTORY);\n        allCFDs[_cfdAddr] = cfdFactoryCurrent;\n    }\n\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol-master/contracts/Registry.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-22T14:49:25.757Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}