{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allCFDs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCFDFactoryLatest",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setCFDFactoryLatest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFees",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDAI",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setDAI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdAddr",
          "type": "address"
        }
      ],
      "name": "addCFD",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604081905260008054600160a060020a0319163317808255600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610868806100576000396000f3fe6080604052600436106100b95763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630c5a95f881146100be57806323ec7f2a1461010d578063715018a61461012257806376d00fd8146101395780638da5cb5b1461016c5780638ef85568146101815780638f32d59b14610196578063a275b704146101bf578063b4a86962146101f2578063b97dbf5914610225578063db8d55f114610258578063f2fde38b1461026d575b600080fd5b3480156100ca57600080fd5b506100f1600480360360208110156100e157600080fd5b5035600160a060020a03166102a0565b60408051600160a060020a039092168252519081900360200190f35b34801561011957600080fd5b506100f16102bb565b34801561012e57600080fd5b50610137610300565b005b34801561014557600080fd5b506101376004803603602081101561015c57600080fd5b5035600160a060020a031661036a565b34801561017857600080fd5b506100f16104bd565b34801561018d57600080fd5b506100f16104cc565b3480156101a257600080fd5b506101ab61050c565b604080519115158252519081900360200190f35b3480156101cb57600080fd5b50610137600480360360208110156101e257600080fd5b5035600160a060020a031661051d565b3480156101fe57600080fd5b506101376004803603602081101561021557600080fd5b5035600160a060020a0316610572565b34801561023157600080fd5b506101376004803603602081101561024857600080fd5b5035600160a060020a03166105c4565b34801561026457600080fd5b506100f1610616565b34801561027957600080fd5b506101376004803603602081101561029057600080fd5b5035600160a060020a0316610656565b600260205260009081526040902054600160a060020a031681565b60006102fb6040805190810160405280601081526020017f434644466163746f72794c617465737400000000000000000000000000000000815250610672565b905090565b61030861050c565b151561031357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60006103746102bb565b60408051606081018252602881527f4f6e6c79206c61746573742043464420466163746f72792063616e206164642060208201527f6e657720434644730000000000000000000000000000000000000000000000009181019190915290915033600160a060020a03831614610481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561044657818101518382015260200161042e565b50505050905090810190601f1680156104735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600160a060020a039182166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600054600160a060020a031690565b60006102fb6040805190810160405280600381526020017f4441490000000000000000000000000000000000000000000000000000000000815250610672565b600054600160a060020a0316331490565b61052561050c565b151561053057600080fd5b61056f6040805190810160405280600481526020017f466565730000000000000000000000000000000000000000000000000000000081525082610703565b50565b61057a61050c565b151561058557600080fd5b61056f6040805190810160405280601081526020017f434644466163746f72794c61746573740000000000000000000000000000000081525082610703565b6105cc61050c565b15156105d757600080fd5b61056f6040805190810160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525082610703565b60006102fb6040805190810160405280600481526020017f4665657300000000000000000000000000000000000000000000000000000000815250610672565b61065e61050c565b151561066957600080fd5b61056f816107bf565b600060016000836040516020018082805190602001908083835b602083106106ab5780518252601f19909201916020918201910161068c565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f19018352845281519181019190912086528501959095529290920160002054600160a060020a031695945050505050565b61070b61050c565b151561071657600080fd5b8060016000846040516020018082805190602001908083835b6020831061074e5780518252601f19909201916020918201910161072f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505050565b600160a060020a03811615156107d457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820dd57606943402cf7dfc6fd964362ad04681600af7e03b0c77095194d2bb2103d0029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630c5a95f881146100be57806323ec7f2a1461010d578063715018a61461012257806376d00fd8146101395780638da5cb5b1461016c5780638ef85568146101815780638f32d59b14610196578063a275b704146101bf578063b4a86962146101f2578063b97dbf5914610225578063db8d55f114610258578063f2fde38b1461026d575b600080fd5b3480156100ca57600080fd5b506100f1600480360360208110156100e157600080fd5b5035600160a060020a03166102a0565b60408051600160a060020a039092168252519081900360200190f35b34801561011957600080fd5b506100f16102bb565b34801561012e57600080fd5b50610137610300565b005b34801561014557600080fd5b506101376004803603602081101561015c57600080fd5b5035600160a060020a031661036a565b34801561017857600080fd5b506100f16104bd565b34801561018d57600080fd5b506100f16104cc565b3480156101a257600080fd5b506101ab61050c565b604080519115158252519081900360200190f35b3480156101cb57600080fd5b50610137600480360360208110156101e257600080fd5b5035600160a060020a031661051d565b3480156101fe57600080fd5b506101376004803603602081101561021557600080fd5b5035600160a060020a0316610572565b34801561023157600080fd5b506101376004803603602081101561024857600080fd5b5035600160a060020a03166105c4565b34801561026457600080fd5b506100f1610616565b34801561027957600080fd5b506101376004803603602081101561029057600080fd5b5035600160a060020a0316610656565b600260205260009081526040902054600160a060020a031681565b60006102fb6040805190810160405280601081526020017f434644466163746f72794c617465737400000000000000000000000000000000815250610672565b905090565b61030861050c565b151561031357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60006103746102bb565b60408051606081018252602881527f4f6e6c79206c61746573742043464420466163746f72792063616e206164642060208201527f6e657720434644730000000000000000000000000000000000000000000000009181019190915290915033600160a060020a03831614610481576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561044657818101518382015260200161042e565b50505050905090810190601f1680156104735780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600160a060020a039182166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600054600160a060020a031690565b60006102fb6040805190810160405280600381526020017f4441490000000000000000000000000000000000000000000000000000000000815250610672565b600054600160a060020a0316331490565b61052561050c565b151561053057600080fd5b61056f6040805190810160405280600481526020017f466565730000000000000000000000000000000000000000000000000000000081525082610703565b50565b61057a61050c565b151561058557600080fd5b61056f6040805190810160405280601081526020017f434644466163746f72794c61746573740000000000000000000000000000000081525082610703565b6105cc61050c565b15156105d757600080fd5b61056f6040805190810160405280600381526020017f444149000000000000000000000000000000000000000000000000000000000081525082610703565b60006102fb6040805190810160405280600481526020017f4665657300000000000000000000000000000000000000000000000000000000815250610672565b61065e61050c565b151561066957600080fd5b61056f816107bf565b600060016000836040516020018082805190602001908083835b602083106106ab5780518252601f19909201916020918201910161068c565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f19018352845281519181019190912086528501959095529290920160002054600160a060020a031695945050505050565b61070b61050c565b151561071657600080fd5b8060016000846040516020018082805190602001908083835b6020831061074e5780518252601f19909201916020918201910161072f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a815481600160a060020a030219169083600160a060020a031602179055505050565b600160a060020a03811615156107d457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a72305820dd57606943402cf7dfc6fd964362ad04681600af7e03b0c77095194d2bb2103d0029",
  "sourceMap": "174:1881:4:-;;;;;515:6:11;:19;;-1:-1:-1;;;;;;515:19:11;524:10;515:19;;;;-1:-1:-1;;;;;582:6:11;;549:40;;515:6;;549:40;174:1881:4;;;;;;",
  "deployedSourceMap": "174:1881:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1696:42:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1696:42:4;-1:-1:-1;;;;;1696:42:4;;;;;;;-1:-1:-1;;;;;1696:42:4;;;;;;;;;;;;;;356:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;356:108:4;;;;1347:137:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:11;;;;;;1745:306:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1745:306:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1745:306:4;-1:-1:-1;;;;;1745:306:4;;;659:77:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:11;;;;764:87:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;764:87:4;;;;979:90:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:11;;;;;;;;;;;;;;;;;;;;;;674:84:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:84:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;674:84:4;-1:-1:-1;;;;;674:84:4;;;470:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:108:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;470:108:4;-1:-1:-1;;;;;470:108:4;;;857:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;857:82:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;857:82:4;-1:-1:-1;;;;;857:82:4;;;584:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:84:4;;;;1655:107:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:11;-1:-1:-1;;;;;1655:107:11;;;1696:42:4;;;;;;;;;;;;-1:-1:-1;;;;;1696:42:4;;:::o;356:108::-;408:7;434:23;;;;;;;;;;;;;;;;;;;:3;:23::i;:::-;427:30;;356:108;:::o;1347:137:11:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:11;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;1458:19:11;;;1347:137::o;1745:306:4:-;1796:25;1824:21;:19;:21::i;:::-;1967:29;;;;;;;;;;;;;;;;;;;;;;;;1796:49;;-1:-1:-1;1934:10:4;-1:-1:-1;;;;;1934:31:4;;;1926:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1926:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2007:17:4;;;;;;;:7;:17;;;;;:37;;-1:-1:-1;;2007:37:4;;;;;;;;1745:306::o;659:77:11:-;697:7;723:6;-1:-1:-1;;;;;723:6:11;659:77;:::o;764:87:4:-;803:5;833:10;;;;;;;;;;;;;;;;;;;:3;:10::i;979:90:11:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:11;1042:10;:20;;979:90::o;674:84:4:-;863:9:11;:7;:9::i;:::-;855:18;;;;;;;;733::4;;;;;;;;;;;;;;;;;;;745:5;733:3;:18::i;:::-;674:84;:::o;470:108::-;863:9:11;:7;:9::i;:::-;855:18;;;;;;;;541:30:4;;;;;;;;;;;;;;;;;;;565:5;541:3;:30::i;857:82::-;863:9:11;:7;:9::i;:::-;855:18;;;;;;;;915:17:4;;;;;;;;;;;;;;;;;;;926:5;915:3;:17::i;584:84::-;624:7;650:11;;;;;;;;;;;;;;;;;;;:3;:11::i;1655:107:11:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;1088:139:4:-;1144:12;1175:9;:45;1212:5;1195:23;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1195:23:4;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;1195:23:4;;1185:34;;;;;;;;;1175:45;;;;;;;;;;;;-1:-1:-1;1175:45:4;;-1:-1:-1;;;;;1175:45:4;;;-1:-1:-1;;;;;1088:139:4:o;945:137::-;863:9:11;:7;:9::i;:::-;855:18;;;;;;;;1070:5:4;1022:9;:45;1059:5;1042:23;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1042:23:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1042:23:4;;;1032:34;;;;;;1022:45;;;;;;;;;;;;:53;;;;;-1:-1:-1;;;;;1022:53:4;;;;;-1:-1:-1;;;;;1022:53:4;;;;;;945:137;;:::o;1906:183:11:-;-1:-1:-1;;;;;1979:22:11;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:11;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;2065:17:11;-1:-1:-1;;;;;2065:17:11;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./DBC.sol\";\n\ncontract Registry is DBC, Ownable {\n\n    string constant REASON_MUST_BE_LATEST_FACTORY = \"Only latest CFD Factory can add new CFDs\";\n\n    mapping(bytes32 => address) contracts;\n\n    function getCFDFactoryLatest() public view returns (address) {\n        return get(\"CFDFactoryLatest\");\n    }\n\n    function setCFDFactoryLatest(address _addr) public onlyOwner {\n        set(\"CFDFactoryLatest\", _addr);\n    }\n\n    function getFees() public view returns (address) {\n        return get(\"Fees\");\n    }\n\n    function setFees(address _addr) public onlyOwner {\n        set(\"Fees\", _addr);\n    }\n\n    function getDAI() public view returns (ERC20) {\n        return ERC20(get(\"DAI\"));\n    }\n\n    function setDAI(address _addr) public onlyOwner {\n        set(\"DAI\", _addr);\n    }\n\n    function set(string memory _name, address _addr) private onlyOwner {\n        contracts[keccak256(abi.encodePacked(_name))] = _addr;\n    }\n\n    function get(string memory _name) private view returns (address addr) {\n        addr = contracts[keccak256(abi.encodePacked(_name))];\n    }\n\n\n    /*\n     * A registry of ALL CFDs created across any version set of the contracts.\n     *\n     * The mapping is from CFD address to CFDFactory that created it.\n     *\n     * The main reason to keep this is for the CFD upgrade mechansim to have a\n     * way to know a given CFD was created correctly through the 0xFutures\n     * mechansim and is not some dummy contract trying to onboard through\n     * the upgrade mechanism.\n     */\n    // cfd to cfd factory\n    mapping(address => address) public allCFDs;\n\n    function addCFD(address _cfdAddr) public {\n        address cfdFactoryCurrent = getCFDFactoryLatest();\n        // only the latest deployed factory is allowed to add new CFDs\n        require(msg.sender == cfdFactoryCurrent, REASON_MUST_BE_LATEST_FACTORY);\n        allCFDs[_cfdAddr] = cfdFactoryCurrent;\n    }\n\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol-infura/contracts/Registry.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-03T13:38:48.210Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}