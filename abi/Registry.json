{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allCFDs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCFDFactoryLatest",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setCFDFactoryLatest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFees",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDAI",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setDAI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdAddr",
          "type": "address"
        }
      ],
      "name": "addCFD",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008054600160a060020a0319163317905561087e806100256000396000f3006080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630c5a95f881146100b357806323ec7f2a146100f0578063715018a61461010557806376d00fd81461011c5780638da5cb5b1461013d5780638ef8556814610152578063a275b70414610167578063b4a8696214610188578063b97dbf59146101a9578063db8d55f1146101ca578063f2fde38b146101df575b600080fd5b3480156100bf57600080fd5b506100d4600160a060020a0360043516610200565b60408051600160a060020a039092168252519081900360200190f35b3480156100fc57600080fd5b506100d461021b565b34801561011157600080fd5b5061011a610260565b005b34801561012857600080fd5b5061011a600160a060020a03600435166102cc565b34801561014957600080fd5b506100d461041f565b34801561015e57600080fd5b506100d461042e565b34801561017357600080fd5b5061011a600160a060020a036004351661046e565b34801561019457600080fd5b5061011a600160a060020a03600435166104c7565b3480156101b557600080fd5b5061011a600160a060020a036004351661051d565b3480156101d657600080fd5b506100d4610573565b3480156101eb57600080fd5b5061011a600160a060020a03600435166105b3565b600260205260009081526040902054600160a060020a031681565b600061025b6040805190810160405280601081526020017f434644466163746f72794c6174657374000000000000000000000000000000008152506105d3565b905090565b600054600160a060020a0316331461027757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60006102d661021b565b60408051606081018252602881527f4f6e6c79206c61746573742043464420466163746f72792063616e206164642060208201527f6e657720434644730000000000000000000000000000000000000000000000009181019190915290915033600160a060020a038316146103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a8578181015183820152602001610390565b50505050905090810190601f1680156103d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600160a060020a039182166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600054600160a060020a031681565b600061025b6040805190810160405280600381526020017f44414900000000000000000000000000000000000000000000000000000000008152506105d3565b600054600160a060020a0316331461048557600080fd5b6104c46040805190810160405280600481526020017f4665657300000000000000000000000000000000000000000000000000000000815250826106b9565b50565b600054600160a060020a031633146104de57600080fd5b6104c46040805190810160405280601081526020017f434644466163746f72794c617465737400000000000000000000000000000000815250826106b9565b600054600160a060020a0316331461053457600080fd5b6104c46040805190810160405280600381526020017f4441490000000000000000000000000000000000000000000000000000000000815250826106b9565b600061025b6040805190810160405280600481526020017f46656573000000000000000000000000000000000000000000000000000000008152506105d3565b600054600160a060020a031633146105ca57600080fd5b6104c4816107d5565b600060016000836040516020018082805190602001908083835b6020831061060c5780518252601f1990920191602091820191016105ed565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831061066f5780518252601f199092019160209182019101610650565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b600054600160a060020a031633146106d057600080fd5b8060016000846040516020018082805190602001908083835b602083106107085780518252601f1990920191602091820191016106e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831061076b5780518252601f19909201916020918201910161074c565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b600160a060020a03811615156107ea57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058205985976873cd1622ad7d40450fdbdc750a1655419dedf0fa57b049c5dd5ddff00029",
  "deployedBytecode": "0x6080604052600436106100ae5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630c5a95f881146100b357806323ec7f2a146100f0578063715018a61461010557806376d00fd81461011c5780638da5cb5b1461013d5780638ef8556814610152578063a275b70414610167578063b4a8696214610188578063b97dbf59146101a9578063db8d55f1146101ca578063f2fde38b146101df575b600080fd5b3480156100bf57600080fd5b506100d4600160a060020a0360043516610200565b60408051600160a060020a039092168252519081900360200190f35b3480156100fc57600080fd5b506100d461021b565b34801561011157600080fd5b5061011a610260565b005b34801561012857600080fd5b5061011a600160a060020a03600435166102cc565b34801561014957600080fd5b506100d461041f565b34801561015e57600080fd5b506100d461042e565b34801561017357600080fd5b5061011a600160a060020a036004351661046e565b34801561019457600080fd5b5061011a600160a060020a03600435166104c7565b3480156101b557600080fd5b5061011a600160a060020a036004351661051d565b3480156101d657600080fd5b506100d4610573565b3480156101eb57600080fd5b5061011a600160a060020a03600435166105b3565b600260205260009081526040902054600160a060020a031681565b600061025b6040805190810160405280601081526020017f434644466163746f72794c6174657374000000000000000000000000000000008152506105d3565b905090565b600054600160a060020a0316331461027757600080fd5b60008054604051600160a060020a03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60006102d661021b565b60408051606081018252602881527f4f6e6c79206c61746573742043464420466163746f72792063616e206164642060208201527f6e657720434644730000000000000000000000000000000000000000000000009181019190915290915033600160a060020a038316146103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a8578181015183820152602001610390565b50505050905090810190601f1680156103d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600160a060020a039182166000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600054600160a060020a031681565b600061025b6040805190810160405280600381526020017f44414900000000000000000000000000000000000000000000000000000000008152506105d3565b600054600160a060020a0316331461048557600080fd5b6104c46040805190810160405280600481526020017f4665657300000000000000000000000000000000000000000000000000000000815250826106b9565b50565b600054600160a060020a031633146104de57600080fd5b6104c46040805190810160405280601081526020017f434644466163746f72794c617465737400000000000000000000000000000000815250826106b9565b600054600160a060020a0316331461053457600080fd5b6104c46040805190810160405280600381526020017f4441490000000000000000000000000000000000000000000000000000000000815250826106b9565b600061025b6040805190810160405280600481526020017f46656573000000000000000000000000000000000000000000000000000000008152506105d3565b600054600160a060020a031633146105ca57600080fd5b6104c4816107d5565b600060016000836040516020018082805190602001908083835b6020831061060c5780518252601f1990920191602091820191016105ed565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831061066f5780518252601f199092019160209182019101610650565b51815160209384036101000a6000190180199092169116179052604080519290940182900390912086528501959095529290920160002054600160a060020a031695945050505050565b600054600160a060020a031633146106d057600080fd5b8060016000846040516020018082805190602001908083835b602083106107085780518252601f1990920191602091820191016106e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831061076b5780518252601f19909201916020918201910161074c565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0395909516949094179093555050505050565b600160a060020a03811615156107ea57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058205985976873cd1622ad7d40450fdbdc750a1655419dedf0fa57b049c5dd5ddff00029",
  "sourceMap": "205:1867:4:-;;;567:5:11;:18;;-1:-1:-1;;;;;;567:18:11;575:10;567:18;;;205:1867:4;;;;;;",
  "deployedSourceMap": "205:1867:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1713:42:4;-1:-1:-1;;;;;1713:42:4;;;;;;;;;-1:-1:-1;;;;;1713:42:4;;;;;;;;;;;;;;387:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:108:4;;;;1001:111:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:11;;;;;;1762:306:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1762:306:4;-1:-1:-1;;;;;1762:306:4;;;;;238:20:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:11;;;;795:87:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;795:87:4;;;;705:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;705:84:4;-1:-1:-1;;;;;705:84:4;;;;;501:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;501:108:4;-1:-1:-1;;;;;501:108:4;;;;;888:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;888:82:4;-1:-1:-1;;;;;888:82:4;;;;;615:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;615:84:4;;;;1274:103:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:11;-1:-1:-1;;;;;1274:103:11;;;;;1713:42:4;;;;;;;;;;;;-1:-1:-1;;;;;1713:42:4;;:::o;387:108::-;439:7;465:23;;;;;;;;;;;;;;;;;;;:3;:23::i;:::-;458:30;;387:108;:::o;1001:111:11:-;719:5;;-1:-1:-1;;;;;719:5:11;705:10;:19;697:28;;;;;;1077:5;;;1058:25;;-1:-1:-1;;;;;1077:5:11;;;;1058:25;;;1105:1;1089:18;;-1:-1:-1;;1089:18:11;;;1001:111::o;1762:306:4:-;1813:25;1841:21;:19;:21::i;:::-;1984:29;;;;;;;;;;;;;;;;;;;;;;;;1813:49;;-1:-1:-1;1951:10:4;-1:-1:-1;;;;;1951:31:4;;;1943:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1943:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2024:17:4;;;;;;;:7;:17;;;;;:37;;-1:-1:-1;;2024:37:4;;;;;;;;1762:306::o;238:20:11:-;;;-1:-1:-1;;;;;238:20:11;;:::o;795:87:4:-;834:5;864:10;;;;;;;;;;;;;;;;;;;:3;:10::i;705:84::-;719:5:11;;-1:-1:-1;;;;;719:5:11;705:10;:19;697:28;;;;;;764:18:4;;;;;;;;;;;;;;;;;;;776:5;764:3;:18::i;:::-;705:84;:::o;501:108::-;719:5:11;;-1:-1:-1;;;;;719:5:11;705:10;:19;697:28;;;;;;572:30:4;;;;;;;;;;;;;;;;;;;596:5;572:3;:30::i;888:82::-;719:5:11;;-1:-1:-1;;;;;719:5:11;705:10;:19;697:28;;;;;;946:17:4;;;;;;;;;;;;;;;;;;;957:5;946:3;:17::i;615:84::-;655:7;681:11;;;;;;;;;;;;;;;;;;;:3;:11::i;1274:103:11:-;719:5;;-1:-1:-1;;;;;719:5:11;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;1112:132:4:-;1161:12;1192:9;:45;1229:5;1212:23;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1212:23:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1212:23:4;;;1202:34;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1202:34:4;;;;;;;;;;;;;1192:45;;;;;;;;;;;;-1:-1:-1;1192:45:4;;-1:-1:-1;;;;;1192:45:4;;;-1:-1:-1;;;;;1112:132:4:o;976:130::-;719:5:11;;-1:-1:-1;;;;;719:5:11;705:10;:19;697:28;;;;;;1094:5:4;1046:9;:45;1083:5;1066:23;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1066:23:4;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1066:23:4;;;1056:34;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1056:34:4;;;;;;;;;;;;;1046:45;;;;;;;;;;;;-1:-1:-1;1046:45:4;:53;;-1:-1:-1;;1046:53:4;-1:-1:-1;;;;;1046:53:4;;;;;;;;;;;-1:-1:-1;;;;;976:130:4:o;1512:171:11:-;-1:-1:-1;;;;;1582:23:11;;;;1574:32;;;;;;1638:5;;;1617:38;;-1:-1:-1;;;;;1617:38:11;;;;1638:5;;;1617:38;;;1661:5;:17;;-1:-1:-1;;1661:17:11;-1:-1:-1;;;;;1661:17:11;;;;;;;;;;1512:171::o",
  "source": "pragma solidity ^0.4.23;\npragma experimental \"v0.5.0\";\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"./DBC.sol\";\n\ncontract Registry is DBC, Ownable {\n\n    string constant REASON_MUST_BE_LATEST_FACTORY = \"Only latest CFD Factory can add new CFDs\";\n\n    mapping(bytes32 => address) contracts;\n\n    function getCFDFactoryLatest() public view returns (address) {\n        return get(\"CFDFactoryLatest\");\n    }\n\n    function setCFDFactoryLatest(address _addr) public onlyOwner {\n        set(\"CFDFactoryLatest\", _addr);\n    }\n\n    function getFees() public view returns (address) {\n        return get(\"Fees\");\n    }\n\n    function setFees(address _addr) public onlyOwner {\n        set(\"Fees\", _addr);\n    }\n\n    function getDAI() public view returns (ERC20) {\n        return ERC20(get(\"DAI\"));\n    }\n\n    function setDAI(address _addr) public onlyOwner {\n        set(\"DAI\", _addr);\n    }\n\n    function set(string _name, address _addr) private onlyOwner {\n        contracts[keccak256(abi.encodePacked(_name))] = _addr;\n    }\n\n    function get(string _name) private view returns (address addr) {\n        addr = contracts[keccak256(abi.encodePacked(_name))];\n    }\n\n\n    /*\n     * A registry of ALL CFDs created across any version set of the contracts.\n     *\n     * The mapping is from CFD address to CFDFactory that created it.\n     *\n     * The main reason to keep this is for the CFD upgrade mechansim to have a\n     * way to know a given CFD was created correctly through the 0xFutures\n     * mechansim and is not some dummy contract trying to onboard through\n     * the upgrade mechanism.\n     */\n    // cfd to cfd factory\n    mapping(address => address) public allCFDs;\n\n    function addCFD(address _cfdAddr) public {\n        address cfdFactoryCurrent = getCFDFactoryLatest();\n        // only the latest deployed factory is allowed to add new CFDs\n        require(msg.sender == cfdFactoryCurrent, REASON_MUST_BE_LATEST_FACTORY);\n        allCFDs[_cfdAddr] = cfdFactoryCurrent;\n    }\n\n\n}\n",
  "sourcePath": "/home/julien/0xFutures/protocol/contracts/Registry.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-02-11T03:26:59.366Z"
}