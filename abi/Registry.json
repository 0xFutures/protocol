{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allCFDs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCFDFactoryLatest",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setCFDFactoryLatest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFees",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDAI",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setDAI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProxyCodeHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hash",
          "type": "bytes32"
        }
      ],
      "name": "setProxyCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cfdAddr",
          "type": "address"
        }
      ],
      "name": "addCFD",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allCFDs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCFDFactoryLatest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cfdAddr\",\"type\":\"address\"}],\"name\":\"addCFD\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDAI\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setFees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"setProxyCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setCFDFactoryLatest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setDAI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFees\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProxyCodeHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/DBC.sol\":{\"keccak256\":\"0x3fcf0d97ad97399402274b04b62f704f714bd84e0cf8d173337cdc983f1e8608\",\"urls\":[\"bzzr://30f2233a4e3d87dc3a395f921d8aed6139f911bbfb1677fa696a39639bcd005b\"]},\"/D/Users/Julien/Desktop/Work/0xFutures/protocol/contracts/Registry.sol\":{\"keccak256\":\"0xdd2e58003fe5316c50270a769a76b396fe6ed20aa388a607e725c74eb1d6c834\",\"urls\":[\"bzzr://2dde9105930aaadc93693bacba7f6c07fda48cf17bda63e4c0d97d8c4d3018c6\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610784806100576000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a275b7041161008c578063b97dbf5911610066578063b97dbf59146101fe578063db8d55f114610224578063e37af2d11461022c578063f2fde38b14610246576100ea565b8063a275b70414610195578063a6ab325c146101bb578063b4a86962146101d8576100ea565b806376d00fd8116100c857806376d00fd8146101435780638da5cb5b146101695780638ef85568146101715780638f32d59b14610179576100ea565b80630c5a95f8146100ef57806323ec7f2a14610131578063715018a614610139575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b031661026c565b604080516001600160a01b039092168252519081900360200190f35b610115610287565b6101416102c2565b005b6101416004803603602081101561015957600080fd5b50356001600160a01b031661031d565b610115610412565b610115610421565b61018161044a565b604080519115158252519081900360200190f35b610141600480360360208110156101ab57600080fd5b50356001600160a01b031661045b565b610141600480360360208110156101d157600080fd5b5035610498565b610141600480360360208110156101ee57600080fd5b50356001600160a01b03166104ae565b6101416004803603602081101561021457600080fd5b50356001600160a01b03166104f4565b61011561052d565b610234610557565b60408051918252519081900360200190f35b6101416004803603602081101561025c57600080fd5b50356001600160a01b031661055d565b6003602052600090815260409020546001600160a01b031681565b60006102bd604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd02815250610577565b905090565b6102ca61044a565b6102d357600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610327610287565b9050806001600160a01b0316336001600160a01b03161460405180606001604052806028815260200161073160289139906103e357604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a8578181015183820152602001610390565b50505050905090810190601f1680156103d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b60006102bd604051806040016040528060038152602001600160e81b6244414902815250610577565b6000546001600160a01b0316331490565b61046361044a565b61046c57600080fd5b610495604051806040016040528060048152602001600160e01b63466565730281525082610608565b50565b6104a061044a565b6104a957600080fd5b600255565b6104b661044a565b6104bf57600080fd5b610495604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd0281525082610608565b6104fc61044a565b61050557600080fd5b610495604051806040016040528060038152602001600160e81b624441490281525082610608565b60006102bd604051806040016040528060048152602001600160e01b634665657302815250610577565b60025490565b61056561044a565b61056e57600080fd5b610495816106c2565b600060016000836040516020018082805190602001908083835b602083106105b05780518252601f199092019160209182019101610591565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528452815191810191909120865285019590955292909201600020546001600160a01b031695945050505050565b61061061044a565b61061957600080fd5b8060016000846040516020018082805190602001908083835b602083106106515780518252601f199092019160209182019101610632565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6001600160a01b0381166106d557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f6e6c79206c61746573742043464420466163746f72792063616e20616464206e65772043464473a165627a7a72305820ac31d36b987773de75ffc2cc3fdaae47a8d44ae79c229cb44acd2cac371a75910029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a275b7041161008c578063b97dbf5911610066578063b97dbf59146101fe578063db8d55f114610224578063e37af2d11461022c578063f2fde38b14610246576100ea565b8063a275b70414610195578063a6ab325c146101bb578063b4a86962146101d8576100ea565b806376d00fd8116100c857806376d00fd8146101435780638da5cb5b146101695780638ef85568146101715780638f32d59b14610179576100ea565b80630c5a95f8146100ef57806323ec7f2a14610131578063715018a614610139575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b031661026c565b604080516001600160a01b039092168252519081900360200190f35b610115610287565b6101416102c2565b005b6101416004803603602081101561015957600080fd5b50356001600160a01b031661031d565b610115610412565b610115610421565b61018161044a565b604080519115158252519081900360200190f35b610141600480360360208110156101ab57600080fd5b50356001600160a01b031661045b565b610141600480360360208110156101d157600080fd5b5035610498565b610141600480360360208110156101ee57600080fd5b50356001600160a01b03166104ae565b6101416004803603602081101561021457600080fd5b50356001600160a01b03166104f4565b61011561052d565b610234610557565b60408051918252519081900360200190f35b6101416004803603602081101561025c57600080fd5b50356001600160a01b031661055d565b6003602052600090815260409020546001600160a01b031681565b60006102bd604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd02815250610577565b905090565b6102ca61044a565b6102d357600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000610327610287565b9050806001600160a01b0316336001600160a01b03161460405180606001604052806028815260200161073160289139906103e357604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103a8578181015183820152602001610390565b50505050905090810190601f1680156103d55780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b60006102bd604051806040016040528060038152602001600160e81b6244414902815250610577565b6000546001600160a01b0316331490565b61046361044a565b61046c57600080fd5b610495604051806040016040528060048152602001600160e01b63466565730281525082610608565b50565b6104a061044a565b6104a957600080fd5b600255565b6104b661044a565b6104bf57600080fd5b610495604051806040016040528060108152602001600160821b6f10d191119858dd1bdc9e53185d195cdd0281525082610608565b6104fc61044a565b61050557600080fd5b610495604051806040016040528060038152602001600160e81b624441490281525082610608565b60006102bd604051806040016040528060048152602001600160e01b634665657302815250610577565b60025490565b61056561044a565b61056e57600080fd5b610495816106c2565b600060016000836040516020018082805190602001908083835b602083106105b05780518252601f199092019160209182019101610591565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f190183528452815191810191909120865285019590955292909201600020546001600160a01b031695945050505050565b61061061044a565b61061957600080fd5b8060016000846040516020018082805190602001908083835b602083106106515780518252601f199092019160209182019101610632565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6001600160a01b0381166106d557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f6e6c79206c61746573742043464420466163746f72792063616e20616464206e65772043464473a165627a7a72305820ac31d36b987773de75ffc2cc3fdaae47a8d44ae79c229cb44acd2cac371a75910029",
  "sourceMap": "180:2182:3:-;;;;;515:6:19;:19;;-1:-1:-1;;;;;;515:19:19;524:10;515:19;;;;-1:-1:-1;;;;;582:6:19;;549:40;;515:6;;549:40;180:2182:3;;;;;;",
  "deployedSourceMap": "180:2182:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;180:2182:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1993:42:3;-1:-1:-1;;;;;1993:42:3;;:::i;:::-;;;;-1:-1:-1;;;;;1993:42:3;;;;;;;;;;;;;;398:110;;;:::i;1347:137:19:-;;;:::i;:::-;;2044:311:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2044:311:3;-1:-1:-1;;;;;2044:311:3;;:::i;659:77:19:-;;;:::i;822:89:3:-;;;:::i;979:90:19:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;728:86:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;728:86:3;-1:-1:-1;;;;;728:86:3;;:::i;1116:98::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1116:98:3;;:::i;516:110::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;516:110:3;-1:-1:-1;;;;;516:110:3;;:::i;919:84::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;919:84:3;-1:-1:-1;;;;;919:84:3;;:::i;634:86::-;;;:::i;1011:97::-;;;:::i;:::-;;;;;;;;;;;;;;;;1655:107:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:19;-1:-1:-1;;;;;1655:107:19;;:::i;1993:42:3:-;;;;;;;;;;;;-1:-1:-1;;;;;1993:42:3;;:::o;398:110::-;450:7;477:23;;;;;;;;;;;;;;-1:-1:-1;;;;;477:23:3;;;:3;:23::i;:::-;470:30;;398:110;:::o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:19;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:19;;;1347:137::o;2044:311:3:-;2096:25;2124:21;:19;:21::i;:::-;2096:49;;2250:17;-1:-1:-1;;;;;2236:31:3;:10;-1:-1:-1;;;;;2236:31:3;;2269:29;;;;;;;;;;;;;;;;;2228:71;;;;;-1:-1:-1;;;;;2228:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2228:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2310:17:3;;;;;;;:7;:17;;;;;:37;;-1:-1:-1;;;;;;2310:37:3;;;;;;;;2044:311::o;659:77:19:-;697:7;723:6;-1:-1:-1;;;;;723:6:19;659:77;:::o;822:89:3:-;861:5;892:10;;;;;;;;;;;;;;-1:-1:-1;;;;;892:10:3;;;:3;:10::i;979:90:19:-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:19;1042:10;:20;;979:90::o;728:86:3:-;863:9:19;:7;:9::i;:::-;855:18;;;;;;788::3;;;;;;;;;;;;;;-1:-1:-1;;;;;788:18:3;;;800:5;788:3;:18::i;:::-;728:86;:::o;1116:98::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1185:13:3;:21;1116:98::o;516:110::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;588:30:3;;;;;;;;;;;;;;-1:-1:-1;;;;;588:30:3;;;612:5;588:3;:30::i;919:84::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;978:17:3;;;;;;;;;;;;;;-1:-1:-1;;;;;978:17:3;;;989:5;978:3;:17::i;634:86::-;674:7;701:11;;;;;;;;;;;;;;-1:-1:-1;;;;;701:11:3;;;:3;:11::i;1011:97::-;1087:13;;1011:97;:::o;1655:107:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;1369:141:3:-;1425:12;1457:9;:45;1494:5;1477:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1477:23:3;;;;;;;26:21:-1;;;-1:-1;;22:32;6:49;;1477:23:3;;1467:34;;;;;;;;;1457:45;;;;;;;;;;;;-1:-1:-1;1457:45:3;;-1:-1:-1;;;;;1457:45:3;;;-1:-1:-1;;;;;1369:141:3:o;1222:139::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1348:5:3;1300:9;:45;1337:5;1320:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1320:23:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1320:23:3;;;1310:34;;;;;;1300:45;;;;;;;;;;;;:53;;;;;-1:-1:-1;;;;;1300:53:3;;;;;-1:-1:-1;;;;;1300:53:3;;;;;;1222:139;;:::o;1906:183:19:-;-1:-1:-1;;;;;1979:22:19;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:19;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:19;-1:-1:-1;;;;;2065:17:19;;;;;;;;;;1906:183::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./DBC.sol\";\r\n\r\ncontract Registry is DBC, Ownable {\r\n\r\n    string constant REASON_MUST_BE_LATEST_FACTORY = \"Only latest CFD Factory can add new CFDs\";\r\n\r\n    mapping(bytes32 => address) contracts;\r\n\r\n    bytes32 proxyCodeHash;\r\n\r\n    function getCFDFactoryLatest() public view returns (address) {\r\n        return get(\"CFDFactoryLatest\");\r\n    }\r\n\r\n    function setCFDFactoryLatest(address _addr) public onlyOwner {\r\n        set(\"CFDFactoryLatest\", _addr);\r\n    }\r\n\r\n    function getFees() public view returns (address) {\r\n        return get(\"Fees\");\r\n    }\r\n\r\n    function setFees(address _addr) public onlyOwner {\r\n        set(\"Fees\", _addr);\r\n    }\r\n\r\n    function getDAI() public view returns (ERC20) {\r\n        return ERC20(get(\"DAI\"));\r\n    }\r\n\r\n    function setDAI(address _addr) public onlyOwner {\r\n        set(\"DAI\", _addr);\r\n    }\r\n\r\n    function getProxyCodeHash() public view returns (bytes32) {\r\n        return proxyCodeHash;\r\n    }\r\n\r\n    function setProxyCodeHash(bytes32 _hash) public onlyOwner {\r\n        proxyCodeHash = _hash;\r\n    }\r\n\r\n    function set(string memory _name, address _addr) private onlyOwner {\r\n        contracts[keccak256(abi.encodePacked(_name))] = _addr;\r\n    }\r\n\r\n    function get(string memory _name) private view returns (address addr) {\r\n        addr = contracts[keccak256(abi.encodePacked(_name))];\r\n    }\r\n\r\n\r\n    /*\r\n     * A registry of ALL CFDs created across any version set of the contracts.\r\n     *\r\n     * The mapping is from CFD address to CFDFactory that created it.\r\n     *\r\n     * The main reason to keep this is for the CFD upgrade mechansim to have a\r\n     * way to know a given CFD was created correctly through the 0xFutures\r\n     * mechansim and is not some dummy contract trying to onboard through\r\n     * the upgrade mechanism.\r\n     */\r\n    // cfd to cfd factory\r\n    mapping(address => address) public allCFDs;\r\n\r\n    function addCFD(address _cfdAddr) public {\r\n        address cfdFactoryCurrent = getCFDFactoryLatest();\r\n        // only the latest deployed factory is allowed to add new CFDs\r\n        require(msg.sender == cfdFactoryCurrent, REASON_MUST_BE_LATEST_FACTORY);\r\n        allCFDs[_cfdAddr] = cfdFactoryCurrent;\r\n    }\r\n\r\n\r\n}\r\n",
  "sourcePath": "D:\\Users\\Julien\\Desktop\\Work\\0xFutures\\protocol\\contracts\\Registry.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-05-16T06:11:23.261Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}